public Data get Selected Data ( ) { String all Selected get Selected ( ) ; ( all Selected all Selected is Empty ( ) ) { ; } return get Tree Model ( ) . get Example Data ( row Index ) ; } return null ; }<CODESPLIT>Get the example which is selected in the tree .
public void At )   Dim View Dim View ) m Dim View . set Visibility ( VISIBLE ) ; m Dim View . set Background Color ( m Dim Color ) ; } m Dim View . set Alpha ( alpha ) ; }<CODESPLIT>Set the dim - behind layer a specific opacity .
public extract ( ) { extract SW start ( ) ; SPT spt ; set ( adj ) ; ; ( Valid ) { Valid = Edge Iterator . Edge . is Valid ( curr Edge . parent . edge ) ; process Edge ( curr Edge . edge , curr Edge . adj Node , next Edge ) ; } set From Node ( curr Edge . adj Node ) ; reverse Order ( ) ; extract SW . stop ( ) ; return set Found ( true ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public static write Int ( , , value ) { ( byte ) ( value >>> 24 ) ; target [ offset + 1 ] = ( byte ) ( value >>> 16 ) ; return Integer . BYTES ; }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
private void visit expect Match JS JS Type ( n . get Last Child ( ) ) ) ; ensure Typed ( n ) ; }<CODESPLIT>Visits a GETELEM node .
private static Class get Typed Class ( reflect Type type ) { ( type Class ) { ( ( Class ) type ) ; } ( type Parameterized Type ) { get Typed Class ( raw Paramterized Type ) ; } ( type Type Variable ) { get Typed Class ( upper Bound ) ; } Argument Exception ( " Error while finding generic class for :" + type ) ; }<CODESPLIT>Gets the typed class .
public ( Jimfs ) { to Uri ( uri , path . to Absolute Path ( ) ) ; }<CODESPLIT>Gets the URI of the given path in this file system .
public Interface get Interface ( ) { ( Interface == null ) { } return activity Interface ; }<CODESPLIT>Get the ActivityInterface .
private void init Before List ( ) { List Process Advice before Request Process Advices Array List ( ) ; Method invoke get ( ) ; Class processor Class invoke . get Class ( ) ; ( processor Class processor Class . is Annotation Present ( Before . class ) ) { for ( int i = 0 ; i < bcs . length ; i ++ ) { before Request Process Advices . add ( before Request Process Advice ) ; } } if ( invoke Holder . is Annotation Present ( Before . class ) ) { for ( int i = 0 ; i < bcs . length ; i ++ ) { final Class < ? extends Process Advice > bc = bcs [ i ] ; before Request Process Advices . add ( before Request Process Advice ) ; } } }<CODESPLIT>Initializes before process advices .
private void init ) js ) ; js configure ALLOW _ COMMENTS , true ) ; js Factory . configure ( Json Parser . Feature . ALLOW _ SINGLE _ QUOTES , true ) ; }<CODESPLIT>Creates the JsonFactory .
static void Leaks Looper looper ) { looper ) { public void handle ) { send Delayed ( obtain Message ( ) , THREAD _ LEAK _ CLEANING _ MS ) ; } } ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
public void add Reset ) { buttons ) buttons At ) ; extend Row ) add null , e ) ; else buttons . add ( e ) ; }<CODESPLIT>Add a reset button .
public static get Volume ) Audio ) get AUDIO ) ) get Volume Audio Manager . STREAM _ MUSIC ) ; }<CODESPLIT>Returns maximum volume the media volume can have
public void remove SR Es ( ISRE Install ... sres ) { ISRE Install SRE get SRE ( ) ; String Id SRE SRE get Id ( ) ; ; ( Id ) { String normed Id To Empty ( Id ) ; boolean Is ; for ( final ISRE Install sre : sres ) { default Is Removed = true ; } refresh SRE List UI ( ) ; if ( default Is Removed ) { if ( this . sre Table . get Item Count ( ) == 0 ) { set Selection ( null ) ; } else { if ( default Index < 0 ) { } else if ( default Index >= this . sre Table . get Item Count ( ) ) { default Index = this . sre Table . get Item Count ( ) - 1 ; this . sres List . refresh ( true ) ; if ( default Is Removed ) { fire Default SRE Changed ( ) ; update UI ( ) ;<CODESPLIT>Removes the given SREs from the table .
public static Wiki User get User ( String wiki , String siteurl ) { Wiki User ; { get ( wiki ) ; Wiki User ( ) ; set ( get ( user ) ) ; set Email ( . get Property ( " email " ) ) ; } catch ( File Not Found Exception e ) { String msg = help ( wiki Id , siteurl ) ; LOGGER . log ( Level . SEVERE , msg ) ; } catch ( IO Exception e ) { } catch ( General Security Exception e ) { } return result ; }<CODESPLIT>get the Wiki user for the given wikiid
public ( ) { retry Count ; do { delegate ( ) ; ( Generated contains ( ) ) { already Generated . add ( next ) ; return next ; } retry Count ++ ; } while ( retry Count <= number Of Retries ) ; }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
private boolean Inside ) get ) get ) LI ) ) get ) != Node . TEXT _ NODE || node . get Node Value ( ) . trim ( ) . length ( ) == 0 ) ; }<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static Residue match Sequence To Protein Sequence seq struct ) Group atom Position Group ) Protein Sequence struct Seq get Protein Sequence For struct atom Position ) Aligned Sequence Protein Sequence Amino Acid Compound aligned Seq pair get ) Aligned Sequence Protein Sequence Amino Acid Compound aligned Struct pair get ) aligned Seq get ) aligned Struct get ) ) Residue ] ca = new Residue Number [ seq . get Length ( ) ] ; for ( int pos = aligned Seq . get Start ( ) . get Position ( ) ; pos <= aligned Seq . get End ( ) . get Position ( ) ; pos ++ ) { if ( aligned Seq . is Gap ( pos ) ) { int struct Index = aligned Struct . get Sequence Index At ( pos ) - 1 ; assert ( struct Index > 0 ) ; Group g = atom Index Position . get ( struct Index ) ; continue ; } if ( ! aligned Struct . is Gap ( pos ) ) { int seq Index = aligned Seq . get Sequence Index At ( pos ) - 1 ; int struct Index = aligned Struct . get Sequence Index At ( pos ) - 1 ; Group g = atom Index Position . get ( struct Index ) ; assert ( 0 <= seq Index && seq Index < ca . length ) ; ca [ seq Index ] = g . get Residue Number ( ) ; } } return ca ; }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
public static merge ( , , , 2 ) { Entry String , Object set map ( ) ; Entry String , Object set 2 map 2 Set ( ) ; Map < String , Object > rep = new Hash Map < String , Object > ( ) ; for ( Entry < String , Object > entry 1 : set 1 ) { String key 1 = entry 1 . get Key ( ) ; if ( map 2 . contains Key ( key 1 ) ) { Object value 1 = map 1 . get ( key 1 ) ; Object value 2 = map 2 . get ( key 1 ) ; if ( value 1 instanceof Double ) { rep . put ( key 1 , value 2 ) ; } else if ( value 1 instanceof Integer ) { rep . put ( key 1 , value 2 ) ; } } else if ( value 1 instanceof Long ) { rep . put ( key 1 , value 2 ) ; } } if ( value 1 instanceof Boolean ) { rep . put ( key 1 , value 2 ) ; } } } set 1 . remove All ( rep . entry Set ( ) ) ; set 1 . add All ( rep . entry Set ( ) ) ; set 1 . add All ( set 2 ) ; return meta Data 1 ;<CODESPLIT>Merges the two Meta objects
public List sub List ( , ) { move Next ( ) ; } unmodifiable List ( all Results . sub List ( arg 0 , arg 1 ) ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private prepare ( Recipient recipients ) { set ( cwf pub ) ; . set Metadata ( " cwf . pub . channel " , channel ) ; message . set Metadata ( " cwf . pub . event " , UUID . random UUID ( ) . to String ( ) ) ; return message ; }<CODESPLIT>Adds publication - specific metadata to the message .
private T Graph Request T ( String object , Type type , Param ... params ) { this . check For Batch Execution ( ) ; this . graph Requests . add ( req ) ; return req ; }<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void write Length ( long ) { ( 251 ) { } ( 65536 ) { [ ++ ] = ( byte ) ( length >>> 8 ) ; } else if ( length < 16777216 ) { buf [ position ++ ] = ( byte ) ( length >>> 8 ) ; buf [ position ++ ] = ( byte ) ( length >>> 16 ) ; } else { buf [ position ++ ] = ( byte ) ( length >>> 8 ) ; buf [ position ++ ] = ( byte ) ( length >>> 16 ) ; buf [ position ++ ] = ( byte ) ( length >>> 24 ) ; buf [ position ++ ] = ( byte ) ( length >>> 32 ) ; } }<CODESPLIT>Write length .
public static Result Result map ( Result ) { ( Empty ( ) ) { ( ) ; } for ( T Source item : items ) { T Result mapped Item = mapper . map ( item ) ; result . add ( mapped Item ) ; } return result ; }<CODESPLIT>Projects each element of a collection into a new collection .
private static void serialize Real Content ) serialize Of real . double Value ( ) ) , handler ) ; }<CODESPLIT>Serialize a Number as a real element .
public Bar ( Action Listener Action , boolean Add Help ) { Resource Resources = . get Resource ( ) ; . get Resources ( , ) ; this . Actions ( Action ) ; Bar Bar = Bar ( ) { private static long serial UID = 1 L ; public Dimension get Maximum Size ( ) { return new Dimension ( super . get Maximum Size ( ) . width , super . get Preferred Size ( ) . height ) ; } } ; menu Bar . set Opaque ( false ) ; char [ ] rgch Item Shortcuts = new char [ 20 ] ; menu = this . add Menu ( menu Bar , Thin Menu Constants . FILE ) ; this . add Menu Item ( menu , Thin Menu Constants . PRINT , rgch Item Shortcuts ) ; menu . add Separator ( ) ; this . add Menu Item ( menu , Thin Menu Constants . LOGON , rgch Item Shortcuts ) ; menu . add Separator ( ) ; rgch Item Shortcuts = new char [ 20 ] ; menu = this . add Menu ( menu Bar , Thin Menu Constants . EDIT ) ; menu . add Separator ( ) ; return menu Bar ; }<CODESPLIT>Setup the standard menu items .
public static get Attribute For Lane ) prefs ) prefs get LANE COUNT NAME " , DEFAULT _ ATTR _ LANE _ COUNT ) ; } return DEFAULT _ ATTR _ LANE _ COUNT ; }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public static nsrollbackcmd get ( nitro nsrollbackcmd ) { nsrollbackcmd nsrollbackcmd ( ) ; option ( ) ; option set ( nitro _ util . object _ to _ string _ withoutquotes ( args ) ) ; return response ; }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private Element ( ) { ( List 0 ) { i ; } int j = 0 ; j += rule . get Element No ( ) . get ( k ) ; } return j ; }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
public get Proxy Hosts White ) { Hosts White Hosts White ) ) String [ 0 ] ; hosts = ( String [ ] ) _ proxy Hosts White List . to Array ( hosts ) ; return hosts ; }<CODESPLIT>Get proxy host white list .
public boolean add Metatype Ad ( Metatype Ad metatype Ad ) { ( this metatype Ads ) this metatype Ads List Metatype Ad ( ) ; this . metatype Ads . add ( metatype Ad ) ; return true ; }<CODESPLIT>Adds a metatype AD .
public ) { Input Stream available ) >= ) { Input Stream ) ; Input Stream close ) ; ; { Input Stream new Buffered Input Stream ( m Object . get Data Input Stream ( ) ) ; } catch ( Service Exception e ) { throw new IO Exception ( e ) ; } return n ; }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
public static boolean is Super ( JC tree ) { Name name Method Name ( tree ) ; name ; } { return false ; } }<CODESPLIT>Is this a call to super?
public static get Request ( from Method boolean include Request request ) { ( ) ; append ( ) append ( 8601 get ( ) ) append ( "\ ) ; append ( from Method ) append ( from Method ) append ( "\ ) ; dump . append ( " Method : " ) . append ( request . get Method ( ) ) . append ( '\ n ' ) ; dump . append ( " Scheme : " ) . append ( request . get Scheme ( ) ) . append ( '\ n ' ) ; dump . append ( " URI : " ) . append ( request . get Request URI ( ) ) . append ( '\ n ' ) ; dump . append ( " Query - String : " ) . append ( request . get Query String ( ) ) . append ( '\ n ' ) ; if ( include Headers ) { dump . append ( " Headers :\ n " ) ; Enumeration < String > headers = request . get Header Names ( ) ; while ( headers . has More Elements ( ) ) { String header = headers . next Element ( ) ; } } return ( dump . to String ( ) ) ; }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
public static void validate To boolean ) validate To ) ; To Check . length ( ) == 0 || ( trim && string To Check . trim ( ) . length ( ) == 0 ) ) { } }<CODESPLIT>Validates that the string is not null and not an empty string .
public static create With Vertical Layout ( ) { J Panel _ panel = new J Panel ( ) ; return _ panel ; }<CODESPLIT>Create a panel that lays out components vertically .
protected boolean Analyze ) { analyzer ) { Analyzer . accept ( dependency . get Actual File ( ) ) ; } return true ; }<CODESPLIT>Determines if the analyzer can analyze the given dependency .
public void register ( ) { Classes . put ( service Class . get Simple Name ( ) , service Class ) ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
public get Title ) get Page Content Title "& rvsection =" section Number , false ) ; return result ; }<CODESPLIT>get the text for the given section
public static double pearson ) { ) [% ], y [% d ]" , x . length , y . length ) ) ; return 1 - Math . cor ( x , y ) ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
public static Tile get Tile From WGS 84 ( , zoom ) { return get Tile Grid ( point , zoom , projection ) ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
public Layer get Layers ) { Layer layer layers ) { layer Vector Layer ) { list . add ( ( Vector Layer ) layer ) ; } } return list ; }<CODESPLIT>Return a list containing all vector layers within this model .
centered ) { Product ) ; } { xref Calc clone ) ; xtrans Calc centroid ( xref ) ; logger . debug ( " x centroid : " + xtrans ) ; xtrans . negate ( ) ; yref = Calc Point . clone Point 3 d Array ( y ) ; ytrans = Calc Point . centroid ( yref ) ; ytrans . negate ( ) ; inner Product ( yref , xref ) ; } calc Rmsd ( wsum ) ; }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public void set Heading ( Title v ) { Type . ll _ cas . ll _ set Value ( addr , ( ( Section _ Type ) jcas Type ) . cas Feat Code _ section Heading , jcas Type . ll _ cas . ll _ get FS Ref ( v ) ) ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public Response process ( Input Stream is ) , , Configuration { Sxmp Sxmp ( ) ; Operation ; { parse ( is ) ; } ( Sxmp ) { } { ( get ( ) , ) ; } } { ( ( Request ) ) { ( get Account ( ) == null ) { if ( ! processor . authenticate ( req . get Account ( ) ) ) { throw new Sxmp Error Exception ( Sxmp Error Code . AUTHENTICATION _ FAILURE , " Authentication failure " ) ; } if ( operation instanceof Submit Request ) { return processor . submit ( req . get Account ( ) , ( Submit Request ) operation ) ; } else if ( operation instanceof Deliver Request ) { return processor . deliver ( req . get Account ( ) , ( Deliver Request ) operation ) ; } else if ( operation instanceof Delivery Report Request ) { return processor . delivery Report ( req . get Account ( ) , ( Delivery Report Request ) operation ) ; } else { } } catch ( Sxmp Error Exception e ) { logger . warn ( e . get Message ( ) ) ; } catch ( Throwable t ) { logger . error ( " Major uncaught throwable while processing request , generating an Error Response " , t ) ; return new Error Response ( operation . get Type ( ) , Sxmp Error Code . GENERIC . get Int Value ( ) , " Generic error while processing request " ) ;<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
( redirect contains ( url ) ) { Push Sender ( The site contains an redirect url url ) ; { redirect add ( url ) ; Http URL Connection http URL Connection ; { String Id ':' master ; String encode ( get ( ) ) ; int status http URL Connection . get Response Code ( ) ; if ( is Redirect ( status Code ) ) { String redirect URL = http URL Connection . get Header Field ( " Location " ) ; else if ( status Code >= 400 ) { logger . log ( Level . SEVERE , " The Unified Push Server returned status code : " + status Code ) ; throw new Push Sender Http Exception ( status Code ) ; else { if ( callback != null ) { callback . on Complete ( ) ; catch ( Push Sender Http Exception pshe ) { throw pshe ; catch ( Exception e ) { logger . log ( Level . INFO , " Error happening while trying to send the push delivery request " , e ) ; throw new Push Sender Exception ( e . get Message ( ) , e ) ; finally { if ( http URL Connection != null ) { http URL Connection . disconnect ( ) ;<CODESPLIT>The actual method that does the real send and connection handling
public String get Child ( ) { ( ( ) 0 ) EMPTY NAMES ; String String . size ( ) ] ; for ( int i = 0 ; i < arr . length ; i ++ ) { } return arr ; }<CODESPLIT>Gibt den Feldnamen children zurueck .
public static Object get ( Object array , index ) Target Error { Interpreter ( get , array , index =" , index ) ; { ( array ) ( ( ) array ) get ( index ) ; Object Array get ( array , index ) ; Primitive wrap ( val , Types . array Element Type ( array . get Class ( ) ) ) ; } catch ( Index Out Of Bounds Exception e 1 ) { } }<CODESPLIT>Get object from array or list at index .
public static add nitro aaakcdaccount ) { aaakcdaccount addresource aaakcdaccount ) ; addresource kcdaccount = resource . kcdaccount ; addresource . keytab = resource . keytab ; addresource . realmstr = resource . realmstr ; return addresource . add _ resource ( client ) ; }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized void ( ) { ( Trace Tracing ( ) tc ( ) ) Sib Tr ( tc ) ; boolean interrupted ; ( ( ) ) { { ( Trace Tracing ( ) tc ( ) ) Sib Tr debug ( this , tc , " Waiting to get exclusive lock " ) ; wait ( 1000 ) ; } catch ( Interrupted Exception e ) { interrupted = true ; } } while ( i Lock Count > 0 ) { try { wait ( 1000 ) ; } catch ( Interrupted Exception e ) { interrupted = true ; } } if ( interrupted ) { Thread . current Thread ( ) . interrupt ( ) ; } }<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
public void set CP Option liferay commerce CP Option Option cp Option Value Local Service = cp Option Value Local Service ; }<CODESPLIT>Sets the cp option value local service .
public static infer From Declaration ) { Declaration get ) ; '/' get ( ) . replace ( '.' , '/' ) : "/" ;<CODESPLIT>Infers the Struts module path from the given controller class .
get Leap Month ( cycle , year Of Cycle ) { leap Months get Leap Months ( ) ; Years ( cycle ) year Of Cycle ; lm 0 ; while ( ( index < leap Months . length ) ) { int test = leap Months [ index ] ; if ( test < elapsed Years ) { } else if ( test > elapsed Years ) { break ; else { break ; return lm ;<CODESPLIT>number of leap month or zero if no leap year
public Snippet get Snippet snippet boolean download Content ) Git Lab { snippet ) { } get OK , null , " snippets " , snippet Id ) ; Snippet snippet = response . read Entity ( Snippet . class ) ; if ( download Content ) { } return snippet ; }<CODESPLIT>Get a specific Snippet .
public get ( ) { value ; ix ; ( >= ) { ( d 800 ( dbff ffff ) ) { ix ( ix << UTRIE _ INDEX _ SHIFT ) + ( code Point & UTRIE 2 _ DATA _ MASK ) ; return value ; } if ( code Point <= 0 xffff ) { ix = ( ix << UTRIE 2 _ INDEX _ SHIFT ) + ( code Point & UTRIE 2 _ DATA _ MASK ) ; return value ; } if ( code Point < high Start ) { ix += ( code Point >> UTRIE 2 _ SHIFT _ 2 ) & UTRIE 2 _ INDEX _ 2 _ MASK ; ix = ( ix << UTRIE 2 _ INDEX _ SHIFT ) + ( code Point & UTRIE 2 _ DATA _ MASK ) ; return value ; } if ( code Point <= 0 x 10 ffff ) { return value ; } } return error Value ; }<CODESPLIT>Get the value for a code point as stored in the Trie2 .
public static get Attribute ( ) JM { get M Bean Server ( ) ; return server . get Attribute ( obj Name , attr Name ) ; }<CODESPLIT>Get MBean attribute object
public synchronized void set Selected ( selected ) { ( ( ) selected selected ) { Out Of ( argument set Selected selected ) ; } = this . selected Index ; this . selected Index = selected Index ; if ( selected Index == - 1 ) { update Text ( "" ) ; } else { update Text ( items . get ( selected Index ) . to String ( ) ) ; } invalidate ( ) ; }<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
public Photo photo Date ) Flickr PHOTO STATS " photo _ id " , photo Id , date ) ; }<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public Service Document get Document ( Get Document get Document ) { Validator . not Null ( get Document , get Document cannot ) ; String [ path Segments = { ; String [ path Parameters = { ; . query ( version , version Date ) ; for ( Entry < String , String > header : sdk Headers . entry Set ( ) ) { builder . header ( header . get Key ( ) , header . get Value ( ) ) ; } builder . header ( " Accept " , " application / json " ) ; return create Service Call ( builder . build ( ) , Response Converter Utils . get Object ( Document Status . class ) ) ; }<CODESPLIT>Get document details .
public Pager Closes Issues Or merge Iid Per Page Git Lab Pager Per Page projects Or Path ( project Id Or Path ) , " merge _ requests " , merge Request Iid , " closes _ issues " ) ; }<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public static void loge ( Class , String , ... ) { ( ) { String exception ; ( ) { String sw String ( ) ; Print pw = new Print Writer ( sw ) ; e [ 0 ] . print Stack Trace ( pw ) ; pw . flush ( ) ; exception Str = " exception = " + sw . to String ( ) ; } } }<CODESPLIT>To output the error log message to the error out
public static TH Style Content body ) { ) htmltree add Style style Class ) ; htmltree . add Attr ( Html Attr . SCOPE , null Check ( scope ) ) ; return htmltree ; }<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
private void obtain Divider Margin theme Typed typed Theme obtain Styled theme material Dialog Divider Margin set Divider Margin ( typed Array . get Dimension Pixel Size ( 0 , 0 ) ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
public void set Button Button button Screen set Button button button . get Screen Field View ( ) ) ; }<CODESPLIT>Set the default button for this basepanel .
public Key select ( int k ) { Red Black Key , Value select ( , k ) ; return x . get Key ( ) ; }<CODESPLIT>Return the kth smallest key in the symbol table .
public void add Request ) write ) ) ; try { new Session Requests . add ( request ) ; } finally {<CODESPLIT>Adds a request handler to this queue .
public static with Print Closure Print ) Closure > closure ) throws IO Exception { return with Writer ( new Print Writer ( stream ) , closure ) ; }<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
public void add Route Actor actor Route add Route Route url Pattern , true ) , actor Class ) ; }<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void send Queued Events ( Keen , Keen ) { ( is Active ) { handle Inactive ( ) ; ; ( ) { ; ( is Network Connected ( ) ) { handle Failure ( , ( Network not ." ) ) ; ; Keen ( default Project : project ) ; try { String project Id = use Project . get Project Id ( ) ; String response = publish All ( use Project , events ) ; if ( response != null ) { try { handle Add Events Response ( event Handles , response ) ; catch ( Exception e ) { Keen Logging . log ( " Error handling response to batch publish : " + e . get Message ( ) ) ; handle Success ( callback ) ; catch ( Exception e ) { handle Failure ( callback , e ) ;<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public Queued Blocking Blocking ) . get Queue ( ) ) . size ( ) + ( ( Array Blocking Queue ) get Thread Pool ( ) . get Queue ( ) ) . remaining Capacity ( ) : - 1 ) ; }<CODESPLIT>this should only be used as an estimate
final public Auxiliary Root ( boolean Foot ) throws Parse { boolean 000 = ; jjtree . open Node Scope ( 000 ) ; { = Node ( ) ; jjtree . close Node Scope ( 000 , ) ; ( Throwable jjte 000 ) { ( 000 ) { jjtree . clear Node Scope ( jjtn 000 ) ; else { jjtree . pop Node ( ) ; if ( jjte 000 instanceof Runtime Exception ) { { } } if ( jjte 000 instanceof Parse Exception ) { { } } finally { if ( jjtc 000 ) { jjtree . close Node Scope ( jjtn 000 , true ) ;<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
Directory add To Parent ( , Directory , , boolean propagate Mod Time , int child Index ) { Directory Parent = ; write ( ) ; { { Name ( ) ; } ( File Not Found ) { ; } ( Parent null ) return null ; if ( ! new Node . is Directory ( ) ) { I Node File new F = ( I Node File ) new Node ; for ( int i = 0 ; i < blocks . length ; i ++ ) { } } } finally { write Unlock ( ) ; } return new Parent ; }<CODESPLIT>Add node to parent node when loading the image .
public void set ( Mind Map model , boolean notify Change ) { this . ( ) ; { ( this . Under ) { } ( Topic this . selected Topics ) { selected . add ( . get Position Path ( ) ) ; this . selected Topics . clear ( ) ; Mind Map this . model ; } do Layout ( ) ; revalidate ( ) ; boolean Changed ; ( int pos Path : selected Paths ) { if ( topic == null ) { selection Changed = true ; } else if ( ! Mind Map Utils . is Hidden ( topic ) ) { this . selected Topics . add ( topic ) ; } } if ( selection Changed ) { fire Notification Selection Changed ( ) ; repaint ( ) ; finally { this . unlock ( ) ; if ( notify Model Change Listeners ) { fire Notification Mind Map Changed ( true ) ;<CODESPLIT>Set model for the panel allows to notify listeners optionally .
public Operation Future Balancer delete ( Balancer load Balancer ) { Balancer load Balancer find By ( load Balancer ) ; Operation Future > ( load Balancer , new No Waiting Job Future ( ) ) ; }<CODESPLIT>Delete load balancer
public Get get Get Request request ) { check Not request request not ." ) ; check Not request get ) , " request snapshot Id should no be empty ." ) ; return invoke Http Client ( internal Request , Get Snapshot Response . class ) ; }<CODESPLIT>Getting the detail information of specified snapshot .
void Loggers ) { { Bugsnag Appender add Excluded apache catalina ." "\\[ Tomcat .*\\][.]\\[.*\\][.]\\[/.*\\][.]\\[.*\\]" ) ; Bugsnag Appender add Excluded eclipse jetty server . Http Channel " ) ; } catch ( No Class Def Found Error ignored ) { } }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public void subtract relationships ) { ) { Error ) ; } i ] ) { continue ; } set . add All ( base [ i ] ) ; if ( null != relationships . data [ i ] ) { set . remove All ( relationships . data [ i ] ) ; }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static E E get ( Class E type , String name , Reflections reflections ) { E ; ( Class E clazz ) { ( ! is ( clazz get Modifiers ( ) ) ) { add ( clazz ) ; } } Iterator Class E iterator endpoint Classes . iterator ( ) ; while ( iterator . has Next ( ) ) { Class < ? extends E > next = iterator . next ( ) ; iterator . remove ( ) ; } } if ( endpoint Classes . size ( ) != 0 ) { if ( endpoint Classes . size ( ) > 1 ) { } try { result = endpoint Classes . iterator ( ) . next ( ) . new Instance ( ) ; } catch ( Exception e ) { e . print Stack Trace ( ) ; } } return result ; }<CODESPLIT>Locates a single endpoint class .
public void ( AO Stream ) { ( Trace Component Tracing ( ) tc ( ) ) Sib Tr ( tc ) ; SIMP get Remote Get ( get Remote ME Uuid ( ) get Gathering Target Uuid ( ) ) ; Stream sinfo get ( ) ; ( ( sinfo ) sinfo ( ) ) { synchronized ( sinfo ) { } } else { FFDC Filter . process Exception ( e , " com . ibm . ws . sib . processor . impl . Anycast Output Handler . written Started Flush " , " 1 : 2865 : 1 . 89 . 4 . 1 " , this ) ; Sib Tr . exception ( tc , e ) ; if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " written Started Flush " , e ) ; throw e ; } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " written Started Flush " ) ; }<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public static get Subreports ( report ) { subreports ( ) ; Band band report get Band ( ) ; Band Element > list = band . get Row ( i ) ; Band Element be = list . get ( j ) ; if ( be instanceof Report Band Element ) { subreports . add ( ( ( Report Band Element ) be ) . get Report ( ) ) ; } return subreports ;<CODESPLIT>Get detail band subreports for a report layout
public App get Apps ) Hello Sign App http Client ) get API APP LIST URI ) . as Json ( ) ) ; }<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public void ( Object Vm ) { { ( Vm ) { Class clazz Vm . get Class ( ) ; Method method clazz . get Method ( ) ; method . set ( ) ; method . invoke ( p Vm ) ; catch ( Invocation Target Exception e ) { catch ( No Such Method Exception e ) { catch ( Illegal Access Exception e ) {<CODESPLIT>Detach from the virtual machine
public Object Graph ( Class ... ) { ( Class ) { ( c == null ) { } excluded Classes . add ( c ) ; return this ;<CODESPLIT>Exclude any object that extends from these classes .
public void set Sampling ( double , double , ) { sample Min ; scores = new double [ num Samples ] ; }<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private void Product At Var ( Var Tensor prod excl excl ) { ( nb excl nb excl ) { ; } Var Tensor nb msgs opposing 1 ( v , nb ) ] ; prod . elem Multiply ( nb Msg ) ; } }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected find Last ( Q item ) { istate item get ( ) ; ( istate get ( ) get Q Path ( ) . equals ( item Path ) ) return istate ; } return null ; }<CODESPLIT>Find last ItemState .
public void add dispatcher Abs Actor dispatcher ) dispatchers ) ;  dispatchers . put ( dispatcher Id , dispatcher ) ; } }<CODESPLIT>Registering custom dispatcher
Int List Int List ( D . ( ) ) ; int owned int ; int assigned positive 0 ; int int D . ( ) ; . fill ( , ) ; Vec dots Dense Vector ( . ( ) ) ; long 0 ; ( int epoch 0 ; epoch epochs ; epoch ) { . shuffle ( ) ; ( int ) { ; double eta 1 / ( lambda _ adj * t ) ; b . copy To ( dots ) ; W . multiply ( x _ i , 1 . 0 , dots ) ; if ( y _ i == - 1 ) { W . get Row View ( k ) . mutable Subtract ( eta , x _ i ) ; b . increment ( k , - eta ) ; } } else { int k _ true _ max = 0 ; if ( dots . get ( k _ true _ max ) < 1 ) { W . get Row View ( z ) . mutable Add ( eta , x _ i ) ; b . increment ( z , eta ) ; if ( assignments [ i ] < 0 ) assigned _ positive _ instances ++ ; else owned [ assignments [ i ] ] -- ; owned [ z ] ++ ; } } W . mutable Multiply ( 1 - 1 . 0 / t ) ; b . mutable Multiply ( 1 - 1 . 0 / t ) ; } }<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
public static appfwfieldtype get nitro ) { appfwfieldtype appfwfieldtype ) obj . get _ resources ( service ) ; return response ; }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public create Promise Ready Promise delay Delay Ready Promise add public void Delay delay CONNECT DELAY CONNECT DELAY Apns Delay compare And delay Delay bootstrap schedule Runnable public void run bootstrap Apns bootstrap clone Augmenting Reflective Client Apns bootstrap CHANNEL READY PROMISE Ready Promise connect bootstrap connect ; connect Future . add Listener ( new Generic Future Listener < Channel Future > ( ) { public void operation Complete ( final Channel Future future ) { if ( ! future . is Success ( ) ) { try Failure And Log Rejected Cause ( channel Ready Promise , future . cause ( ) ) ; } } } ) ; connect Future . channel ( ) . close Future ( ) . add Listener ( new Generic Future Listener < Channel Future > ( ) { public void operation Complete ( final Channel Future future ) { channel Ready Promise . try Failure ( new Illegal State Exception ( " Channel closed before HTTP / 2 preface completed ." ) ) ; } } ) ; } } , delay , Time Unit . SECONDS ) ; return channel Ready Promise ; }<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public static List String load ( String option File Name ) { File option File File ( option File Name ) ; String Writer Writer String Writer ( ) ; { . copy ( Stream , Writer ) ; } ( File Not Found ) { . ( ) ; } ( Exception e ) { System . exit ( 1 ) ; } String string = string Writer . to String ( ) ; while ( string Tokenizer . has More Tokens ( ) ) { args . add ( string Tokenizer . next Token ( ) ) ; } return args ; }<CODESPLIT>Load options from a file
public void run )  take ) ; ) ; { this . execution Context Manager . initialize ( context ) ; catch ( Execution Context Exception e ) { this . current Job . run ( ) ; catch ( Interrupted Exception e ) { finally { this . execution . remove Context ( ) ;<CODESPLIT>Execute one job .
public Response ( String name , Object model ) { this ; }<CODESPLIT>Binds an object to the response .
public get Byte ( ) { null ; if ( offset != null ) { } return ( result ) ; }<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public Object get ( ) { Class Class get Class ( object Under Inspection ) ; Class get ( ) ; int i = 0 ; Meta Method meta Method = ( Meta Method ) iter . next ( ) ; result [ i ] = method Info ( meta Method ) ; } return result ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
static long parse ( String pollers ) { String periods = pollers . split ( ",\\ *" ) ; long = long periods . ; boolean = ; = Factory . get ( Pollers . class ) ; String period = periods ; { i ] = Long . parse Long ( period ) ; if ( result [ i ] <= 0 ) { errors = true ; } catch ( Number Format Exception e ) { errors = true ; } } if ( errors || periods . length == 0 ) { return DEFAULT _ PERIODS ; } else { return result ; }<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public void set value ) { value ) ; ; ) { Keys . remove ( i ) ; _ footer Values . remove ( i ) ; } else { has Footer = true ; _ footer Values . set ( i , value ) ; } } } if ( ! has Footer ) { _ footer Keys . add ( key ) ; _ footer Values . add ( value ) ; }<CODESPLIT>Sets a footer replacing an already - existing footer
public void add Attribute ( value ) { ( start Tag ) { patched patch ( ) ; String local Name = get Local Name ( patched Name ) ; final String uri = get Namespace URI ( patched Name , false ) ;<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public create ( Session ) { ( ( Part ) ( Part ) ) { } Message ( session ) ; msg . set Subject ( subject ) ; msg . set From ( new Internet Address ( from ) ) ; msg . set Content ( create Multi Part ( ) ) ; return msg ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static Curve Interpolation create Curve From Monte Carlo Libor ( LIBOR Monte Carlo Simulation double start ) Calculation { get ( start ) ; libors At ( ) ; double Libor get Libor Period Discretization ( ) get ( Libor ) ; ( Libor Time > start Time ) { libors At Time Index . add ( model . get LIBOR ( start Time , start Time , first Libor Time ) ) ; } times [ 0 ] = 0 ; int index Offset = first Libor Time == start Time ? 0 : 1 ; for ( int i = first Libor Index ; i < model . get Number Of Libors ( ) ; i ++ ) { libors At Time Index . add ( model . get LIBOR ( time Index , i ) ) ; } return Forward Curve Interpolation . create Forward Curve From Forwards ( name , times , libors , model . get Libor Period Discretization ( ) . get Time Step ( first Libor Index ) ) ; }<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public Void delete Word ( Word delete Word ) { not ( delete Word , delete Word cannot ) ; ; String Parameters { ; Request Request delete ( Request construct Url ( get ( ) , Segments , Parameters ) ) ; ( Entry < String , String > header : sdk Headers . entry Set ( ) ) { builder . header ( header . get Key ( ) , header . get Value ( ) ) ; } return create Service Call ( builder . build ( ) , Response Converter Utils . get Void ( ) ) ; }<CODESPLIT>Delete a custom word .
private boolean Move ( float , float ) { float newx player ; float newy player ; if ( blocked ( newx , newy ) ) { return false ; } else { return true ; } } else { return true ; } } else { return true ; } }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
public void recover )  clear ) ; data Logger . prepare For Read ( ) ; this . data Logger . recover ( this ) ; }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
public void clear Sources ) Audio Sources ) set ) ; } m Audio Sources . clear ( ) ; } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
public static Number Vector Number Vector guess ( Type ) { Number Vector factory ; ( Vector Type ) { } ( factory == null ) { try { Field f = in . get Restriction Class ( ) . get Field ( " FACTORY " ) ; factory = ( Number Vector . Factory < V > ) f . get ( null ) ; } catch ( Exception e ) { } } return factory ; }<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) { ( ! ( ) ) ( ) ; ( ! Save ( ) ) Save ( ) ; ( paths ) paths Maps Map ( ) ; ( Root Dirs ) Root Dirs Array List ( ) ; ( int 0 ; Labels ; ) { paths put ( i , new Array List < File > ( ) ) ; } while ( data Set Iterator . has Next ( ) ) { Data Set next = data Set Iterator . next ( ) ; Data Set curr Example = next . get ( i ) ; curr Example . save ( example ) ; paths . get ( curr Example . outcome ( ) ) . add ( example ) ; } } int nums Saved = 0 ; while ( ! paths . is Empty ( ) ) { while ( mini Batch . size ( ) < mini Batch Size && ! paths . is Empty ( ) ) { for ( int i = 0 ; i < num Labels ; i ++ ) { Data Set d = new Data Set ( ) ; d . load ( paths . get ( i ) . remove ( 0 ) ) ; mini Batch . add ( d ) ; } else paths . remove ( i ) ; } } if ( ! mini Batch . is Empty ( ) ) { Data Set merge = Data Set . merge ( mini Batch ) ; if ( data Normalization != null ) data Normalization . transform ( merge ) ; } } }<CODESPLIT>Generate a balanced dataset minibatch fileset .
private static boolean isunixtimeleap double unix ) { gps countleaps gps ) ; isleap ( gps Time ) ; }<CODESPLIT>Test to see if a unixtime second is a leap second
public static void set Sun XML Marshaller Marshaller XML ) set a Marshaller , s Property Name , s XML Headers ) ; }<CODESPLIT>Set the Sun specific XML header string .
private void Keep Alive Bridge bridge Client http Client TS Bridge Keep Alive Bridge Keep Alive bridge TS gson http Client Bridge Alive Alive public void on Bridge Keep Alive Alive Alive gson from Bridge Keep Alive print error print ( e ) ; } http Client . set Disrupted ( false ) ; if ( response Status == Call Stats Response Status . RESPONSE _ STATUS _ SUCCESS ) { keep Alive Status Listener . on Success ( ) ; } else if ( response Status == Call Stats Response Status . INVALID _ AUTHENTICATION _ TOKEN ) { stop Keep Alive Sender ( ) ; keep Alive Status Listener . on Keep Alive Error ( Call Stats Errors . AUTH _ ERROR , keep Alive Response . get Msg ( ) ) ; } else { http Client . set Disrupted ( true ) ; } } public void on Failure ( Exception e ) { logger . info ( " Response exception " + e . to String ( ) ) ; http Client . set Disrupted ( true ) ; } } ) ; }<CODESPLIT>Send keep alive bridge message .
public Streaming Output get ( long Parameter ) Jax { Streaming Output Output Streaming Output ( ) { public void write ( Output Stream output ) Jax Exception { final String revision = query Params . get ( Query Parameter . REVISION ) ; final String wrap = query Params . get ( Query Parameter . WRAP ) ; final String do Node Id = query Params . get ( Query Parameter . OUTPUT ) ; serialize ( resource Name , node Id , rev , nodeid , output , wrap Result ) ; } return s Output ;<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
( mors ) { Entity 0 ; Entity mes Entity mors ; ( 0 ; i < mors . length ; i ++ ) { mes [ i ] = create Exact Managed Entity ( sc , mors [ i ] ) ; return mes ;<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
 ; ) get ) get ) ;  ( result == null ) { Cms Xml Content content = content Supplier . get ( ) ; if ( content != null ) { result = content . get Handler ( ) . get Parameter ( key ) ; } } return result ; } ; }<CODESPLIT>Helper method to create a string template source for a given formatter and content .
Byte cdb Byte CDB ) ; cdb ) ; cdb LOGICAL ) ; cdb put Int ( logical Block Address ) ; cdb . position ( TRANSFER _ LENGTH _ OFFSET ) ; cdb . put Short ( transfer Length ) ; cdb . rewind ( ) ; return cdb ; }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
public read ( Byte dsts ) { ( rc ) { rc ; } Byte move ( app Read , dsts , offset , length ) ; }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
public static void set Int ) put Int ( offset , value ) ; } else { set Int Multi Segments ( segments , offset , value ) ; } }<CODESPLIT>set int from segments .
public User get User username )   Git Lab glae ) { return ( Git Lab Api . create Optional From Exception ( glae ) ) ; } }<CODESPLIT>Lookup a user by username and return an Optional instance .
protected void Limiter set ". jest set Prop Name + ". client . protocol " , "${ apiman . es . protocol }" ) ; set Config Property ( component Prop Name + ". client . host " , "${ apiman . es . host }" ) ; set Config Property ( component Prop Name + ". client . port " , "${ apiman . es . port }" ) ; set Config Property ( component Prop Name + ". client . username " , "${ apiman . es . username }" ) ; }<CODESPLIT>The rate limiter component .
public d get From ( int ) { int 0 ; d point d ( 0 , 0 , 0 ) ; ( int 0 ; [ 0 ] . length ; y ++ ) { for ( int x = 0 ; x < grid . length ; x ++ ) { if ( dim Counter == grid Point ) { return point ; } dim Counter ++ ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
public void set COLOR ) { ) { } { color . set ( COLOR ) ;<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
public void Event ( Event ) { ( Wrapper ) { . remove Event ( event Id ) ; } else { shared Buffer . upsert Event ( event Id , event Wrapper ) ; } } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public boolean show Parameters ) { ; Paginator ) { get Dialect ) Select Bys limit ) ; } else { } if ( show Parameters ) { String Builder sb = new String Builder ( sql ) . append ( ", with parameters : " ) ; join ( sb , params , ", " ) ; sql = sb . to String ( ) ; } return sql ; }<CODESPLIT>Use to see what SQL will be sent to the database .
; Transformer processor get Stylesheet Processor ( ) ; uriresolver processor get ( ) ; ( uriresolver != null ) { String href = get Href ( ) ; s = uriresolver . resolve ( href , base ) ; } return s ;<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
public get Title ) Journal Journal ) ) ) de julielab jules types Journal ) Type . ll _ cas . ll _ get String Value ( addr , ( ( Journal _ Type ) jcas Type ) . cas Feat Code _ title ) ; }<CODESPLIT>getter for title - gets Full journal title C
public static of ) { Cast o ) ; } return new Val ( o ) ; }<CODESPLIT>Convenience method for creating a Convertible Object
protected void add Terms ( Sparse Double Vector meaning , String , distance ) { ( String term ) { ( term ( Iterator TOKEN ) ) { basis get Dimension ( term ) ; if ( dimension == - 1 ) continue ;<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
public View get ( ) { { ( command Logging ) { } Fetcher get ( , ) ; ( Exception e ) { e . print Stack Trace ( ) ; return null ;<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
Weight Vectors ) Sparse Double weight Vec vertex Weight vertex ) weight Vec ) ) weight Vec ) { weight Vec = compute Weight Vector ( g , vertex ) ; vertex To Weight Vector . put ( vertex , weight Vec ) ; } } } return weight Vec ; } else return compute Weight Vector ( g , vertex ) ; }<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
static Row Description Vectorized Row Batch selected ) { field ; field selected ; field ++ ) { int orc Idx = selected Fields [ field Idx ] ; read Field ( rows , field Idx , field Types . get ( orc Idx ) , batch . cols [ orc Idx ] , rows To Read ) ; } return rows To Read ; }<CODESPLIT>Fills an ORC batch into an array of Row .
public Cal get ) Cal component . get Properties ( ) . values ( ) ) ; }<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public static double compute Tau And Divide ( , , double , double ) { double tau ; tau += d d ; } tau sqrt ( tau ) ; ( [ j ] < 0 ) tau = - tau ; return tau ; }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public Epic get Epic ( epic Epic epic ) { { Entity Entity make ( ) ; Body Entity get Body ( ) ; issue ( ) parse ( Body ) ; ( issue ) { ; } Epic ( issue epic ) ; } ( Exception pe ) { LOGGER . error ( " Parser exception when parsing teams " , pe ) ; } catch ( Hygieia Exception e ) { LOGGER . error ( " Error in calling JIRA API " , e ) ; } return null ; }<CODESPLIT>Get Epic using Jira API
public Serializable get Constraints ( ) { get ( ) ; model . layout Constraints . get ( child ) ; return null ;<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public String , String get Reverse ( ) { Entry String , String map ( ) ; String k me get ( ) ; String trans me get Value ( ) ; for ( String trans : trans List ) { Set < String > entry = r Map . get ( trans ) ; if ( entry == null ) { to Add . add ( k ) ; r Map . put ( trans , to Add ) ; } else { entry . add ( k ) ; } } return r Map ; }<CODESPLIT>Returns a reversed map of the current map .
public Credential set Refresh Token Token ) ) ;  Token ) Please set set Transport set Client " and set Token Server Url / set Token Server Encoded Url " ) ; } this . refresh Token = refresh Token ; } finally { lock . unlock ( ) ; } return this ; }<CODESPLIT>Sets the refresh token .
public void make Current ( EGL egl ) { ( EGL EGL 14 EGL NO DISPLAY ) { d ( TAG , NOTE make Current / display ) ; } Runtime Exception ( " egl Make Current failed " ) ; } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
public static Safe Value paths ) { Or Default ( default Value , source , paths ) ; }<CODESPLIT>Use navigateOrDefault which is a much better name .
public void clear Commerce Warehouse commerce Warehouse ) { finder clear FINDER LIST WITH PAGINATION ) ; finder clear ( FINDER _ CLASS _ NAME _ LIST _ WITHOUT _ PAGINATION ) ; clear Unique Finders Cache ( ( Commerce Warehouse Item Model Impl ) commerce Warehouse Item , true ) ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void process ( String , String output ) throws MPXJ , { MPP Reader reader MPP Reader ( ) ; reader read ( ) ; String File Name ; String Name ; ( mpp File Type ) { { ; } { ; } 12 { ; } 14 { ; } } } File Input Stream is File Input Stream ( ) ; is . close ( ) ; Directory Entry root = fs . get Root ( ) ; for ( Task task : m _ project . get Tasks ( ) ) { map Text ( task . get Name ( ) , replacements ) ; } replacements . clear ( ) ; map Text ( resource . get Name ( ) , replacements ) ; map Text ( resource . get Initials ( ) , replacements ) ; } replacements . clear ( ) ; Project Properties properties = m _ project . get Project Properties ( ) ; map Text ( properties . get Project Title ( ) , replacements ) ; replacements . clear ( ) ; map Text ( properties . get Project Title ( ) , replacements ) ; map Text ( properties . get Subject ( ) , replacements ) ; map Text ( properties . get Author ( ) , replacements ) ; map Text ( properties . get Keywords ( ) , replacements ) ; map Text ( properties . get Comments ( ) , replacements ) ; process Replacements ( root , "\ 005 Summary Information " , replacements , false ) ; replacements . clear ( ) ; map Text ( properties . get Manager ( ) , replacements ) ; map Text ( properties . get Company ( ) , replacements ) ; map Text ( properties . get Category ( ) , replacements ) ; fs . write Filesystem ( os ) ; os . flush ( ) ; os . close ( ) ; fs . close ( ) ; }<CODESPLIT>Process an MPP file to make it anonymous .
public void set Rollback ( ) { ( is Trace On tc is Entry ( ) ) { Tr ( tc , set Rollback , this ) ; Transaction Coordinator Coord get Coord ( ) ; ( Coord ) { Coord set Rollback ( ) ; { { . set Rollback Only ( ) ; catch ( Exception e ) { throw new Illegal State Exception ( " No active transaction " ) ; Tr . exit ( tc , " set Rollback Only " ) ;<CODESPLIT>Marks the current local or global transaction to be rolled back
private static boolean analyse 404 ( String content ) { ; } ( not , error {}" , content ) ; return false ; }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private Listenable Future write Blocks To Targets ( Collection DBB . Container output Buffers , int serialized ) { . check Argument ( output Buffers . size ( ) serialized . ) ; Iterator DBB . Container = output Buffers . iterator ( ) ; int serialized Index = 0 ; ( Table task ) { DBB . Container = Iter . next ( ) ; final Byte Buffer buf = container . b ( ) ; buf . position ( 0 ) ; if ( task . m _ filters != null ) { for ( Snapshot Data Filter filter : task . m _ filters ) { value For Target = filter . filter ( value For Target ) ; if ( write Future != null ) { write Futures . add ( write Future ) ; } } return Futures . all As List ( write Futures ) ;<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
private boolean Terminal Atom atom Atom atom To ) { atom To get atom ) == 1 ; }<CODESPLIT>Is the atom terminal having only one connection .
private Async Result Void create ( Json Object ) { Async Result Void ( ) { public void handle ( Async Result Void ) { ( result . failed ( ) ) { } else { message . reply ( new Json Object ( ) . put String ( " status " , " ok " ) ) ; } } } ; }<CODESPLIT>Creates a platform undeploy handler .
public Photo All Context get All Contexts ( String photo Id ) throws Flickr { Photo All Context all Context Photo All Context ( ) ; parameters ( method , METHOD ALL CONTEXTS ) ; parameters ( photo id , photo Id ) ; ( is Error ( ) ) { } Element photos Element get Collection ( ) ; for ( Element set Element : photos Element ) { Photo Set pset = new Photo Set ( ) ; pset . set Title ( set Element . get Attribute ( " title " ) ) ; pset . set Secret ( set Element . get Attribute ( " secret " ) ) ; pset . set Id ( set Element . get Attribute ( " id " ) ) ; pset . set Farm ( set Element . get Attribute ( " farm " ) ) ; pset . set Primary ( set Element . get Attribute ( " primary " ) ) ; pset . set Server ( set Element . get Attribute ( " server " ) ) ; set List . add ( pset ) ; all Context . set Photo Set List ( set List ) ; } Pool pool = new Pool ( ) ; pool . set Title ( set Element . get Attribute ( " title " ) ) ; pool . set Id ( set Element . get Attribute ( " id " ) ) ; pool . set Url ( set Element . get Attribute ( " url " ) ) ; pool . set Icon Server ( set Element . get Attribute ( " iconserver " ) ) ; pool . set Icon Farm ( set Element . get Attribute ( " iconfarm " ) ) ; pool List . add ( pool ) ; all Context . set Pool List ( pool List ) ; } return all Context ;<CODESPLIT>Returns all visble sets and pools the photo belongs to .
public Map String , Object get Field ( Map String , Object properties ) { Map String , Object Return ; ( properties ) { Return String , Object ( ) ; ( ; ; ) { String Field Name = ( String ) properties . get ( str Field Number ) ; if ( str Field Name == null ) break ; Record record = this . get Main Record ( ) ; if ( str Field Name . index Of ( '.' ) != - 1 ) { Base Field field = null ; if ( record != null ) field = record . get Field ( str Field Name ) ; } return prop Return ; }<CODESPLIT>GetFieldData Method .
protected void connect ( , ) { Guard get ( ) on Network ( ) ; connect ( , port ) ; connected = true ;<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private char get Escaped ( ) { ; ( == length ) { throw new Illegal State Exception ( " Unexpected end of DN : " + dn ) ; } switch ( chars [ pos ] ) { default : return get UTF 8 ( ) ; } }<CODESPLIT>returns escaped char
private static String Matchers ( String ) { ( Citrus VALIDATION _ PREFIX . length ( ) , expression . length ( ) - Citrus . VALIDATION _ MATCHER _ SUFFIX . length ( ) ) ; } return expression ; }<CODESPLIT>Cut off validation matchers prefix and suffix .
public Element implementing ( Element Element ) { Element get ( implementing , Element ) ; Element intfcs Sub ( type Element , false ) ; while ( sub Interfaces Iter . has Next ( ) ) { while ( implementing Classes Iter . has Next ( ) ) { Type Element c = implementing Classes Iter . next ( ) ; result . add ( c ) ; } } } return result ; }<CODESPLIT>Return the set of classes which implement the interface passed .
public void add add All validation . errors ) ; warnings . add All ( validation . warnings ) ; }<CODESPLIT>Adds a validation result to this .
public static String Field String ( Object ) { Field fields Field ( , , ) ; append ( field name ) ; append ( "=" ) ; append ( '"' ) ; . append ( field . value ) ; buf . append ( '"' ) ; } else { buf . append ( field . value ) ; } if ( i + 1 < fields . length ) buf . append ( "," ) ; } return buf . to String ( ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
public get ) { get . get Component Type ( ) ) + "[]" ; } return clazz . get Name ( ) ; }<CODESPLIT>Formats the class name with trailing square brackets .
( is Initialized ( ) ) { ; } ( ) { del ( ) ; } Scan Info ( block ) ; info . last Scan Time = get New Block Scan Time ( ) ; add Block Info ( info ) ; adjust Throttler ( ) ; }<CODESPLIT>Adds block to list of blocks
public get Tile ) { get ) ) get ) ) ) ) ) { new Illegal Argument Exception ( ) ; } return image [ x ] [ y ] ; }<CODESPLIT>Gets a tile of the XPM Image .
public JBBP Dsl ( ) { item = assert Expression Chars ( bit Len Expression ) ; item . size Expression = assert Expression Chars ( size Expression ) ; this . add Item ( item ) ; return this ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
Pattern Matcher Input Pattern Matcher Input ( Input ) ; Perl 5 Matcher Perl 5 Matcher ( ) ; compile += Perl 5 Compiler SINGLELINE MASK ; ( ) ; Pattern get Pattern ( Pattern , compile ) ; ( <= Input . length ( ) ) { Array matches = new Array Impl ( ) ; while ( matcher . contains ( input , pattern ) ) { if ( ! match All ) { return new Double ( match ) ; } matches . append EL ( match ) ; } if ( matches . size ( ) != 0 ) { return matches ; } } return 0 ; }<CODESPLIT>return index of the first occurence of the pattern in input text
private Object check By Ldap Filter ( String filter ) throws { ( is Empty Or Null ( references ) ) { ; } ( references ) { get Context ( ) get ( references 0 ) ; } ( many services registered for filter : " + filter ) ; }<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public void ) { tevent ) { tevent ) ;  omgr ) { omgr ) ;  { Dropping longer " oid " , get Oid ( ) , " class " , get Class ( ) . get Name ( ) , " event " , event ) ;<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
public static create Overlay Group ) Identifiers create Identifier Ifmap ICS Ifmap ICS , " overlay - manager - group " , name ) ; }<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public static Double Matrix cholesky Double Matrix ) { Double Matrix dup ) ; Native dpotrf U rows ) ; if ( info < 0 ) { throw new Lapack Argument Exception ( " DPOTRF " , - info ) ; else if ( info > 0 ) { clear Lower ( result ) ; return result ;<CODESPLIT>Compute Cholesky decomposition of A
public static boolean is Caller ( String class Name , String method Name ) { Throwable Throwable ( ) ; ( stack Elements ) { log ( Level , Empty call stack ) ; ; } ( int ; stack Elements ; i ++ ) { return match All Method ? true : stack Elements [ i ] . get Method Name ( ) . equals ( method Name ) ; } } return false ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
public Input set ) execute " setflag " , name , value ) ; }<CODESPLIT>set JVM command line flag
public Q add Flag ( Position , String , Expression expr ) { return query Mixin . add Flag ( new Query Flag ( position , flag ) ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ( ) { ( ) ; Address = channel . local Address ( ) ; Inet Socket Address remote Address = get Remote Address ( channel ) ; return new Connection Info ( host Address , remote Address , scheme ) ; }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDP Domain get PDP Domain ( String pdp Domain Name ) throws { String domain Ranges = ; ( serialized Cache ) { ( serialized Cache . contains Key ( pdp Domain Name ) ) { domain Ranges = serialized Cache . get ( pdp Domain Name ) ; } } boolean should Request Domain Ranges = check Domain Ranges ( domain Ranges ) ; { ( should Request Domain Ranges ) { . ( Fetching {}" , ) ; Input Stream = URL Connection . get Input Stream ( ) ; domain Ranges = XML . get Domain Ranges From XML ( xml ) ; ( URL ) { } String pdb Id = null ; for ( String domain Range : domain Ranges ) { Substructure Identifier struc Id = new Substructure Identifier ( domain Range ) ; if ( pdb Id == null ) { pdb Id = struc Id . get Pdb Id ( ) ; ranges . add All ( struc Id . get Residue Ranges ( ) ) ; return new PDP Domain ( pdp Domain Name , ranges ) ;<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
public search View search View . get Context ( ) ; else if ( support View != null ) { return support View . get Context ( ) ;<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private boolean is Macro Cycle ( Ring ring , Ring ) { ( Bond bond ring bonds ( ) ) { ( ring other ) ; ( other contains ( bond ) ) { ; break ; } } if ( ! found ) return true ; } return false ;<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
{ ( == ) { ; } populate ( , ) ; ; } ( Instantiation ) { new Runtime Exception ( e ) ; } catch ( Illegal Access Exception e ) { throw new Runtime Exception ( e ) ;<CODESPLIT>Convert a value from Google representation to a Java value
private void update ( , Object ) { get Config ( ) ; ( ) { Ref . activate ( cc ) ; } else {<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public static with Document Document Change ) { ) { public Document get ) { documents ) { synchronized ) { documents ) { documents ) ; } } } ( documents ) ; } public List < Document Change > get Document Changes ( ) { return Collections . unmodifiable List ( document Changes ) ; } public int size ( ) { return document Set . size ( ) ; } public boolean equals ( Object o ) { if ( this == o ) { return true ; } if ( o == null || get Class ( ) != o . get Class ( ) ) { return false ; } } public int hash Code ( ) { return Objects . hash ( query , this . get Document Changes ( ) , this . get Documents ( ) ) ; } } ; }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean read In In Outbox Amp outbox Amp headers ) { Method Hamp method Hamp ; { method Hamp read Method In ) ; } Throwable ) { FINER ) ) ; In ) ; ; } Method Amp method = method Hamp . get Method ( ) ; Class Loader loader = method Hamp . get Class Loader ( ) ; Thread thread = Thread . current Thread ( ) ; thread . set Context Class Loader ( loader ) ; if ( log . is Loggable ( _ log Level ) ) { } long timeout = 1000 L ; try { send Message . offer ( timeout ) ; } catch ( Throwable e ) { log . fine ( e . to String ( ) ) ; if ( log . is Loggable ( Level . FINEST ) ) { } } return true ; }<CODESPLIT>The send message is a on - way call to a service .
private String get Remote File Name ( Upload File file ) { file . get Name ( ) ; } ( file . get Property ( REMOTE ) . contains ( ) ) { . length - 1 ] ; } return file . get Property ( PARAM _ REMOTE _ PATH ) ; }<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public void initialize Buffer ( task ) { Group buffers add Group ( buffers ) ; buffers ( input Queue Length " , new Input Buffers Gauge ( task ) ) ; buffers . gauge ( " output Queue Length " , new Output Buffers Gauge ( task ) ) ; }<CODESPLIT>Initialize Buffer Metrics for a task .
public void double Click ) Q Taste { { Region rect ) double Click ( file Name ) ; } catch ( Exception ex ) { } }<CODESPLIT>Simulates a double click on the specified image of the area .
public void set SSE Customer ( SSE Customer sse ) { ( sse sse ) { ( Either SSE Customer SSE Management Params must not be set at the same time ." ) ; } }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
public void on Failure ) Toast make ) LONG ) . show ( ) ; }<CODESPLIT>show any error messages posted to the bus .
private void paint Drop ( Sea Glass Context context , ) { Table . Drop Location loc . get Drop Location ( ) ; ( loc ) { ; ( short Color ) { ; rect get Drop Line ( loc ) ; ( rect null ) { int x = rect . x ; int w = rect . width ; if ( color != null ) { extend Rect ( rect , true ) ; g . set Color ( color ) ; if ( ! loc . is Insert Column ( ) && short Color != null ) { g . set Color ( short Color ) ; rect = get V Drop Line Rect ( loc ) ; if ( rect != null ) { int y = rect . y ; int h = rect . height ; if ( color != null ) { extend Rect ( rect , false ) ; g . set Color ( color ) ; g . set Color ( short Color ) ;<CODESPLIT>Paint the drop lines if any .
public Datalog Program create Datalog SWRL Rule ) accept ) clear )  Datalog Program dp datalog . get Datalog Program ( ) ; dp . append Rule ( facts ) ; return dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
protected inflate Authn Request decoded ) { inflated inflate decoded ) ; return inflated ; return Compression Utils . decode Byte Array To String ( decoded Bytes ) ;<CODESPLIT>Inflate authn request string .
public static Framework create Filesystem Framework filesystem Framework ) generate , property File , false , properties , true ) ; } return create ( name , property File , filesystem Framework ) ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized void clear Context ( ) { Context embedded Context ; ( configurator Property ) { clear Context ( log Context Configuration ) ; } ( configurator Context Configuration ) { clear Context ( ( Context Configuration ) configurator ) ; { ( String name logger Names ) { if ( logger != null ) { if ( handlers != null ) { for ( Handler handler : handlers ) { handler . close ( ) ; } } logger . set Filter ( null ) ; logger . set Use Parent Filters ( false ) ; logger . set Use Parent Handlers ( true ) ; logger . set Level ( Level . INFO ) ; } } } }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
public execute block For Single . execute ( ) , timeout , time Unit ) ; }<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
String filename this filename ; Input Stream ; ( ) { Byte Array Input Stream ( ) ; ( source Map Result source Map 0 ) { source Map Result set Value ( source Map ) ; } } ( filename ) { ( source Map 0 ) { File Input Stream ( file ) ; } else { try { data = ( Cache Data ) is . read Object ( ) ; } catch ( Class Not Found Exception e ) { throw new IO Exception ( e . get Message ( ) , e ) ; } finally { IO Utils . close Quietly ( is ) ; } if ( source Map Result != null ) { source Map Result . set Value ( source Map ) ; } result = new Byte Array Input Stream ( bytes ) ; } } else { throw new IO Exception ( ) ; } return result ; }<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public void Include And Element ) { get By Matches ) ) { By get Matching ) ) { get Ignore By Matches ( ) . add All ( table . find Elements ( by ) ) ; } } if ( get Include By Matches ( ) == null ) { for ( By by : get Include Only Rows Matching ( ) ) { } } }<CODESPLIT>Does the table comparison
public E List Diff E inline ( List E , List E ) { set Error ( ) ; { } catch ( Diff Exception e ) { set Error ( e ) ; return null ; } }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public static get Around Until ) ) ; get ) get ) get ) submit ) ) ; get Around As ) peek add ) ) . find First ( ) ; future . complete ( new Message Set Impl ( until Message . map ( message -> messages ) . or Else ( Collections . empty List ( ) ) ) ) ; } catch ( Throwable t ) { future . complete Exceptionally ( t ) ; } } ) ; return future ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public static boolean find Sip Application Annotation ( Input Stream stream ) { { raw Class Bytes = [ stream . available ( ) ; stream . read ( raw Class Bytes ) ; ( one ) return ; } ( ) { } return false ; }<CODESPLIT>Determine if this stream contains SipApplication annotations
{ ind ; ( Option option get ( ) ) { option process ( Map , String value Of ( params ind ) ) ; } ( remote Program get Arguments ( ) ) { set Value Using Parser ( String . value Of ( params [ ind ++ ] ) ) ; } } catch ( Exception e ) { throw new M Bean Exception ( e ) ; } return job Data Map ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private void ( String ) { Token get Next Token ( ) ; } append ( get Value ( ) ) ; = get Next Token ( ) ; if ( t . token Type == Token Type . EOL ) { return ; } Vopt ( buf ) ; } }<CODESPLIT>Vopt = EOL V
public void add Value ) Value ) add ( s Name , s Value ) ; }<CODESPLIT>Add the passed header as is .
public static ) { ( number List , Double Stream :: max ) ; }<CODESPLIT>Max number .
public int get Chaincode Response ( ) throws { ( status Return ) { status Return ; } { status Return ; } catch ( Invalid Argument Exception e ) { throw e ; } catch ( Exception e ) { throw new Invalid Argument Exception ( e ) ; } }<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
public void generate JC Decl ) { generate ( queue , null ) ; }<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public static Enhanced create ( , sub , , , , parameters ) { { new Enhanced Mime Type ( primary , sub , encoding , version , parameters ) ; } catch ( final Mime Type Parse Exception ex ) { } }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
public static Long With ( Object value Value ) { ? ( long ) result : default Value ; }<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public void set iso ) Tag { iso ) ) { TRANSACTION _ READ _ COMMITTED ; } else if ( TRANSACTION _ READ _ UNCOMMITTED . equals ( iso ) ) { } else if ( TRANSACTION _ REPEATABLE _ READ . equals ( iso ) ) { } else if ( TRANSACTION _ SERIALIZABLE . equals ( iso ) ) { } else { } }<CODESPLIT>Setter method for the transaction isolation level .
public void traverse ) { { init Traversal ) ; ( root ) ; traverse Branch ( root , null ) ; pop Scope ( ) ; } } }<CODESPLIT>Traverses a parse tree recursively .
public Request Tag find By Workspace ( String workspace ) { Request Tag ( , Tag . class , path , " GET " ) ; }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
public Criteria Sequence peek Cli peek . set Operation ( Operation . FIND ) , peek ( ) . set Criteria ( match ( ) ) ) ; }<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
private E unlink Last ( E ) { E = . item ; . item = ; . = ; else prev . next = null ; size -- ; mod Count ++ ; return element ;<CODESPLIT>Unlinks non - null last node l .
private static void ( Object user Dn ) { ( Context . SECURITY _ AUTHENTICATION , " simple " ) ; env . put ( Context . SECURITY _ PRINCIPAL , user Dn ) ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
public Team create Team Rpc And create Team " , name , tag ) ; }<CODESPLIT>Create a new ranked team with the specified name and tag
private static void check File ( ) Problem { ; ( File separator Char '\\' ) { compile ( "\\*?(.+\\\\)*.+" ) ; } else if ( File . separator Char == '/' ) { p = Pattern . compile ( "\\*?(.+/)*.+" ) ; } else { } Matcher m = p . matcher ( s ) ; if ( ! m . matches ( ) ) { } }<CODESPLIT>Verify that a source file name is valid .
public void close ) Transaction Sharding Transaction ) ) entry . get Value ( ) . close ( ) ; } }<CODESPLIT>Close sharding transaction managers .
protected static get Bar percentage ) { percentage ) ; "% [" ) ; sb . append ( "=" ) ; } sb . append ( ">" ) ; } else { sb . append ( " " ) ; } } sb . append ( "] " ) ; return sb . to String ( ) ; }<CODESPLIT>Generates the progress bar for the given percentage
private void resolve ( , ) { ( ) { resolve ( , result ) ; } blocked By . remove ( element ) ; result . add ( element ) ; } }<CODESPLIT>Resolves an element .
public camunda Out ) { param set Camunda ) ; param set Camunda ( target ) ; add Extension Element ( param ) ; return myself ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
create Arguments ) IR ) ; set JS Type ( arguments Type Supplier . get ( ) ) ; } return result ; }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
public Date Date ( String String ) { Date ; { df parse ( String ) ; } ( ) { println ( ex . fill In Stack Trace ( ) ) ; } return date ;<CODESPLIT>Takes a String and converts it to a Date
public static cusolver Rf cusolver Rf handle zero boost cusolver Rf handle , zero , boost ) ) ; }<CODESPLIT>CUSOLVERRF set and get numeric properties
public static ) ( ( String ) obj ) : obj ; }<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Object delete Uid Async ( String , String name ) { uid To ( type ) ; switch ( uid _ type ) { case METRIC : return metrics . delete Async ( name ) ; case TAGK : return tag _ names . delete Async ( name ) ; } }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
public boolean scroll Down ) Logging scroll Down ")" )  scroller scroll waiter wait For And Get View ( index , List View . class ) , Scroller . DOWN , false ) ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected void make Element Doc ( Method meth Path tree Path ) { Element Doc ( Element Doc ) method . get ( meth ) ; if ( result != null ) { } else { method Map . put ( meth , result ) ; } }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
public method ) Pickle Pyro { internal method , null , 0 , true , arguments ) ; }<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
public static String format As Percentage ( value , ) { PERCENT FORMATTER . format ( average ) ; }<CODESPLIT>Returns value converted to percentage format .
public static JTS expr deltax deltay ) expr get ) TRANSLATE , expr , Constant Impl . create ( deltax ) , Constant Impl . create ( deltay ) ) ; }<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private static request Web Content ( String url ) throws TV Rage { { Http Get http Get Http Get ( url ) ; http Get add ( accept , xml ) ; ( get ( ) >= 500 ) { TV Rage ( Api Type HTTP _ 503 _ ERROR , url ) ; } else if ( response . get Status Code ( ) >= 300 ) { return response . get Content ( ) . get Bytes ( DEFAULT _ CHARSET ) ; catch ( IO Exception ex ) {<CODESPLIT>Get content from URL in byte array
private static boolean Numeric ( value ) { ( Digit ( ) ) { false ; } } return true ; }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
public String , String get Foo ( ) { foo ( foo " , " bar " ) ; return foo Obj ; }<CODESPLIT>Controller to just support pinging .
protected static void fire ( Json ) { ( Triggering ( ) ) { Json ( Json ) listeners ( ) ; { listener . on Array Start ( ) ; } catch ( Runtime Exception e ) { log . warn ( e ) ; } } } }<CODESPLIT>Fires a start of array event .
public static E > Runnable sneaked ( Sneaky Runnable < E > runnable ) { return ( ) -> { casted Runnable . run ( ) ; } ; }<CODESPLIT>Sneaky throws a Runnable lambda .
public static update ( Bandwidth Client Object ) App { assert ( ) ; Response response = client . post ( domains Uri , params ) ; final JSON Object json Object = to JSON Object ( client . get ( domains Uri , null ) ) ; return new Domain ( client , json Object ) ; }<CODESPLIT>Convenience method to return a Domain .
public static Stream String get Types ( Event ) { ( modeshape jcr observation Event ) { { Stream Type types Stream ( ) ; types add ( type ) ; types add ( Event get Node Type ( ) ) ; return types . build ( ) . map ( Node Type :: get Name ) ; catch ( final Repository Exception e ) { throw new Repository Runtime Exception ( e ) ; } return empty ( ) ;<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
private void ( ) { ( has ( ) ) { ; } ( line , context . get Document Model ( ) ) ; } }<CODESPLIT>Process the header of the file .
public get ( username ) { ( ) { create Connection ( url , username , password ) ; } return connection ; }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
protected static render Pad ( pad boolean ) { ( ; pad ; i ++ ) { builder . append ( ' ' ) ; } return builder ; }<CODESPLIT>Render some leading spaces onto a line of html .
Path "/ xdsl eligibility ; ( Path ) ; , Object Map < String , Object > ( ) ; add Body ( o , " city " , city ) ; add Body ( o , " contact Name " , contact Name ) ; add Body ( o , " street " , street ) ; add Body ( o , " street Number " , street Number ) ; return convert To ( resp , t 5 ) ; }<CODESPLIT>Get the active lines at given address
private static evaluate Deque operators Deque ) Boolean As operators ) pop ( ) , values . pop ( ) ) ) ; } return replace Integer String By Boolean Representation ( values . pop ( ) ) ; }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public write boolean ) { ; request Expire request Expire ; request Expire request Expire Current ) ) { close ) ; } synchronized write Lock ) { long expires = _ socket Timeout + now ; do { result = write Native ( _ socket Fd , buffer , offset , length ) ; } while ( result == Jni Stream . TIMEOUT _ EXN && Current Time . get Current Time Actual ( ) < expires ) ; } if ( is End ) { close Write ( ) ; } return result ; }<CODESPLIT>Writes to the socket .
public void set Ambient Light ) { ambient { 255 } ; ( ambient ) ; gl . gl Enable ( GL 2 . GL _ LIGHTING ) ; gl . gl Enable ( GL 2 . GL _ LIGHT 0 ) ; }<CODESPLIT>Sets the RGB value of the ambientLight
Big set Choice Choice = multi Choice Count . multiply ( fields [ i ] . set Multi Choice Count ( ) ) ; return multi Choice Count ; }<CODESPLIT>Set the multiChoiceCount for this tuple
public void delete ( boolean ) API { delete ( get ( ) + "? force =" + force Delete ) ; }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected void add To Map ( String name ) { String get ( ) ; ( ) ; Concurrent String application Map . get ( app Name ) ; if ( list == null ) { if ( list == null ) list = new List ; } list . add ( name ) ;<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public static get Table ( , Table Location location , String Field ) throws { ( Field Field is Empty ( ) ) { List String Fields get Fields ( , location ) ; ( Fields is Empty ( ) ) { } Field Fields get ( 0 ) ; } ( . next ( ) ) { return ( ( Geometry ) rs . get Object ( 1 ) ) . get Envelope Internal ( ) ; } throw new SQL Exception ( " Unable to get the table extent it may be empty " ) ; }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void   reply error specified ."     reply error specified ."   execute public . get List ( format Key ( name ) ) . get ( index ) ; } } , new Handler < Async Result < Object > > ( ) { public void handle ( Async Result < Object > result ) { if ( result . failed ( ) ) { message . reply ( new Json Object ( ) . put String ( " status " , " error " ) . put String ( " message " , result . cause ( ) . get Message ( ) ) ) ; } else { message . reply ( new Json Object ( ) . put String ( " status " , " ok " ) . put Value ( " result " , result . result ( ) ) ) ; } } } ) ; }<CODESPLIT>Handles a list get .
public static Plot Canvas plot ( String id , double ) { histogram . set ID ( id ) ; ; ; double freq histogram . get Histogram ( ) ; ( int 0 ; freq . ; ) { if ( freq [ i ] [ 1 ] > upper Bound [ 1 ] ) { } } canvas . get Axis ( 0 ) . set Grid Visible ( false ) ; canvas . add ( histogram ) ; return canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static , ( training , double proportion ) { ( proportion proportion ) { } ( proportion 5 ) { } small Array ( ) ; Array List < > ( ) ; int ct = 0 ; Set < Integer > indices = new Hash Set < > ( ) ; while ( ct < small List Size && training Data . size ( ) > indices . size ( ) ) { while ( indices . contains ( index ) ) { index = ( int ) ( Math . random ( ) * ( training Data . size ( ) - 1 ) ) ; } indices . add ( index ) ; ct ++ ; } small List . add All ( indices . stream ( ) . map ( training Data :: get ) . collect ( Collectors . to List ( ) ) ) ; return new Immutable Pair < > ( small List , large List ) ; }<CODESPLIT>Shuffle the data and split by proportion
public static void get Screen Shot ABGR ( Byte Buffer bgra , Buffered Image ) { Writable Raster wr = . get Raster ( ) ; Data Buffer Byte db = ( Data Buffer Byte ) wr . get Data Buffer ( ) ; [ ] Array = db . get Data ( ) ; bgra . clear ( ) ; bgra . get ( Array ) ; bgra . clear ( ) ; int width = wr . get ( ) ; int height = wr . get Height ( ) ; for ( int y = 0 ; y height / 2 ; y ) { for ( int x = 0 ; x < width ; x ++ ) { int in Ptr = ( y * width + x ) * 4 ; int out Ptr = ( ( height - y - 1 ) * width + x ) * 4 ; byte b 1 = cpu Array [ in Ptr + 0 ] ; byte g 1 = cpu Array [ in Ptr + 1 ] ; } } }<CODESPLIT>Good format for java swing .
public int [ [ [ , int [ To Data And Labels ( List ) { int = . size ( ) ; int [ labels = int [ ; ( . Reverse ) { . ( ) ; ( int = 0 ; j < doc Size ; j ++ ) { List < List < String > > features = d . as Features ( ) ; Collection < String > clique Features = features . get ( k ) ; int m = 0 ; for ( String feature : clique Features ) { int index = feature Index . index Of ( feature ) ; if ( index >= 0 ) { m ++ ; else { if ( m < data [ j ] [ k ] . length ) { int [ ] f = new int [ m ] ; System . arraycopy ( data [ j ] [ k ] , 0 , f , 0 , m ) ; IN wi = document . get ( j ) ; if ( flags . use Reverse ) { Collections . reverse ( document ) ;<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public static synchronized List Class All ( final String Name ) { ( Name == ) { } ( factories != ) { ( != null ) { for ( Callable < Class < ? > > c : l ) { try { classes . add ( c . call ( ) ) ; } catch ( Exception e ) { } } } } return classes ; }<CODESPLIT>Finds all providers for the given service .
String C String ( Byte ) throws { int = . Before ( Bson . STRING _ TERMINATION ) ; ( 0 ) ( termination not " ) ; buffer . skip Bytes ( length + 1 ) ; return result ; }<CODESPLIT>default visibility for unit test
public void add ( JMF the ) { JS ( JS ) the ; ( ) JS ; { . arraycopy ( old Cases , 0 , cases , 0 , old Cases . length ) ; new Case . parent = this ; new Case . sibling Position = cases . length - 1 ; cases [ new Case . sibling Position ] = new Case ;<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public String summarize ( ) { String String ( ) ; append ( =[" ) ; ii 0 ; ( Sound Type sound Type Types ) { ( ii ++ > 0 ) { buf . append ( ", " ) ; buf . append ( sound Type ) ;<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private , get ( ) { , map ( ) ; Matcher . matcher ( key ) ; if ( matcher . matches ( ) ) { String id = matcher . group ( 2 ) ; String property Value = props . get Property ( key ) ; map . put ( id , property Value ) ; } } return map ; }<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
public static raw Uncompress ) raw Uncompress ( input Addr , input Size , dest Addr ) ; }<CODESPLIT>Zero - copy decompress using memory addresses .
public void write ( , int off , int ) { check Increase Array ( len ) ; this . pos += len ; }<CODESPLIT>Writes a byte array content into the stream
public patch Health Health health Health health ) Patch Health Patch Health ) set Health health health ) ) set Health ( health Check Resource ) . add All Field Mask ( field Mask ) . build ( ) ; return patch Health Check ( request ) ; }<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
private void initialize Nox Margin Typed attributes ) { nox Margin Value get Resources ) get dimen default _ nox _ item _ margin ) ; nox Config . set Nox Item Margin ( nox Item Margin ) ; }<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
public static failed error ( index , event Index , error , null ) ; }<CODESPLIT>Returns a failed operation result .
not lhs ) ; not rhs ) ; not ) ; ( ) ; Label Node not Equal Label Node = new Label Node ( ) ; ret . add ( lhs ) ; ret . add ( rhs ) ; ret . add ( action ) ; ret . add ( not Equal Label Node ) ; return ret ; }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public static Format of ( int , int width , int ) { ( ! check Flag ( , width UNSET ) ) { } ( ( width width ) width UNSET ) { Argument ( invalid width : " + width ) ; throw new Illegal Argument Exception ( " invalid precision : " + precision ) ; return new Format Options ( flags , width , precision ) ;<CODESPLIT>Creates a options instance with the given values .
public void triple Click ) get triple click ) mouse p . y , 3 , Opera Mouse Keys . LEFT ) ;<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
private void initialize Nox Placeholder Typed attributes ) Drawable placeholder attributes get Drawable styleable nox item placeholder ) ; ( placeholder == null ) { } nox Config . set Placeholder ( placeholder ) ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public void prune Explorer ) { get Invalid Optional Keys ( ) ) { pruned Graph . remove ( key ) ; output . remove Binding ( key ) ; } output . set Graph ( pruned Graph . update ( ) ) ; }<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
private XML Description get ) { _ 0 ) ) { return simple Mapper Parser _ 1 _ 0 ; } return simple Mapper Parser _ 1 _ 1 ; return simple Mapper Parser ;<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public String get Absolute Template ( String template Name , boolean include ) { Fast String Fast String ( ) ; append ( ) ; Of ( ) ; append ( tmp . substring ( 0 , i ) ) ; buf . append ( SLASH _ UNDR ) ; } else { buf . append ( SLASH _ UNDR ) ; if ( include Extension ) { buf . append ( EXTENSION ) ; String uri = buf . to String ( ) ; buf . close ( ) ; return uri ;<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected void scan ( String start Path ) throws , { ( List ) { ( String path List ) { } } ( path With ( "/" ) ) { scan Resource Paths ( path ) ; } if ( path . ends With ( "/ implicit . tld " ) ) { parse Tld ( path ) ; } } else if ( path . ends With ( TLD _ EXT ) ) { parse Tld ( path ) ; } } } }<CODESPLIT>Scan web application resources for TLDs recursively .
protected boolean Drag SVG start SVG drag boolean Drag start Point , drag Point , evt , inside ) ; } return true ; }<CODESPLIT>Method called during drags .
private PGP Ring create Ring user create Ring )" {}, {}, {}" user set "********" PGP Ring generator Creating RSA pair generator RSA generator RSA generator init RSA Generation Parameters Big Of 10001 Secure Generating Signing Bc PGP signing Bc PGP PGP RSA SIGN generator generate Date Generating Encyption Bc PGP encryption Bc PGP PGP RSA ENCRYPT generator generate Date Generating PGP Subpacket Subpacket PGP Subpacket Subpacket set SIGN CERTIFY Subpacket set Symmetric Algorithms Encryption Algorithms Subpacket set Algorithms Hashing Algorithms Subpacket set Algorithms Algorithms Generating Encyption PGP Subpacket encryption Subpacket PGP Subpacket ( ) ; encryption Subpacket Generator . set Key Flags ( false , Key Flags . ENCRYPT _ COMMS | Key Flags . ENCRYPT _ STORAGE ) ; LOGGER . info ( " Creating PGP Key Ring Generator " ) ; generator = new PGP Key Ring Generator ( PGP Public Key . RSA _ SIGN , signing Key Pair , user Id , new Bc PGP Digest Calculator Provider ( ) . get ( Hash Algorithm Tags . SHA 1 ) , signature Subpacket Generator . generate ( ) , null , new Bc PGP Content Signer Builder ( PGP Public Key . RSA _ SIGN , Hash Algorithm Tags . SHA 256 ) , new Bc PBE Secret Key Encryptor Builder ( get Encryption Algorithm ( ) ) . build ( password . to Char Array ( ) ) ) ; generator . add Sub Key ( encryption Key Pair , encryption Subpacket Generator . generate ( ) , null ) ; } catch ( PGP Exception e ) { LOGGER . error ( "{}" , e . get Message ( ) ) ; generator = null ; } return generator ; }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public static Date get Date From String ( String String , String ) { { Date Format df build Date Format ( ) ; df parse ( String ) ; } catch ( Parse Exception e ) { } }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public remove ) ) ; ; ; ) Map = Hash Map Utils . merge ( _ cache L 1 , _ cache L 2 ) ; retval = new Map . remove ( key ) ; } _ cache L 1 = new Map ; _ cache L 2 . clear ( ) ; return retval ; } }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private get Cmdb cmdb ) ; cmdb get ) ; cmdb get ) ; hpsm Settings hpsm Settings get App ) ; hpsm Settings hpsm Settings get App ) ; boolean Check = false ; boolean sub Type Check = false ; if ( ! "" . equals ( hpsm Settings Type ) ) { type Check = true ; if ( ! "" . equals ( hpsm Settings Sub Type ) ) { sub Type Check = true ; if ( ! type Check && sub Type Check ) { if ( sub Type != null && sub Type . equals ( hpsm Settings . get App Sub Type ( ) ) ) { else if ( sub Type != null && sub Type . equals ( hpsm Settings . get Comp Sub Type ( ) ) ) { else if ( sub Type != null && sub Type . equals ( hpsm Settings . get Env Sub Type ( ) ) ) { else if ( type Check && ! sub Type Check ) { if ( type != null && type . equals ( hpsm Settings . get App Type ( ) ) ) { else if ( type != null && type . equals ( hpsm Settings . get Comp Type ( ) ) ) { else if ( type != null && type . equals ( hpsm Settings . get Env Type ( ) ) ) { else { return item Type ;<CODESPLIT>Returns the type of the configuration item .
tags ) ) { value tags get ) ; uuid value ) ) { } value ) ) { } " definition " . equals ( value ) ) { this . definitions . add ( new Definition ( ) ) ; else if ( " definition " . equals ( _ tags . get ( 0 ) ) ) { final Abstract Definition cur Def = this . definitions . get ( this . definitions . size ( ) - 1 ) ; cur Def . read XML ( _ tags . sub List ( 1 , _ tags . size ( ) ) , _ attributes , _ text ) ; } else {<CODESPLIT>Read event for given tags path with attributes and text .
public String get Update ( boolean Current Values ) { String Recordset get Record ( ) make Table ( ) ; Area Area get Record ( ) get Area ( ) ; boolean Current Values Current Values Area is ( TEMP _ AREA , true ) ; if ( s Filter . length ( ) > 0 ) s Filter = " WHERE " + s Filter ; String str Set Values = this . get Base Record ( ) . get SQL Fields ( DB Constants . SQL _ UPDATE _ TYPE , b Use Current Values ) ; if ( str Set Values . length ( ) == 0 ) return null ; return str Recordset ; }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public static synchronized void verify ( Object ... objects ) { ( Object objects ) { ( ) { verify ( ( ) ) ; } { ( invocation ) { invocation verify ( ) ; { { { . easymock . Easy Mock . verify ( mock ) ; catch ( Runtime Exception e ) { throw new Runtime Exception ( mock + " is not a mock object " , e ) ; } } } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public void map Tile Request Failed Tile Request ) { Tile Found Image ) { Tile Into get Tile ) Tile Found Image Expirable Drawable ) ; Tile Request Complete ) { null ) { handler . send Empty Message ( MAPTILE _ SUCCESS _ ID ) ; } } } else { if ( handler != null ) { handler . send Empty Message ( MAPTILE _ FAIL _ ID ) ; } } } if ( Configuration . get Instance ( ) . is Debug Tile Providers ( ) ) { } }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
static void validate And ( Field factory Path ) { ( factory get ( ) ) { } ( get Id ( ) ) { throw new Illegal Argument Exception ( " Invalid class Id ! Expected : " + fd . get Class Id ( ) + ", Current : " + class Id + " in path " + full Path ) ; } }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
public static get For Input boolean add Colon ) { get ) ; == null ) { label = input . get Name ( ) ; } label += COLON ; } return label ; }<CODESPLIT>Returns the label for this component
protected View inflate Placeholder View View convert View ) View convert View Placeholder View ) ) { } view . set Minimum Height ( height ) ; return view ;<CODESPLIT>Inflates an invisible placeholder view with a specific height .
public void stop ) stop Stopping Ldap Server " ) ; this . server . stop ( ) ; Log . info ( c , " stop Service " , " Stopping Directory Service " ) ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
public void set Minutes ( Minutes ) { ( Minutes ) { ( timer ) { timer ( ) ; timer ; this . stop Cache ( ) ; } } else { if ( timer Cache != null ) { timer Cache . cancel ( ) ; } this . start Cache ( ) ; timer Task = new DB Timer Task ( ) ; } }<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagate Enter ( GVR Picked hit ) { GVR hit hit get ( ) ; GVR get GVR ( ) get ( ) ; ( contains ( SEND _ TOUCH _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { event Manager . send Event ( this , I Touch Events . class , " on Enter " , hit Object , hit ) ; } if ( m Event Options . contains ( Event Options . SEND _ TO _ HIT _ OBJECT ) ) { } if ( m Event Options . contains ( Event Options . SEND _ PICK _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { event Manager . send Event ( this , I Pick Events . class , " on Enter " , hit Object , hit ) ; if ( m Event Options . contains ( Event Options . SEND _ TO _ HIT _ OBJECT ) ) {<CODESPLIT>Propagate onEnter events to listeners
public concurrent Quota Quota Async amazonaws handlers Async Quota Quota ) return get Send Quota Async ( new Get Send Quota Request ( ) , async Handler ) ; }<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
public Value ( ) Otp Erlang { Value ( ) ; i = ( short ) l ; if ( i != l ) { } return i ; }<CODESPLIT>Get this number as a short .
private Mjdbc Prefix ( String reason , String , int Code , ) { Mjdbc ; String get Sql ( ) ; String Prefix ; ( . ( ) >= 2 ) { sql State Prefix = sql State . substring ( 0 , 2 ) ; result = new Bad Sql Grammar Exception ( reason , SQL State , vendor Code ) ; } result = new Data Integrity Violation Exception ( reason , SQL State , vendor Code ) ; result = new Data Access Resource Failure Exception ( reason , SQL State , vendor Code ) ; result = new Transient Data Access Resource Exception ( reason , SQL State , vendor Code ) ; else if ( Spring Exception Handler Constants . SQL _ STATE _ PREFIX _ CONCURRENCY _ FAILURE . contains ( sql State Prefix ) == true ) { result = new Concurrency Failure Exception ( reason , SQL State , vendor Code ) ; return result ;<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public boolean ) { ) { ) ; } ( all != null ) { return all . equals ( name ) ; } if ( middle != null ) { return name . contains ( middle ) ; } return false ; } }<CODESPLIT>Checks if Simon name matches this pattern .
public static nslimitselector get ( nitro , selectorname ) { nslimitselector nslimitselector ( ) ; set _ selectorname ( selectorname ) ; return response ; }<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public static int Quad ( double eqn , double res ) { int rc 0 ; ( a 0 f ) { ( 0 f ) { ; } } { ( d 0 f ) { 0 ; } d Math . sqrt ( d ) ; res [ rc ++ ] = ( - b + d ) / ( a * 2 f ) ; if ( d != 0 f ) { } } return fix Roots ( res , rc ) ; }<CODESPLIT>Solves quadratic equation
public Term get All Terms ( ) { for ( Statement Group sg Groups ) { ret . add All ( stmt . get All Terms ( ) ) ; } } return ret ; }<CODESPLIT>Returns the set of all terms contained within the document .
public void ( Operation ) throws { ( ! has ( ) ) { error = ; int = 0 ; { ( In ) { synchronized ( this ) { . log ( Level . FINEST , FE => Fail ) ; pg Stream . send Char ( f ) ; pg Stream . send Integer ( 5 . ) ; pg Stream . send ( ) ; pg Stream . send Char ( 0 ) ; pg Stream . flush ( ) ; { process ( , ) ; } ( ) { ; ( error != null ) { while ( ( next = e . get Next Exception ( ) ) != null ) { } e . set Next Exception ( error ) ; } } } while ( has Lock ( op ) ) ; } } else if ( op instanceof Copy Out ) { send Query Cancel ( ) ; } } catch ( IO Exception ioe ) { } finally { synchronized ( this ) { if ( has Lock ( op ) ) { unlock ( op ) ; } } } if ( op instanceof Copy In ) { if ( errors < 1 ) { } else if ( errors > 1 ) { }<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
public ads adwords 201809 Attribute get Requested Attribute Types ( ) { requested Attribute Types ; }<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public void set Ont Mention Ont Mention de julielab jules Ont Mention ll _ cas . ll _ set Ref Value ( addr , ( ( Ont Relation Mention _ Type ) jcas Type ) . cas Feat Code _ range , jcas Type . ll _ cas . ll _ get FS Ref ( v ) ) ;<CODESPLIT>setter for range - sets
public List . ibm . wsspi . . wim . model . Player get Related Player ( ) { ( Player == null ) { } return this . related Role Player ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
public JC Underlying Unifier unifier ) unifier ) unifier Ident Key ( identifier ( ) ) ) ; }<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
public void clear clear Commerce Price finder clear FINDER _ CLASS _ NAME _ ENTITY ) ; finder Cache . clear Cache ( FINDER _ CLASS _ NAME _ LIST _ WITH _ PAGINATION ) ; }<CODESPLIT>Clears the cache for all commerce price entries .
private compute Capacity ( ) { MINIMUM CAPACITY ; } MAXIMUM CAPACITY ; } capacity = 1 ; while ( capacity < initial ) { } return capacity ; }<CODESPLIT>Compute capacity given initial capacity .
public get ) Timeout { timeout , unit ) ; return cache . get ( k ) ; }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static void Classpath ( Path Path , Path intermediate Path , ) { String get ( druid hadoop internal ) ; ( ) { get ( ) ; } String jar ( File ) ; Configuration job . get Configuration ( ) ; final File System fs = distributed Class Path . get File System ( conf ) ; if ( fs instanceof Local File System ) { return ; } for ( String jar File Path : jar Files ) { final File jar File = new File ( jar File Path ) ; if ( jar File . get Name ( ) . ends With ( ". jar " ) ) { try { } catch ( Exception e ) { throw new Runtime Exception ( e ) ; } } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public void ( String javascript ) throws Widget { Web Element find Element ( ) ; { ( ( Javascript ) ) . execute Script ( javascript , ) ; ( ) { boolean success ; { success true ; } catch ( Exception e 2 ) { try { Thread . sleep ( 500 ) ; catch ( Interrupted Exception e 1 ) { } } } if ( ! success ) { throw new Runtime Exception ( e ) ; } }<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
public add instant ) set instant get Wrapped Value get instant ) , i Divisor - 1 ) ) ; }<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected Contract Coin To Me ) wallet ) ) add ) subtract To Me ) Legacy from ( wallet . get Params ( ) , get Client Key ( ) ) ) ; } tx . add Input ( contract . get Output ( 0 ) ) ; return Send Request . for Tx ( tx ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
public static get User From Token Token ) { ; } Token TOKEN SEPARATOR ) [ 0 ] ; }<CODESPLIT>Extracts the user name from token .
protected Class resolve Proxy Class ( String [ ] Names ) throws Class Not Found { Class non = ; ( int = 0 ; Names . ; ) { ( ! . is ( intf . get Modifiers ( ) ) ) { Class Loader class Loader = get Class Loader ( intf ) ; ( non null ) { if ( class Loader != proxy Class Loader ) { } } else { } } } try { return Proxy . get Proxy Class ( proxy Class Loader , interfaces ) ; } catch ( Illegal Argument Exception ex ) { throw new Class Not Found Exception ( null , ex ) ; } }<CODESPLIT>Delegates class loading to the specified class loader .
public static double Sums ( double ) { double double . length ] ; x [ i ] = sum ( data [ i ] ) ; } return x ; }<CODESPLIT>Returns the row sums for a matrix .
protected void rehash ( int Capacity ) { int Capacity ; long Table ; int Values ; long Table long [ new Capacity ] ; int new Values [ ] = new int [ new Capacity ] ; this . table = new Table ; this . values = new Values ; this . state = new State ; for ( int i = old Capacity ; i -- > 0 ; ) { if ( old State [ i ] == FULL ) { long element = old Table [ i ] ; int index = index Of Insertion ( element ) ; new Table [ index ] = element ; } } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public void add ( Hpack Field header ) { ( header ) { clear ( ) ; ; } ( header Size ) { remove ( ) ; } size += header . size ( ) ; head = 0 ; }<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private void fired ( Direction ) { ( Launcher listeners Launcher ) { notify Fired ( ) ; } ( Launchable Config launchable Config launchables ) { { ( launchable Config get Delay ( ) ) { } { launch ( launchable Config , , featurable , launchable ) ; } } ( final Lion Engine Exception exception ) { featurable . get Feature ( Identifiable . class ) . destroy ( ) ; throw exception ; } } }<CODESPLIT>Called when fire is performed .
public static void init Invocation invmgr omgr invmgr invmgr invmgr register ) , Time Base Marshaller . class , GLOBAL _ GROUP ) ; }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
static Ufs Journal create start Ufs Journal location , start , end , false ) ; }<CODESPLIT>Creates a journal log file .
protected write Replace )  Certificate Rep ) ) Certificate ) Serializable Exception ( " java . security . cert . Certificate : " + type + ": " + e . get Message ( ) ) ;<CODESPLIT>Replace the Certificate to be serialized .
private static extract ) { extract ( arguments [ arguments . length - 1 ] ) ; }<CODESPLIT>Returns a throwable if the last argument is one .
public static Bond Bond make Bond Maps Of Atom Maps Atom Atom Atom Atom mappings ) { ( Map < I Atom , I Atom > mapping : mappings ) { bond Maps . add ( make Bond Map Of Atom Map ( ac 1 , ac 2 , mapping ) ) ; } return bond Maps ; }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
public Constant add Constant By ) ; if ( entry != null ) return entry ; add Constant ( entry ) ; add Constant ( null ) ; return entry ; }<CODESPLIT>Adds a long constant .
public Or ) Or ( name , file , true ) ; }<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
public static int extract From Name ( String clz name ) { int clz name Index Of ( ) ; ( ) 1 ; try { catch ( Number Format Exception ex ) { return - 1 ;<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private void draw Canvas Paint Appearance Appearance bounds ) { Appearance ) ) { canvas . draw Round Rect ( bounds , corner Size , corner Size , paint ) ; } else { canvas . draw Path ( path , paint ) ; } }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public get ( analyzer analyzer Input ) { candidates ( ) ; candidates refine Candidates ( candidates -> { get ( ) get ( ) ; ( ) ; } ) ; ( analyzer ) { candidates Collection Utils 2 . refine Candidates ( candidates , o -> { final String actual Analyzer Name = o . get Name ( ) ; return analyzer Name . equals ( actual Analyzer Name ) ; } ) ; } if ( analyzer Input Name != null ) { } if ( candidates . is Empty ( ) ) { logger . error ( " No more Analyzer Job candidates to choose from " ) ; return null ; } else if ( candidates . size ( ) > 1 ) { } return candidates . iterator ( ) . next ( ) ; }<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
public boolean remove Trade Bitfinex Trade trade Consumer Bitfinex Trade Bitfinex Trade Bitfinex Client trades remove ( trade Symbol , callback ) ; }<CODESPLIT>Remove a executed trade callback
public Health Dto Health ) Health Health Dependencies health Dependencies ) ) Health ) collect ( ) ) ; return check Health ( primary Health Dependencies ) ; }<CODESPLIT>Performs the Primary Health Check .
public static appfwxmlerrorpage get nitro ) { appfwxmlerrorpage appfwxmlerrorpage ) get resources ( service ) ; return response [ 0 ] ; }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private void Client Client ) add Interceptor Interceptor ) public void ) header Location " ) ; if ( header != null ) context . set Attribute ( " Location " , header . get Value ( ) ) ; } } ) ; }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private void Select ( P , Axis , median ) { Points ( ) ; ( Points ) { tmp = new double [ num Points ] ; indexes = new int [ num Points ] ; } } Quick Select . select Index ( tmp , median Num , num Points , indexes ) ; }<CODESPLIT>Uses quick - select to find the median value
) ) "<" ) ) Out print ( "& lt ;" ) ; } else if ( token . equals ( ">" ) ) { p Out . print ( "& gt ;" ) ; else if ( token . equals ( "&" ) ) { p Out . print ( "& amp ;" ) ; else { p Out . print ( token ) ;<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
protected String get Name ( ) { node . get Node Name ( ) : result ; }<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
public void set Expiry Date Int from month Int from 9999 year Expiry Date set Date . create Date String From Integer Input ( month , year ) ) ; }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected Ddl Ddl Ddl "-- \ Drop Dependencies "\ "-- \ apply Foreign Keys ( ) . get Buffer ( ) + write . apply History View ( ) . get Buffer ( ) + write . apply History Trigger ( ) . get Buffer ( ) ) ; }<CODESPLIT>Write the Apply DDL buffers to the writer .
protected static boolean Equals clz clz ) clz clz )  clz clz clz 1 . get Name ( ) . equals ( clz 2 . get Name ( ) ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
public void add Shared ) { ) ) get ) null ; do Add Shared Function ( source , file Name ) ; }<CODESPLIT>Add shared function by ISource
public void set Commerce Price liferay commerce price Commerce Price commerce Price commerce Price = commerce Price List Service ; }<CODESPLIT>Sets the commerce price list remote service .
public static Html ( ) { htmltree set ( Role . MAIN ) ; return htmltree ; }<CODESPLIT>Generates a MAIN tag with role attribute .
public static cachepolicylabel get nitro labelname ) { set labelname labelname ) ; cachepolicylabel cachepolicylabel _ stats ) obj . stat _ resource ( service ) ; return response ; }<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected void Broker ( File mapfile Broker ) { ( ( ) ) { ; } { bout ( new File Writer ( mapfile ) ) ; broker . write To ( bout ) ; bout . close ( ) ; catch ( IO Exception ioe ) {<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
public void update ) execute ) public In ) Exception , Data Access Exception { crud . update ( connection , values ) ; return null ; } } ) ; }<CODESPLIT>update the objects .
Int ) public As Int ) As Int )  public ( ) { return get As Int ( ) ; public Mutable Int set ( final int value ) { c . accept ( value ) ; return this ;<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
public void configure ( Config ) { ( Reloading configuration ." ) ; Write lock ( ) ; try { process App Packages ( config ) ; finally {<CODESPLIT>Replace the configuration of this instance directly .
protected void add ) { name ( ) , type ) ; put Property ( Property Key . Status . name ( ) , Status . Start . name ( ) ) ; }<CODESPLIT>Add properties to properties map on transaction start
public List Sequence List Type Sequence get Sequence ( ) { ( sequence ) { } this . sequence ; }<CODESPLIT>Gets the value of the sequence property .
public add ( field boolean include supplier ) { ( include ) { value supplier get ( ) ; ( value != null ) { } } return this ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public void disconnect Card One Consumer ) Tracing ) tc ) ) Sib Tr tc disconnect Card One Consumer ) ; synchronized consumer Points ) cloned Consumer Points consumer Points ) ;  FFDC ibm sib processor Consumer disconnect Card One Consumer 1 : 945 : 1 . 97 . 2 . 21 " , this ) ; Sib Tr . exception ( tc , e ) ; for ( int i = 0 ; i < cloned Consumer Points . length ; i ++ ) { ck . notify Consumer Point About Exception ( e ) ; } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " disconnect Card One Consumer " ) ; }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
public boolean Administrator ) ) ) ) get Password ( ) != null && ctx . get Password ( ) . equals ( admin Pass ) ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ( ) { ( settings autostart ( ) ) { settings get Runner ( ) ; } { settings set ( Opera PORT IDENTIFIER ) ; } create Scope ( ) ; ( ) { start Opera ( ) ; } services init ( ) ; debugger = services . get Debugger ( ) ; debugger . set Driver ( this ) ; window Manager = services . get Window Manager ( ) ; exec = services . get Exec ( ) ; core = services . get Core ( ) ; cookie Manager = services . get Cookie Manager ( ) ; mouse = new Opera Mouse ( this ) ; keyboard = new Opera Keyboard ( this ) ; settings . set Product ( utils ( ) . get Product ( ) ) ; } } proxy = new Opera Proxy ( this ) ; proxy . parse ( settings . get Proxy ( ) ) ;<CODESPLIT>Initialize required Scope services .
public static String calculate 5 ( String ) { [ ] hash ; { } ( No ) { } ( ) { } String hex = String ( hash . 2 ) ; for ( hash ) { int = ( & 0 x FF ) ; if ( i < 0 x 10 ) hex . append ( ' 0 ' ) ; hex . append ( Integer . to Hex String ( i ) ) ; } return hex . to String ( ) ; }<CODESPLIT>Calculate the MD5 of a given String
protected static find Raw ) raw find Res Raw ) raw != null ) { return raw Dir ; } dir = dir . get Parent File ( ) ; } return null ; }<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
public Object resolve ( ) { get Resolver ( ) . get Value ( ctx , null , p Name ) ; }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected Dependant Value create Value ( In Flight mappings persistent ) { Value Value ; Dependant Value ; get Referenced ( ) ; ( ) { key Value = collection . get Owner ( ) . get Identifier ( ) ; } else { key Value = ( Key Value ) collection . get Owner ( ) . get Property ( property Ref ) . get Value ( ) ; } key . set Type Name ( null ) ; key . set Nullable ( true ) ; key . set Updateable ( false ) ; return key ; }<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
protected Exp get Var Exp Lex Token vardef ) Exp = get Var Exp ( name , vardef ) ; return var ; }<CODESPLIT>Generate Var Exp with everything!
public static boolean Or White Or ) . is Empty ( ) ) { return true ; } return false ; }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
public By block ) Proposal By get Shuffled Peers of Peer Role . LEDGER _ QUERY ) ) , block Number ) ; }<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
public static ) Getters As type ) . get ( name ) ; }<CODESPLIT>Search getter for given class and property name .
public static LZ To ( , dictionary ) { { ( LZ ( ) , 8 " ) ; catch ( Unsupported Encoding Exception e ) {<CODESPLIT>Decode lz to string string .
public static Airline Flight Airline Flight intro pnr Airline Flight Builder ( intro Message , locale , pnr Number , update Type ) ; }<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void add Modules modules aditionalpath ) { ) ; aditionalpath ) { add ) ; append aditionalpath ) ; } modules modules ) { contains ) ) { add ) ; } ; modules ; ) { modules ; Artifact artifact ; @ ) Artifact Artifacts get Artifacts ) ; for ( Artifact art : all Artifacts ) { artifact = art ; break ; } } if ( artifact == null ) { throw new Mojo Execution Exception ( " The artifact " + module . to String ( ) + " referenced in aspectj plugin as " + role + ", is not found the project dependencies " ) ; } if ( buf . length ( ) != 0 ) { buf . append ( File . path Separator Char ) ; } buf . append ( artifact . get File ( ) . get Path ( ) ) ; } } if ( buf . length ( ) > 0 ) { String path String = buf . to String ( ) ; arguments . add ( path String ) ; get Log ( ) . debug ( " Adding " + argument + ": " + path String ) ; } }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
public static extract Aero Gear Sender Request request ) { Value ) ) { ; } request . get Header ( " user - agent " ) ; }<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public Flux request request ) Flux defer ) request not ) ; not ) ; . create ( address ) . request Stream ( request ) . map ( message -> Service Message Codec . decode Data ( message , response Type ) ) . map ( this :: throw If Error ) ; } ) ; }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
Object Input Stream ois ; { ( ) { Transaction changes read External ( ois ) ; Iterator cli changes get Iterator ( ) ; ( cli has Next ( ) ) { ( cli ( ) get Event Type ( ) Extended Event ) { cli remove Log ( ) ; } } save Changes Log ( changes Log ) ; } } catch ( EOF Exception ioe ) { if ( LOG . is Trace Enabled ( ) ) { LOG . trace ( " An exception occurred : " + ioe . get Message ( ) ) ;<CODESPLIT>Perform incremental restore operation .
public start ) ) ; consumers Consumer ) ; public void Byte ) += buffer . remaining ( ) ; } public Integer finish ( ) { return count ; } } ) ; return object ; }<CODESPLIT>Initializes a byte counter on this channel .
public static boolean is Element ( String ) { ( ) ; boolean ; { ( Element e ) { logger . exiting ( flag ) ; return flag ;<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static void main ( String ) throws { Thread Thread ( ) { public void run ( ) { synchronized ( ) { delete ( , ) ; { Thread ( 4000 ) ; catch ( Exception e ) { buffer . append ( " of fall " ) ; Thread t 2 = new Thread ( ) { public void run ( ) { try { Thread . sleep ( 1000 ) ; catch ( Exception e ) { t 1 . start ( ) ; t 2 . start ( ) ; t 1 . join ( ) ; t 2 . join ( ) ;<CODESPLIT>We have more input since wait started
protected interpolate ) { ; Double Na gp ) ) { Interpolate quadratic fprev gprev stprev fp stp ) ;  { New = Search Interpolate . cubic 2 ( fprev , gprev , stprev , fp , gp , stp ) ; } if ( bound A < bound B ) { } else { } if ( alpha New < l ) alpha New = l ; else if ( alpha New > u ) alpha New = u ; return alpha New ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private Semantic Error check ( Type Type ) { finer ( semantic on datatype Type name ) ; Semantic Error Array Semantic Error ( ) ; String constructor Names = new Hash Set < String > ( ) ; for ( Constructor constructor : data Type . constructors ) { errors . add ( _ Constructor Data Type Conflict ( data Type . name ) ) ; } if ( constructor Names . contains ( constructor . name ) ) { errors . add ( _ Duplicate Constructor ( data Type . name , constructor . name ) ) ; } else { constructor Names . add ( constructor . name ) ; } errors . add All ( check ( data Type , constructor ) ) ; } return errors ; }<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
protected void register Grails Plugin add get Name ( ) ) ; additional List . add ( plugin ) ; add Plugin Dependencies ( additional List , plugin ) ; } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private Json execute Request ( Post request ) , Grooveshark { http Client execute ( request ) ; ( Logging ) { log Request ( request , ) ; } { read ( Reader ( ) ) ; } ( Json Processing ) { Grooveshark Error ( " Failed to parse response - received data was not valid JSON : " + response Payload ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public Map String , parse Map ( Json ) throws { ( Token ( ) Json Token ) { String json Parser . get Text ( ) ; json Parser . next Token ( ) ; map . put ( key , null ) ; else { map . put ( key , parse ( json Parser ) ) ; return map ;<CODESPLIT>Parse a map of objects from a JsonParser .
public Date Func Sup subtract Date Seperator set parse ( ) ) ; return this ; }<CODESPLIT>subtract date on supported date
private double radical Inverse ) { double radical ; ) { inverse ( double ) ( i % base ) ; digit *= radical ; i /= base ; } return inverse ;<CODESPLIT>Compute the radical inverse of i .
public static String get Temp ( ) { synchronized ( File ) { ( TEMP DIR ) { ( String Empty ( ) ) { if ( new File ( "/ temp " ) . exists ( ) ) { } else { } } } } return TEMP _ DIR ; }<CODESPLIT>Gets the default temp directory for the system .
public static Accumulator Accumulator reduce Accumulator init Closure Accumulator ) Accumulator accumulator init ) accumulator f . eval ( accumulator , value ) ; } return accumulator ; }<CODESPLIT>Applies a binary function between each element of the given list .
protected Process Output execute Process ( Fax fax command Fax fax ) { ( command ) { ( ) ; } command ; ( Windows ) { . append ( this . windows Command Prefix ) ; buffer . append ( " " ) ; buffer . append ( updated Command ) ; updated Command = buffer . to String ( ) ; } Process Output process Output = Process Executor Helper . execute Process ( this , updated Command ) ; return process Output ; }<CODESPLIT>Executes the process and returns the output .
public get ) { ) add , CONNECTOR , name ) ; return read Resource ( address , true ) ; }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( Detector det , int [ common Chars ) { int double Byte Char Count = 0 ; int common Char Count = 0 ; int Char Count = 0 ; int Char Count = 0 ; int confidence = 0 ; iterated Char = iterated Char ( ) ; Char Count ; ( . error ) { Char Count ; } { long cv = . char Value & 0 FFFFFFFFL ; ( cv <= 0 xff ) { Byte Char Count ; } { double Byte Char Count ; ( common Chars ) { common Char Count ++ ; } } break detect Block ; if ( double Byte Char Count <= 10 && bad Char Count == 0 ) { if ( double Byte Char Count == 0 && total Char Count < 10 ) { else { break detect Block ; if ( double Byte Char Count < 20 * bad Char Count ) { break detect Block ; if ( common Chars == null ) { if ( confidence > 100 ) { else { confidence = Math . min ( confidence , 100 ) ; return confidence ;<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
public static void extract Matrix , int src X 1 , D Matrix dst ) { ( ( Reshape Matrix ) dst ) . reshape ( src Y 1 - src Y 0 , src X 1 - src X 0 ) ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public void Eip Resize Eip Request ) set Client Token generate Client Token ) ) ;  Internal Request internal Request create Request Method PUT get Eip ( ) ) ; internal Request . add Parameter ( " resize " , null ) ; internal Request . add Parameter ( CLIENT _ TOKEN _ IDENTIFY , request . get Client Token ( ) ) ; fill Payload ( internal Request , request ) ; invoke Http Client ( internal Request , Abstract Bce Response . class ) ; }<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
private void Next As New Contact Seed Broker ( ) { ( current Contact Seed Broker seed Broker ) { current Contact Seed Broker 0 ; } URL Contact Url Net . get Correct Hostname Port ( seed Broker Addresses [ current Contact Seed Broker Index ] ) ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private unescape ( value ) { ( ) ; ( ; value ( ) ; ) { value At ( ) ; ( ESCAPE ) { value ( i + 1 , i + 3 ) ; if ( code < reserved Chars . length && reserved Chars [ code ] == code ) { result . append ( reserved Chars [ code ] ) ; i += 2 ; } else { } } else { result . append ( c ) ; } } return result . to String ( ) ; }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected Map read File ( Map br Map ) throws { Map Map ( ) ; Map String , Map read Obv Data ( br Map ) ; Array List Map obv Data ; ( String exname files . key Set ( ) ) { for ( Hash Map obv Sub : obv Data ) { exp Data = new Hash Map ( ) ; obv = new Hash Map ( ) ; exp Data . put ( json Key , obv ) ; exp Arr . add ( exp Data ) ; } } Array List id Names = new Array List ( ) ; id Names . add ( " trno _ t " ) ; remove Index ( exp Arr , id Names ) ; ret . put ( " experiments " , exp Arr ) ; return ret ; }<CODESPLIT>DSSAT TFile Data input method for Controller using
public static Fixed Interpolator create Interpolator Parameters delimiters extract delimiters Fixed Interpolator create Docker Docker Interpolator Interpolator Reader . create Project Interpolator ( params . get Project ( ) ) . with Expression Markers ( delimiters [ 0 ] , delimiters [ 1 ] ) , config Source ) . with Expression Markers ( delimiters [ 0 ] , delimiters [ 1 ] ) ;<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public static boolean Cleanup In Progress ( Zoo Keeper zk ) Keeper , { ZK ( ) ; ( ) { ZK Callback callback = new ZK Util . Children Callback ( ) ; children Callbacks . add ( callback ) ; } for ( ZK Util . Children Callback callback : children Callbacks ) { if ( callback . get ( ) . is Empty ( ) ) { return true ; } } return false ; }<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private [ unify L Data ( CEMI ldata , boolean Src , List Integer types ) { [ ; ( ldata CEMIL Data Ex ) { CEMIL Data Ex ext = ( ( CEMIL Data Ex ) ldata ) ; synchronized ( ) { Add = . ( ) ; if ( ! types . contains ( info . get Type ( ) ) ) { logger . warn ( " remove L - Data additional info {}" , info ) ; i . remove ( ) ; } } } } data = ldata . to Byte Array ( ) ; if ( empty Src ) { } return data ; }<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public static Number ( array ) { int [ array . length ] ; b [ i ] = array [ i ] . int Value ( ) ; } return b ; }<CODESPLIT>Convert any number class to array of integer .
synchronized void set Active ( handle ) { check ( handle handle Read ( ) , Active handle cannot readonly ." ) ; last Chunk ( ) ; Preconditions . check State ( last != null , " Cannot set an Active Segment Chunk handle when there are no Segment Chunks ." ) ; this . active Chunk Handle = handle ; }<CODESPLIT>Sets the Active SegmentChunk handle .
public get ) Timex Timex ) ) ) de unihd dbs uima types heideltime Timex " ) ; return jcas Type . ll _ cas . ll _ get String Value ( addr , ( ( Timex 3 Interval _ Type ) jcas Type ) . cas Feat Code _ empty Value ) ; }<CODESPLIT>getter for emptyValue - gets
public static Account Account ( Bitstamp Balance bitstamp Balance , String user Name ) { List Balance balances = Array List > ( ) ; for ( org . knowm . xchange . bitstamp . dto . account . Bitstamp Balance . Balance b : bitstamp Balance . get Balances ( ) ) { balances . add ( xchange Balance ) ; } return new Account Info ( user Name , bitstamp Balance . get Fee ( ) , new Wallet ( balances ) ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
public void after Session ) {}, Status : {}" , session , status . to String ( ) ) ; }<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public static String trim Last Path ( String path ) { String sections path . split ( ) ; ( int ; sections . 1 ; i ++ ) { } return new Path . to String ( ) ; }<CODESPLIT>Removes the last part of a file path .
static Style red Style Style Palette Solid ( Palette Utils . MATERIAL _ RED ) ; return style ;<CODESPLIT>Default material red transparent style for SuperToasts .
public Object Context create Context ( ) { ; get Descriptor ( ) ; if ( ! ejb Descriptor . is Message Driven ( ) ) { bean = get Bean ( ) ; } Weld Manager bean Manager = get Bean Manager ( ) ; return managed Object Context ; }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
public void delete set Name ( name ) . build ( ) ; delete Operation ( request ) ; }<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
public boolean Member ) { ) ; wordshift ) [ x >>> wordshift ] & ( 1 << ( x & wordmask ) ) ) != 0 ; }<CODESPLIT>Is x an element of this set?
public add ) { add ( handler , Search Finish Event . TYPE ) ; }<CODESPLIT>This handler will be triggered when search is finish
public void set Foreign Bus ( boolean send ) { } send On Target Foreign Bus Boolean value Of ( send ) ; ( aliases Target This ) { aliases Target This iterator ( ) ; ( has ( ) ) { Abstract Alias Destination Handler abstract Alias Destination Handler = ( Abstract Alias Destination Handler ) i . next ( ) ; abstract Alias Destination Handler . set Foreign Bus Send Allowed ( send Allowed ) ; } } } Sib Tr . exit ( tc , " set Foreign Bus Send Allowed " ) ; } }<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
public void processing Instruction ) ) Handler . processing Instruction ( target , data ) ; }<CODESPLIT>Adapt a SAX2 processing instruction event .
public static get File On FTP ( , , user , , Path ) { ; reply execute On FTP ( , , user , , , Path ) ; ( reply reply String . contains ( " " ) ) { else { result = Integer . value Of ( reply String . split ( " " ) [ 1 ] . replace All ( "[\ r \ n ]" , "" ) ) ; return result ;<CODESPLIT>Get size of the FTP file .
public static responses enable ( nitro client , String trapname [ ) throws { responses = ; ( trapname trapname . 0 ) { snmpalarm enableresources [ = snmpalarm [ trapname . ; } result = perform _ operation _ bulk _ request ( client , enableresources , " enable " ) ; } return result ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
public void ordered ( Consumer T action ) { sorter . ordered ( action ) ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public static Seq Group parse asg ) { asg index Of '-' ) ; asg Index Of ( '-' ) ; d N = asg . length ( ) ; } return new Seq Server Group ( asg , d 1 , d 2 , d N ) ; }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
private static get Map Count ( Count , Nodes ) { Maps ( Maps , Nodes MAPS PER _ NODE ) ; return Math . max ( num Maps , 1 ) ; }<CODESPLIT>Calculate how many maps to run .
protected void Read ( Channel Handler Context , Binary Memcache Response ) throws { ( get ( ) ) { Promise set ( ) ; ( ) remove ( ) ; . fire Channel Active ( ) ; break ; break ; break ; default : original Promise . set Failure ( new Authentication Exception ( " Unhandled select bucket status : " + msg . get Status ( ) ) ) ; } }<CODESPLIT>Handles incoming Select bucket responses .
private Dice unwrap ( Dice ) { Dice ; ( expression instanceof Expression Wrapper ) { } else { result = expression ; } return result ; }<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public static float [ ] check Array Elements In Range ( float [ ] value , float lower , float upper , String value Name ) { check Not Null ( value , value Name + " must not " ) ; for ( int = 0 ; < value . length ; ) { float v = value [ ] ; if ( Float . is Na N ( v ) ) { throw new Illegal Argument Exception ( value Name + "[" + i + "] must not be Na N " ) ; } else if ( v < lower ) {<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
public static void copy Input copy Stream , output Stream , true ) ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
tuples Array ( ) ; ( ; ; ) { Var Var Defs get ( ) ; Iterator Var Value Var get Valid Values ( ) ; if ( ! values . has Next ( ) ) { } if ( sub Tuples == null ) { while ( values . has Next ( ) ) { else if ( ! sub Tuples . is Empty ( ) ) { while ( values . has Next ( ) ) { Var Binding Def next Binding = new Var Binding Def ( next Var , values . next ( ) ) ; for ( Tuple sub Tuple : sub Tuples ) { Tuple next Tuple = new Tuple ( next Binding ) . add All ( sub Tuple ) ; if ( next Tuple . is Compatible ( ) ) { tuples . add ( next Tuple ) ; } } } return tuples ;<CODESPLIT>Returns all valid tuples of values for the given input variables .
public get ( ) { hash hash ( ) ; index Of ( hash ) ; ( hash hash && entry . key . equals ( key ) ) { return entry . value ; } } return null ; }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
public boolean ( , ) { ( , Required . SECRET . to String ( ) ) ; return Totp Utils . verified Totp ( secret , number ) ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected void update Edges DL ( L prev L , Emissions emission ) { update Outgoing Edges ( curr S , curr L , States . DL , prev S , prev L , States . DL , Transitions . t _ DL _ in , emission ) ; }<CODESPLIT>Enumerates the possible transitions into state DL .
public void set ( String , String ) { Pdf Name fieldname Pdf Name ( ) ; Pdf Object get ( fieldname ) ; ( ) ( You must set value adding a prefix ." ) ; dict . put ( Pdf Name . D , o ) ; put ( fieldname , dict ) ; }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected Expression replace Expressions With Pve ( Expression expr ) { assert ( expr ) ; ( expr Value Expression ) { int param Parameterization get Next Param ( ) ; Tve Map ( param , expr ) ; pve ; ( expr Aggregate Expression ) { assert ( Stmt != null ) ; for ( Tuple Value Expression tve : tves ) { int orig Id = tve . get Orig Stmt Id ( ) ; } } m _ parameter Tve Map . put ( param Idx , expr ) ; return pve ; } if ( expr . get Left ( ) != null ) { expr . set Left ( replace Expressions With Pve ( expr . get Left ( ) ) ) ; } if ( expr . get Right ( ) != null ) { } if ( expr . get Args ( ) != null ) { for ( Abstract Expression argument : expr . get Args ( ) ) { } expr . set Args ( new Args ) ; } return expr ;<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private static boolean add ( String , ) { boolean is ; ( list ) { BACKLOG ( Id , list ) ; is First = true ; } list . add ( callback ) ; return is First ; }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
public static gunzip ( ) throws { Inflater Output Stream dos Inflater Output Stream ( bos ) ; dos write ( compressed Bytes ) ; dos . close ( ) ; return bos . to Byte Array ( ) ; }<CODESPLIT>to avoid linking all that jazz into the client code
public ) ) tve ) Table Alias ( ) , schema Col . get Column Alias ( ) , schema Col . get Column Alias ( ) , index ) ; return tve ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
