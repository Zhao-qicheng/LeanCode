public ExampleData getSelectedExampleData ( )SelectedItems getSelectedRows ( ) ;SelectedItemsSelectedItems ( ; } ( selectedItemItems TreeItem ( selectedItem ; getTreeModel ( )ExampleData ( rowIndex ) ; } ; }<CODESPLIT>Get the example which is selected in the tree .
public void dimAt ( float alpha )Dim ; }DimViewDimViewDimView ( ) ; }DimViewShownDimView ( VISIBLE ;DimViewBackgroundColor (Dim ; }DimViewAlpha ( alpha ; }<CODESPLIT>Set the dim - behind layer a specific opacity .
public Path extract ( ) { ( ( (Extract once ; extractSW start ( ) ; S ; setEndNode (Edge adjNode ) ; EdgeIterator Edge ( edge ) ; ; (EdgeValid Edge Edge isValid (Edge parent edge ) ; parent edge Edge ; processEdge (Edge edgeEdge adjNodeEdge ) ; parent ; } setFromNode (Edge adjNode ) ; reverseOrder ( ) ; extractSW stop ( ) ; set ( ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public static int writeInt ( byte target int offset int value ) { target ( ) ( ) ; target + ( ) ( ) ; target + ( ) ( ) ; ( ) ; Integer BYTES ; }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
private void visitGetElem ( Node n validator expectMatch ( getJS ( ( getJS ( ( ;Typed ( ; }<CODESPLIT>Visits a GETELEM node .
private static Class getTypedClass ( java. lang. reflect. Type type ) ( ( Class ) type ) ; } ParameterizedType reflect ( ( ) ) ( ) ; getTypedClass ( rawParamterizedType ) ; } TypeVariable ( ( TypeVariable ) ) ( ) ; getTypedClass ( upperBound ) ; } ( finding generic + ) ; }<CODESPLIT>Gets the typed class .
public URI toUri ( JimPath path fileStore ( ( ;ServiceUri ( uri ( ) ) ;<CODESPLIT>Gets the URI of the given path in this file system .
public ActivityInterface getActivityInterface ( ) activity activity Activity ( shared ; } activityInterface ; }<CODESPLIT>Get the ActivityInterface .
private void initBeforeList ( ) { ProcessAdProcessAd ( ) ; Method invokeHolderInvokeHolder ( ) ;? processor invokeHolder getDeclaringClass ( ) ; ( processor processor isAnnotationPresent ( Before ) )? ProcessAd processor getAnnotation ( Before ) ( ) ; ( ; ; )? ProcessAd bc ; ProcessAdProcessAd BeanManager ( ) getReference ( bc ) ; beforeRequestProcessAd ( beforeRequestProcessAd ) ; } } ( invokeHolder isAnnotationPresent ( Before ) )? ProcessAd invokeHolder getAnnotation ( Before ) ( ) ; ( ; ; )? ProcessAd bc ; ProcessAdProcessAd BeanManager ( ) getReference ( bc ) ; beforeRequestProcessAd ( beforeRequestProcessAd ) ; } } thisRequestProcessAdvices =RequestProcessAdvices ; }<CODESPLIT>Initializes before process advices .
private void init ( ) { Json ( ) ; js configure ( Json FeatureCOMMENT ) ; js configure ( Json Feature ALLOWSINGLEQUOTES ) ; js configure ( Json Feature ALLOW ) ; }<CODESPLIT>Creates the JsonFactory .
static void flushStackLocalLeaks ( lo ) Handler handler Handler ( lo ) void handleMessage ( Message msg ) sendMessageDelayed ( ( TH ; } } ; handler sendMessageDelayed ( handler ( TH ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
public void addReset ( label ) ( buttons buttons ( ; Input ( Input ResetReset label ; ( extendRow addField ( ; buttons ( ; }<CODESPLIT>Add a reset button .
public getMaximumVolume ( Context ( ( Audio getSystem ( Context AUSERVICE ) ) getStreamVolume ( Audio STREAMSIC ) ;<CODESPLIT>Returns maximum volume the media volume can have
 (checkstylenpathity" ) void removeSREs ( ISREInstall... sres ) { ISREInstallRERE ( ) ;RE :RE getId ( ) ; ; (Id ) ( ; default thisTable getItem ( ; (Id ( ( (Install )reTable getItem ( ) getData ( ) ) getId ( ) ) ) = ; } } } norm ( ) ;Removed ; ( ISREInstall (reArray remove (re )re getId ( ) (Id ) )Removed ; } } refreshREListUI ( ) ; (Removed ) (reTable getItem ( ) ) setSelection ( ) ; } ( ) = ; } (reTable getItem ( ) ) = thisTable ( ) ; }Selection ( StructSelection ( thisreTable getItem ( ) getData ( ) ) ) ; } } thisList refresh ( ) ; (Removed ) fireDefaultREChanged ( ) ; } updateUI ( ) ; }<CODESPLIT>Removes the given SREs from the table .
public static WikiUser getUser ( String wikiId, String siteurl ) { WikiUser ; Properties getProperties ( wiki ) ; WikiUser ( ) ;Username ( ( ) ) ; ( (email ) ) ; Crypt pc Crypt ( props ( ) props (salt ) ) ; setPassword ( pc decrypt ( ( ) ) ) ; } ) help ( wiki siteurl ) ; ( Level ) ; } ) ( Level ( ) ) ; } General ) ( Level ( ) ) ; } return ; }<CODESPLIT>get the Wiki user for the given wikiid
public T next ( ) { ; T delegate ( ) ; (Generated ( )Generated ( ) ; next ; } ; } ( numberOfRetries ; new ( ( ) join (, numberOf, generate unique value ) ) ; }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
 isAllowedInsideList ( Node node ( ( ) Node ELEMENTNODE getNodeName ( ) ( TAG ) ) ( ( ) Node TEXTNODE getNodeValue ( ) ( ) ( ) ) ;<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static ResidueNumber [ matchSequenceToStructure ( ProteinSequence seq Structure struct ) { Group atom Group ( ) ; ProteinSequence structSeq getProteinSequenceStructure ( struct atom ) ; SubstitutionMatrix AminoAcCompound matrix SimpleSubstitutionMatrix AminoAcCompound ( AminoAcCompound getAminoAcCompound ( ) ( ) ( ) ) ; matrix SimpleSubstitutionMatrix AminoAcCompound ( AminoAcCompound getAminoAcCompound ( ) ( SimpleSubstitutionMatrix getResourceAsStream (txt ) ) ) ; Sequence ProteinSequence AminoAcCompound Align getPairAlignment ( seqSequence GLOBAL SimplePen ( ) matrix ) ; AlignSequence ProteinSequence AminoAcCompoundSeq getQuery ( ) ; AlignSequence ProteinSequence AminoAcCompoundStruct getTarget ( ) ; assert (Seq ( )Struct ( ) ) ; Residue ca Residue seq ( ) ; ( aligned ( getPosition ( aligned ( getPosition ( ( alignedSeqGap ( aligned getSequence ( ) ; assert ( struct ) ; Group g atomPosition ( ) ; (Chain residue Structure corresponding amino sequence getChain ( ) getResidue ( ) ( ) getChain ( ) getStructure ( ) getPDB ( ) ) ; } ( alignedStructGap ( seq aligned getSequence ( ) ; aligned getSequence ( ) ; Group g atomPosition ( ) ; assert ( seq seq ) ; seq getResidue ( ) ; } } ca ; }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
 ( } ) public static IMeta mergeMeta ( IMetaData <, > metaData1, IMetaData <, > metaData2 ) { map ( ( ) metaData ) ; set map ( ) ; map ( ( ) metaData ) ; set map ( ) ; rep ( ) ; ( set ) key ( ) ; ( map ( key ) ) map ( key ) ; value map ( key ) ; ( value ) ( valueOf ( value ( ) ) ( ) valueOf ( value ( ) ) ( ) ) rep put ( key value ) ; } } ( value Integer ) ( Integer valueOf ( value ( ) ) ( ) Integer valueOf ( value ( ) ) ( ) ) rep put ( key value ) ; } } ( value Long ) ( Long valueOf ( value ( ) ) ( ) Long valueOf ( value ( ) ) ( ) ) rep put ( key value ) ; } } ( value Boolean ) ( Boolean valueOf ( value ( ) ) Boolean valueOf ( value ( ) ) ) rep put ( key value ) ; } } } } set removeAll ( rep ( ) ) ; set ( rep ( ) ) ; set ( set ) ; return metaData ; }<CODESPLIT>Merges the two Meta objects
public List T subList ( arg0 arg )Results argResultsAvailable moveResults ( ; } unmodifiableList ( allResults subList ( arg arg ) ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private Message prepare ( String channel Message message Recipient recipients ) {Metadata (wfpubnode nodeId ) ;Metadata (wfpubchannel channel ) ;Metadata (wfpubevent randomUUID ( ) ( ) ) ;Metadata (wfpub ( ) ) ;Metadata (wfpub recipients ) ; message ; }<CODESPLIT>Adds publication - specific metadata to the message .
private T GraphRequest T graph ( object JavaType type Param... params ) {BatchExecution ( ) ; Graph T Graph T ( object TMappingChain ( ; graphRequests ( ) ; req ; }<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void writeLength ( long length ) { ( 25 ) buf position = ( ) ; } ( ) buf position = ( ) ; buf position = ( ) ; position ( ) ( 8 ) ; } ( 16 ) buf position = ( ) ; buf position = ( ) ; position ( ) ( 8 ) ; position ( ) ( 16 ) ; } buf position = ( )xfe ; buf position = ( ) ; position ( ) ( 8 ) ; position ( byte ) ( 16 ) ; position ( byte ) ( ) ; position ( byte ) ( 32 ) ; position ( byte ) ( ) ; position ( byte ) ( ) ; position ( byte ) ( ) ; } }<CODESPLIT>Write length .
public static TSource TResult List TResult map ( Collection TSource items Mapper TSource TResult mapper ) items ArrayList > ( ) ; } ( items ( ; ( TSource items T mappedItem mapper map ( ; ( mappedItem ) ; } ; }<CODESPLIT>Projects each element of a collection into a new collection .
private void serializeReal ( Number real ContentHandler handler ) SAXException serialize (real ( real ( ; }<CODESPLIT>Serialize a Number as a real element .
public JMenuBar setupStandardMenu ( targetAction bAddHelpMenu ) { Application application BaseApplet getShared ( ) ( ) ; ResourceBundleResources application getResourceBundle ( ) ; application getResources ( ) ; setupActions (Action ) ; JMenuBar menuBar JMenuBar ( ) { static longL ; Dimension getMaximumSize ( ) { Dimension ( super getMaximumSize ( ) width super getPreferredSize ( ) height ) ; } } ; menuBar ( ) ; J menu ;Item ; menuMenu ( menuBar ThMenu FILE ) ; ( menu ThMenu PRItemShortcut ) ; menu ( ) ; add ( menuMenuItem ) ; add ( menuMenuItem ) ; ( menu ThMenu CHANGEItemShortcut ) ; menu ( ) ; ( menu ThMenuItemShortcut ) ;Item ; menuMenu ( menuBar ThMenu EDIT ) ; ( menu ThMenu CItemShortcut ) ; ( menu ThMenuItemShortcut ) ;MenuItem ( menu ThMenu PASTItemShortcut ) ; menu ( ) ;MenuItem ( menu ThMenu PREItemShortcut ) ; (Resources applicationResourceBundle (Resources ; (HelpMenu menuHelpMenu ( menu ; menuBar ; }<CODESPLIT>Setup the standard menu items .
public getPreferredAttributeNameForLaneCount ( ) Preferences PreferencesPackage ( RoadNetwork ; prefs (LANECOUNTATTR DEFAULTATTRLANECOUNT ) ; } DEFAULTATTRLANECOUNT ; }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public static nsrollbackcmd get ( nitroservice service nsrollbackcmdargs ) Exception nsrollbackcmd nsrollbackcmd ( ; ( ; ( nitrowithoutquotes ( args ; nsrollbackcmd ( nsrollbackcmd )resources ( service ) ; ; }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private int translateElementNo ( int i ) { (List ) i ; } ; Pattern ( Pattern ) this ; ( ; ; rule getElementNo ( ) ( ) ; } j ; }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
public String [ getProxyHostsWhiteList ( ) { (proxyHostsWhiteproxyHostsWhite ( String ; hostsproxyHostsWhite ( ) ; hosts ( )proxyHostsWhite ( hosts ) ; hosts ; }<CODESPLIT>Get proxy host white list .
public addMetatypeAd ( MetatypeAd metatypeAd ) { ( metAd metatypeAd LinkedList MetatypeAd ( ; ( Metatype ad metatype ( ad getID ( ( metatype getID ( this metatype ( metatype<CODESPLIT>Adds a metatype AD .
public long skip ( long n ) throws IOException { (InputStream available ( ) ) mInputStream skip ( n ) ; }InputStream close ( ) ; ;ObjectClient getObject (BucketNameKey ) ; ( getData ( ) ) ; } ServiceException new ( ) ; } n ; }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
public static isSuperCall ( JCTree tree ) Name ( tree ) ; table ; name names _super ; } ; } }<CODESPLIT>Is this a call to super?
public static String getShortRequestDump ( String fromMethod boolean includeHeaders HttpServletRequest request ) { dump ( ) ; dump (Timestamp : ) ( ISO getTimestamp ( ) ) ( ) ; dump ( : ) ( ) ( ) ; dump ( : ) ( request ( ) ) ( ) ; dump (Scheme : ) ( request getScheme ( ) ) ( ) ; dump (URI : ) ( request getRequestURI ( ) ) ( ) ; dump (Query : ) ( request ( ) ) ( ) ; dump (Auth : ) ( request getAuth ( ) ) ( ) ; dump (Remote : ) ( request getRemote ( ) ) ( ) ; dump (Scheme : ) ( request getScheme ( ) ) ( ) ; dump (Content : ) ( request getContentType ( ) ) ( ) ; dump (Content ) ( request getContent ( ) ) ( ) ; ( include dump (Headers : ) ; headers request getHeader ( ) ; ( ( headers ( ) ; dump ( ) ( ) ( ) ( request getHeader ( ) ) ( ) ; } } ( dump ( ) ) ; }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
public static void validateNotEmpty ( stringToCheck trim argumentName ) NullArgumentException validate (Check argumentName ) ; stringToCheck ( ( stringToCheck ( ( Null ( argumentName + IS ) ; } }<CODESPLIT>Validates that the string is not null and not an empty string .
public static JPanel createPanelWithVerticalLayout ( ) ( ; ( Box ( Box YAXIS ; _panel ; }<CODESPLIT>Create a panel that lays out components vertically .
protected shouldAnalyze ( ) analyzerAnalyzer ( analyzer ; fileTypeAnalyzer accept ( dependency getActual ( ) ) ; } ; }<CODESPLIT>Determines if the analyzer can analyze the given dependency .
public void registerServiceClass ( Class serviceClassClasses ( service ( service ; ServicesAvailable ( service ( ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
public getSectionText ( pageTitle sectionNumber ) Exception { getPage ( pageTitlervsection section ; ; }<CODESPLIT>get the text for the given section
public static double pearson ( int [ ] x, int [ ] y ) { ( ) ( String format (Arrays ) ) ; return cor ( x, y ) ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
public TileGrid getTileGridFromWGS84 ( Point point zoom ) projection ( EG ; getTileGrid ( point zoom projection ) ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
public List VectorLayer getVectorLayers ( )LayerLayer ( ; ( Layer layer layers layer VectorLayer ( ( VectorLayer layer ) ; } } list ; }<CODESPLIT>Return a list containing all vector layers within this model .
private void calcRmsd ( Point3d x Point3d y ) { ( centeredProduct ( ) ; } clone ( ) ;trans centroid ( ) ; ( centroid + x ) ;trans ( ) ; Calc translate ( Vector (trans ) xref ) ; clone ( ) ;trans centroid ( ) ; ( centroid + y ) ;trans ( ) ; Calc translate ( Vector (trans )ref ) ;Product ( ) ; } calc (sum ) ; }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public void setSectionHeading ( Title v ) { ( Section featOkTst ( ( Section jcasType casFeatsectionHeading jcasType jcas throwFeatMissing (sectionHeadingdeelabtypesSection ; jcasType ll ll ( ( ( Section ) jcasType ) casFeatCodesection jcasType ll llFS ( ) ) ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public Response process ( InputStream is ) throws IOException SAXException ParserConfigurationException { S S ( version ) ; Operation operation ; operation parse ( ) ; } S ( getOperation ( getOperation ( ( ( fully parse XML request ErrorResponse + ( ) + parsed + getOperation ( ) ) ; ErrorResponse ( getOperation ( ) getType ( ) getErrorCode ( ) getInt ( ) ( ) ) ; } new SAXException ( ( ), ) ; } } ( ( operation Request new S ( S, session process requests ) ; } Request ( Request ) operation ; ( getAccount ( new S ( SELEMENT, request include account credentials ) ; } ( processor authenticate ( getAccount ( new S ( S AUTH,Authentication ) ; } ( operation SubmitRequest processor submit ( req getAccount ( ) ( SubmitRequest ) operation ) ; } ( operation DelRequest processor deliver ( req getAccount ( ) ( DeliverRequest ) operation ) ; } ( operation DeliveryReportRequest processor deliveryReport ( req getAccount ( ) ( DeliveryReportRequest ) operation ) ; } new S ( S, operation request type ) ; } } S ( ( ) ) ; ErrorResponse ( operation getType ( ) getErrorCode ( ) getIntValue ( ) ( ) ) ; } ( uncaught throwable processing request generating ErrorResponse ) ; ErrorResponse ( operation getType ( ) SErrorCode GENERIC getIntValue ( )Generic error processing request ) ; } }<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
private void submitPayload ( String url HttpRequestUtil. ConnectionSettings connectionSettings String jsonPayloadObject String pushApplicationId String masterSecret MessageResponseCallback callback List < String redirectUrls ) { ( redirect ( new PushSender ( site contains redirect loop Duplicate url + url ) ; } redirectUrls ( ) ; } ; credentials pushApplication masterSecret ; encoded Base encode ( credentials ( ) ) ; http ( HttpURLConnection ) post (PayloadObject proxy customTrustStore connectionSettings ) ; ( ) ; ( INFO String (HTTP Response code UnPush Server, ) ) ; (Redirect ( redirect getHeaderField (Location ) ; ( INFO, String (Perform redirect, redirect ) ) ; submitPayload ( redirect pushConfiguration getConnectionSettings ( )PayloadObject pushApplication masterSecret callback redirectUrls ) ; } ( (, Un Push Server status code + ) ; new PushSender ( ) ; } ( callback callback onComplete ( ) ; } } } ; } ( INFO, send push delivery request, ) ; new PushSender ( ( ), ) ; } ( http http disconnect ( ) ; } } }<CODESPLIT>The actual method that does the real send and connection handling
public String [ getChildNames ( ) { ( children children ( ) ) EMPTYNAMES ; arr children ( ) ; ( ; arr ; ( ( RamResourceCore ) children ( ) ) ( ) ; } arr ; }<CODESPLIT>Gibt den Feldnamen children zurueck .
public static Object getIndex ( Object array int index ) throws UtilTargetError { Interpreter ( array index index ) ; ( array List ( ( List array ( ; val Array ( array ; Primitive wrap ( val Types arrayElementType ( array getClass ( ) ) ) ; } array ( ( ) array ) ( ) Array ( array ) ; (Index + index +of + len, ) ; } }<CODESPLIT>Get object from array or list at index .
public static base_ add ( nitro_service client aaakcdaccount resource ) throws Exception { aaakcdaccount addresource aaakcdaccount ( ) ; ; keytab keytab ; realm realm ; delegateduser delegateduser ; ; user user ; = ; addresource addresource ( client ) ; }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized void lockExclusive ( ) { ( ( ) tc ( ) ) SibTr ( tclockExclusive ) ; interrupted ; ( tryLockExclusive ( ( ( ) tc ( ) ) SibTr ( tcWaiting exclusive lock ) ; wait ( ) ; } interrupted ; } } (Lock ( ( ) tc ( ) ) SibTr ( tcWaiting lock reach +Lock ) ; wait ( ) ; } ) interrupted ; } } ( interrupted ) ( ) interrupt ( ) ; } ( ( ) tc ( ) ) SibTr ( tclockExclusive ) ; }<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
public setCPOptionValue ( com liferay commerce. product. service. CPOptionValue cpOptionValue ;<CODESPLIT>Sets the cp option value local service .
public inferModulePathFromType ( TypeDeclaration type ( ; pkg? pkg getQualifiedName ( ) replace ( ) : ;<CODESPLIT>Infers the Struts module path from the given controller class .
final int getLeapMonth ( int cycle int yearOfCycle ) { leapMonths thisLeapMonths ( ) ;Years ( cycle ) 60 + yearCycle ; ( (Years leapMonths ) ) ; lm ; ( ( leapMonths test leapMonths index ; ( test elapsed ) ( ( (Years ) ) ) ; } ( test elapsed ) } lm = leap ; } } return lm ; }<CODESPLIT>number of leap month or zero if no leap year
public Snippet getSnippet ( Integer snippetId downloadContent ) throws GitLabApiException { ( snippet (snippet ) ; } (snippets snippet ) ; Snippet snippetEntity ( Snippet ) ; ( downloadContent (ippetContent ( ( ) ) ; } snippet ; }<CODESPLIT>Get a specific Snippet .
public final int get ( int codePoint ) { value ; ; ( codePoint ) ( codePointd ( codePointdbff codePoint ) ) = index UTESHIFT ; ( UTEINDEX ) + ( codePoint & UTEDATA ) ; value = data ; return value ; } ( codePoint ) = index UTESCPINDEXOFFSET + ( (xd ) UTESHIFT ) ; ix ( ix UTEINDEX ) + ( codePoint & UTEDATA ) ; value = data ; return value ; } ( codePoint high ) ix ( UTEINDEX UTEBMPINDEX ) + ( codePoint UTE ) ; = index ; ( codePoint UTE ) & UTE ; = index ; ix ( ix UTEINDEX ) + ( codePoint & UTEDATA ) ; value = data ; return value ; } ( codePoint10 ) value = data high ; return value ; } } return errorValue ; }<CODESPLIT>Get the value for a code point as stored in the Trie2 .
public Object getMBeanAttributeObject ( name attrName JM MBeanBean ( ; ObjectName ( ; server getAttribute ( obj attrName ) ;<CODESPLIT>Get MBean attribute object
public void setSelectedIndex ( selectedIndex ) items selectedIndex selectedIndex ( argument ComboBoxsetSelectedIndex + ) ; }Selection ; selectedIndex selectedIndex ; selectedIndex update ( ; } update ( items ( ( ; } runOnIThreadIfExistsOtherwiseRunDirect ( Runnable ( ) void run ( ) ( Listener listeners listenerSelectionChanged (Selection ; } } } ) ; invalidate ( ; }<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
public Stats getPhotoStats ( photoId Date date Flickr getStats (PHOTOSTATSphoto photo date ) ;<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public ServiceCall < DocumentStatus > getDocumentStatus ( GetDocumentStatusOptions getDocumentStatusOptions ) { ( getDocumentStatusgetDocumentStatus be ) ;environmentscollectionsdocuments } ; pathParameters getDocumentStatus environment ( ) getDocumentStatus collection ( ) getDocumentStatus documentId ( ) } ; RequestBuilder RequestBuilder ( RequestBuilder (Point ( ) path ) ) ; query (version versionDate ) ; Map > (discoveryvgetDocumentStatus ) ; ( ( ) ) ( ( ) ( ) ) ; } (Acceptjson ) ; return createServiceCall (. build ( ),ConverterUtils. getObject ( DocumentStatus. ) ) ; }<CODESPLIT>Get document details .
public Pager Issue getClosesIssues ( Object projectIdOrPath mergeRequestI items GitLabApiException Pager Issue > ( Issue itemsprojects getProjectIdOrPath ( projectIdOrPath )mergerequests mergeRequestIclosesissues ) ;<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public static final void loge ( Class < > clazz, String msg, Exception... e ) { ( ) ; ( ) ( ) ; ( ) ; ( ) ; flush ( ) ;Str + ( ) ; } System ( +df format ( Date ( ) ) + + + + clazz ( ) + + + + ) ; } }<CODESPLIT>To output the error log message to the error out
public static HtmlTree TH ( HtmlStyle styleClass scope Content body ) HtmlTree html HtmlTree ( HtmlTag TH ( ; style htmltree style ;tree ( Html SCOPECheck ( ; htmltree ; }<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
private void obtainDividerMargin ( themeResourceId ) Typed typedArray ( getTheme ( obtainAttributes ( theme materialDialogDivider } ) ;Divider ( typedArray ( ) ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
public void setDefaultButton ( SBaseButton button ) getScreenView ( ( getScreenView ( ; }<CODESPLIT>Set the default button for this basepanel .
public Key select ( k ) { ( ( ( ; RedBlackTreeNode Key Value select ( ) ; x getKey ( ) ; }<CODESPLIT>Return the kth smallest key in the symbol table .
public void add ( RequestHandler request ) ( ( ;SessionRequests ( ; } ( ) ( ) ; } }<CODESPLIT>Adds a request handler to this queue .
public T T withPrintWriter ( OutputStream stream ClosureParams ( value SimpleTypePrintWriter Closure T closureWriter (PrintWriter ( ) closure ) ;<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
public addRegexRoute ( urlPattern Class Actor actorClass RouteAlreadyMapped addRoute ( Route ( actor ;<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void sendQueuedEvents ( KeenProject project KeenCallback callback ) { ( isActive handleLibraryInactive ( callback ) ; ; } ( projectProject handleFailure ( ( project specified project ) ) ; ; } (Network ( KLogging ( sending events network connection +Events retried `sendQueuedEvents called ) ; handleFailure ( callback (Network connected ) ) ; ; } KProjectProject ( projectProject : project ) ; projectIdProject getProjectId ( ) ; eventHandles eventHandles ( projectId ) ; events ( projectId eventHandles ) ; publish (Project events ) ; ( handleAddEvents ( eventHandles ) ; } KLogging ( handling batch publish + ( ) ) ; } } handleSuccess ( callback ) ; } handleFailure ( callback ) ; } }<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public getMaxQueuedConnections ( (? : ( ( ( getQueue ( ArrayBlockingQueue? ( ( ArrayBlockingQueue ( getQueue ( ( ( ( ArrayBlockingQueue ( getQueue (Capacity ( ) : ) ;<CODESPLIT>this should only be used as an estimate
final AuxiliaryTree TreeRoot ( boolean requiresFoot ) throws ParseException { SimpleNode jj SimpleNode ( JJTT ) ; jj ; jjtree openNodeScope ( jj ) ; Tree ; TreeNode ( ) ; jjtree closeNodeScope ( jj ) ; ; ( ATree ( requiresFoot ; } } ( jjtree clearNodeScope ( jj ) ; ; } jjtree popNode ( ) ; } ( ( ( jj ; } } ( jj ( ( jj ; } } ( ( Error jj ; } } ( jj jjtree closeNodeScope ( jj ) ; } } new (Missing statement function ) ; }<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
INodeDirectory addToParent ( byte [ src INodeDirectory parentINode INode newNode boolean propagateModTime int childIndex ) { INodeDirectory newParent ; ( ) ; newParent rootDir addToParent ( src newNode parentINode propagateIndex ) ; cacheName ( newNode ) ; } ; } ( newParent ; ( newNode isDirectory ( INode ( INode ) newNode ; Block blocksBlocks ( ) ; ( blocksBlock ( ( ) blocksINodeLoading ( blocks ) ) ; } } } write ( ) ; } newParent ; }<CODESPLIT>Add node to parent node when loading the image .
public void setModel ( MindMap model notifyModelChangeListeners ) { ( ) ; ( elementUnderEdit Utils. safeSwingBlockingCall ( Runnable ( ) { void run ( ) {Edit ( ) ; } } ) ; } selected ( ; ( Topic selectedTopics selected ( ( ) ) ; } selectedTopics clear ( ) ; MindModel model ; model (Model model ) ; ( PanelPlugin MPluginRegistry ( find ( PanelPluginPanelModel (Model model ) ; } doLayout ( ) ; re ( ) ; selection ; ( selectedPaths Topic topic model find ( ; ( topic selection ; } ( M isHidden ( topic selectedTopics ( topic ) ; } } ( selection fireNotificationSelectionChanged ( ) ; } repaint ( ) ; } ( ) ; ( notify fireNotificationindChanged ( ) ; } } }<CODESPLIT>Set model for the panel allows to notify listeners optionally .
public OperationFuture LoadBalancer delete ( LoadBalancer loadBalancer LoadBalancer loadBalancer ( loadBalancer ; loadBalancer delete ( loadBalancer ( loadBalancer ( ; Operation > ( loadBalancer NoWaitingJob ( ) ) ;<CODESPLIT>Delete load balancer
public GetSnapshotResponse getSnapshot ( GetSnapshotRequest request ) { ( request ) ; ( requestnapshot ( ) snapshot ) ; internalRequest ( request Http GET SNAPSHOT requestnapshot ( ) ) ; invoke ( internalRequest GetSnapshot ) ; }<CODESPLIT>Getting the detail information of specified snapshot .
@ (checkstyleblock" ) void excludeLoggers ( ) { BugsnagAppenderExcludedLoggerPattern (orgapachecatcoreContainerBase +Tomcat ) ; BugsnagAppenderExcludedLoggerPattern (orgeclipsejettyserverHttpChannel ) ; BugsnagAppenderExcludedLoggerPattern (under ) ; }ClassDef ) } }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public void subtract ( R1 relationships ) { ( base ) new AssertionError ( ) ; } ( ; base ; ) ( base ) } IConcept data SparseConcept ( ) ; set ( base ) ; ( relationships data ) set removeAll ( relationships data ) ; } } }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static < E E getEndpoint ( Class < E type, String name, Reflections reflections ) { E ; Class EClasses reflection getSubTypes ( type ) ;? E endpointClasses ( ) ; ( E clazzClasses ) ( isAbstract ( clazz ( ) ) ) endpointClasses ( clazz ) ; } } Iterator Class E endpointClasses ( ) ; ( (? E ( ) ; (IgnoreCase ( getName ( )comgithubdavidarbonrestroutes ) ) remove ( ) ; } } ( endpointClasses ( ) ) ( endpointClasses ( ) ) (Warning found multiple candidates endpoint endpointClasses ) ; } endpointClasses ( ) ( ) ( ) ; } ) ( instantiate endpoint name endpointClasses ( ) ( ) ) ; ( ) ; } } return ; }<CODESPLIT>Locates a single endpoint class .
public final void writtenStartedFlush ( AOStream stream, Item startedFlushItem ) { ( TraceComponent ( ) tc ( ) ) SibTr ( tcwrittenStartedFlush ) ; key SIMP getRemoteGetKey ( stream getRemoteMEUuid ( ) stream getGatheringTargetDestUuid ( ) ) ; StreamInfo sinfo = streamTable ( key ) ; ( ( sinfo ) sinfo streamId ( stream streamId ) ) ( s ) {info item = ( AOStartedFlushItem ) startedFlushItem ; } } ( ( ObjectAnycastOutputHandler } ) ) ; ( e,comsibprocessorimplAnycastOutputHandlerwrittenStartedFlush,8654, this ) ; SibTr exception ( tc, e ) ; SibTr error ( tc ObjectAnycastOutputHandler } ) ; ( TraceComponent ( ) tc ( ) ) SibTr ( tcwrittenStartedFlush ) ; e ; } ( TraceComponent ( ) tc ( ) ) SibTr ( tcwrittenStartedFlush ) ; }<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public static List Report getDetailSubreports ( ReportLayout reportLayout ) { Reportreports Report ( ) ; Band band reportLayoutetailBand ( ) ; ( rows band getRow ( rows BandElement band getRow ( ) ; ( list ( BandElement ( ) ; ( ReportBandElementreports ( ( ( ReportBandElement ) ) getReport ( ) ) ; } } } subreports ; }<CODESPLIT>Get detail band subreports for a report layout
public ApiAppList getApiApps ( HelloSignApp ( ( ) (URI APIAPPURI )Json ( ) ) ;<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public void detachAgent ( Object pVm ) { (Vm ) clazzVm getClass ( ) ; clazz (detach ) ; ( ) ; invoke (Vm ) ; } } new Processing ( detach,, options ) ; } new Processing ( detach,, options ) ; } new Processing ( detach,, options ) ; } }<CODESPLIT>Detach from the virtual machine
public ObjectGraph excludeClasses ( Class... classes ) { ( classes ( new ( class ) ; } excludedClasses ( ) ; } this ; }<CODESPLIT>Exclude any object that extends from these classes .
public void setSampling ( double min double max int total ) { sample ; sample ; thisSamples ; scoresSamples ; }<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private void calcProductAtVar ( int v VarTensor prod int excl1 int excl2 ) { ( ; bgT ( ; ( excl excl ) } VarTensorMsg msgs bg ( ) ; elemMultiply (Msg ) ; } }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected ItemState findLastItemState ( QPath itemPath ) { ( itemAddStates ( Itemstate itemStates ( ) ; ( getData ( getQ ( ) ( item ) ) ; } ; }<CODESPLIT>Find last ItemState .
public void addDispatcher ( dispatcherId AbsActorDispatcher dispatcher ) dispatch dispatch dispatcher ; } dispatch ( dispatcher dispatcher ; } }<CODESPLIT>Registering custom dispatcher
private void sgdTrain ( ClassificationDataSet D, MatrixOfVecs W, Vec b, int sign_mul, boolean parallel ) { IntList order IntList ( D ( ) ) ;Range ( order D ( ) ) ; lambdaadj lambda ( D ( ) epochs ) ; owned K ; assignedpositiveinstances ; assignments D ( ) ; fill ( assignments ) ; Vec dots DenseVector ( W rows ( ) ) ; ; ( epoch ; epoch epochs ; epoch ) shuffle ( order ) ; ( order ) ; ( lambdaadj t ) ; Vec x D getDataPoint ( ) getNumericalValues ( ) ; ( D getDataPointCategory ( ) ) sign ; b copyTo ( dots ) ; W multiply ( x dots ) ; ( ) ( ; K ; ) ( ( ) ) W getRowView ( k ) mutableSubtract ( x ) ; b increment ( k ) ; } } k ; ( ; ( ) ; ) ( ( ) (max ) )max ; ( (max ) ) z ASSIGN ( dots k owned assignments assignedpositiveinstances ) ; W getRowView ( z ) mutableAdd ( x ) ; b increment ( z ) ; ( assignments ) assignedinstances ; owned assignments ; ; = ; } } W mutableMultiply ( t ) ; b mutableMultiply ( t ) ; } } }<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
public static appfwfieldtype get ( nitroservice service ) Exception appfwfield appfwfield ( ; appfwfield ( appfwfieldresources ( ; ; }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public Future Channel create ( Promise Channel channelReadyPromise ) delay ( ; channelReadyPromise. addListener ( GenericFutureListener Future Channel ( ) void operationComplete ( Future Channel future ) ( ( ( delayCONNECTCONNECT ; ApChannelDelay ( delayDelay ) ; } } ) ;. bootstrapTemplate. config ( ). group ( ). schedule ( Runnable ( ) void run ( ) Bootstrap bootstrap ApnsChannel bootstrapTemplate clone ( channel ( AugmentReflectChannel ( ClientChannelChannel ( ApnsChannel bootstrapTemplate ( ( CHANNEL channelReady ; Channel connect bootstrap connect ( ; connectFuture. addListener ( GenericFutureListener ChannelFuture ( ) void operationComplete ( ChannelFuture future )Failure ( ( ; } } } ) ; connectFuture. channel ( ). closeFuture ( ). addListener ( GenericFutureListener ChannelFuture ( ) void operationComplete ( ChannelFuture future ) channelReady ( (Channel closed HTTP completed ; } } ) ; } } ) ; channelReadyPromise ; }<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public static List < String > loadOptions ( String optionFileName ) { ( ) ; option ( option ) ; string ( ) ; inputStream ( option ) ; copy ( inputStream stringWriter ) ; } ) ( reading options file + ( ) ) ; ( ) ; } ) ( reading options file + ( ) ) ; ( ) ; } string string ( ) ; stringTokenizer ( string ) ; ( string ( args ( stringTokenizer ( ) ) ; } return args ; }<CODESPLIT>Load options from a file
public void runJob ( ) {Job jobQueue take ( ) ; Execution Execution ( ) ;Manager initialize ( ) ; } new ( initialize Job + this currentJob + execution context, ) ; }Job run ( ) ; } } execution remove ( ) ; } }<CODESPLIT>Execute one job .
public Response bind ( name Object model ) ( ( ; this ; }<CODESPLIT>Binds an object to the response .
public byte getByteArray ( Integer offset ) { ; ( offsetmap ( ) ; } ( ) ; }<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public Object [ ] getMetaMethods ( ) { Meta meta Invok getMeta ( objectUnderInspection ) ; metaMethods meta getMetaMethods ( ) ; metaMethods ( ) ; ; ( Iterator metaMethods ( ; ( ; Meta meta ( Meta ) ( ) ; ( meta ) ; } ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
static long [ ] parse ( String pollers ) { periods pollers split ( ) ; periods ; errors ; Logger LoggerFactory getLogger ( Pollers class ) ; ( ; periods ; ) period periods ; Long ( period ) ; ( ) (Invalid polling interval must positive period ) ; errors ; } } ( NumberFormatException ) (Cannot parse as long period e getMessage ( ) ) ; errors ; } } ( errors periods ) (Using default configuration poller intervals join ( DEFAULTPERIODS ) ) ; return DEFAULT_PERIODS ; } return ; } }<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public void setFooter ( String key String value ) { ( ) ; ;Footer ; ( _footerKeys (footerKeys ( ) ; (Key ( key ) ) (Footer )footerKeys remove ( ) ;footerValues remove ( ) ; }Footer ;Values ( ) ; } } } (Footer )footerKeys ( key ) ;footerValues ( ) ; } }<CODESPLIT>Sets a footer replacing an already - existing footer
public void addAttribute ( String name String value ) { (elemstartTag patch ( ) ; localName getLocalName ( ) ; uri getNamespaceURI ( ) ; addAttributeAlways ( uri localName patchedCDATA ) ; } }<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public MimeMessage createMimeMessage ( Session session ) throws Messaging { ( ( html ( text ( email content ) ; } Mime Mime ( session ; ( subject ) ; ( Internet ( ) ; (Multi ( ) ) ; ( TO Internet ( recipients ) ) ; msg ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static ForwardCurveInterpolation createForwardCurveFromMonteCarloLiborModel ( String name LIBORModelMonteCarloSimulationModel model, double startTime ) throws Calcul { timeIndex model ( ) ; RandomVariable lib ( ) ;Lib modelLibPeriodDisc ( )NearestGreater ( ) ; modelretization ( ) getTime ( ) ; (Lib startTime ) libAt ( modelLIB ( startTime startTime ) ) ; } timesLib ( modelLib ( )Lib ) : ( modelLib ( )Lib + ) ; = ; indexLib : ; ( firstLib ; modelLib ( ) ; ) libAt ( modelLIB ( timeIndex ) ) ; + index modelretization ( ) getTime ( ) startTime ; } RandomVariable lib lib ( RandomVariable lib ( ) ) ; return ForwardCurveInterpolation createForwardCurveFromForwards ( name, times, lib, model getLibPeriodDiscization ( ) getTimeStep ( firstLibIndex ) ) ; }<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public ServiceCall < Void > deleteWord ( DeleteWordOptions deleteWordOptions ) { ( deleteWorddeleteWord be ) ;customizationswords } ; pathParameters delete customization ( ) delete word ( ) } ; RequestBuilder RequestBuilder delete ( RequestBuilderHttpUrl (Point ( ) pathParameters ) ) ; Map > (textpeechvdeleteWord ) ; ( ( ) ) ( ( ) ( ) ) ; } return createServiceCall (. build ( ),ConverterUtils. getV ( ) ) ; }<CODESPLIT>Delete a custom word .
private boolean tryMove ( float x float y ) { player + ; player + ; ( blocked ( ) ) ( blocked ( player ) ) ( blocked ( player ) ) return ; } player ; return ; } } player ; return ; } } player ; player ; return ; } }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
public void recover ( ) { messages clear ( ) ; prepareRead ( ) ; recover ( ) ; } Deleg ( ) ; } }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
public void clearSources (Audio ( GRAudioSource sourceSources source ( ; }AudioSources ( ; } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
 (" ) static V NumberVector NumberVector. Factory V guessFactory ( SimpleTypeInformation V in ) { NumberVector V ; ( VectorInformation ( Number Factory V ) ( ( VectorInformation V ) ) getFactory ( ) ; } ( factory FieldClass ( ) getField (FACTORY ) ; (Vector Factory V ) ( ) ; } LoggingUtil (Cannot determine typeClass ( ) ) ; } } factory ; }<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) { ( rootDir ( rootDir mkdirs ( ; ( rootSave ( rootSave mkdirs ( ; ( paths paths ( ; ( labelRoot ) labelRoot ( ) ; (Labels paths ( ( ) ) ; labelDirs ( ( rootDir ( ) ) ) ; } ( ( DataSet dataSet ( ) ; ( miniBatchSize ) miniBatchSizeExamples ( ) ; (Examples ( DataSet currExample ( ) ; ( labelRoot (Example outcome ( ) ) ( ) ) labelRoot (Example outcome ( ) ) mkdirs ( ) ; example ( labelDirs (Example outcome ( ) ) ( paths (Example outcome ( ) ) ( ) ) ) ;Example save ( example ) ; paths ( currExample outcome ( ) ) ( example ) ; } } numsSaved ; ( ( DataSet miniBatch ( ) ; ( miniBatch ( miniBatchSize ( (Labels ( paths ( ) paths ( ) ( ) ) DataSet DataSet ( ) ; load ( paths ( ) remove ( ) ) ; miniBatch ( ) ; } paths remove ( ) ; } } ( rootSave ( ) ) rootSave mkdirs ( ) ; ( miniBatch ( ) ) DataSet merge DataSet merge ( miniBatch ) ; ( dataNormalization ) dataNormalization transform ( merge ) ; merge save ( ( rootSave (datasetbin numsSaved ) ) ) ; } } }<CODESPLIT>Generate a balanced dataset minibatch fileset .
private isunixtimeleap ( double unixTime ) gps unix ; gpsaps ( gps ;ap ( gps ) ; }<CODESPLIT>Test to see if a unixtime second is a leap second
public void setSunXMLHeaders ( Marshaller aMarshaller sXMLHeaders ) SXMLHEADERS ; (MarshallerXML ; }<CODESPLIT>Set the Sun specific XML header string .
private void sendKeepAliveBridgeMessage ( int appId String bridgeId String token CallStatsHttp2Client httpClient ) {TS ( ) ; Bridge Bridge ( bridgeTS ) ; ( ) ; httpClient. sendBridgeAlive ( keepAliveEventUrl token requestMessageString CallStatsHttp2ResponseListener ( ) { void onResponse ( Response response ) { ( ) ; Bridge keepAlive ; ( ) ( ) ; keepAlive fromJson ( BridgeKeepAlive ) ; } ( ) ; new ( ) ; } Json (Json Syntax + ( ) ) ; ( ) ; new ( ) ; } ( ) ; (Stats RESPONSESUCCESS keepAliveListener onSuccess ( ) ; } (StatsTOKEN stopKeepAliveSender ( ) ; keepAliveListener onKeepAlive ( CallStatsErrors AUTH keepAlive ( ) ) ; } ( ) ; } } void onFailure ( Exception e ) { (Response + ( ) ) ; ( ) ; } } ) ; }<CODESPLIT>Send keep alive bridge message .
public StreamingOutput getResource ( String resourceName long nodeId Map QueryParameter String queryParams ) throws JaxRx { StreamingOutput sOutput StreamingOutput ( ) { void write ( OutputStream output ) throws IOException JaxRx { revision queryParams ( Query RE ) ; queryParams ( Query WR ) ; queryParams ( Query OUTPUT ) ; ( ) : ( Y ) ; node ( ) :NodeId ( Y ) ; revision : ( revision ) ; serialize ( resourceName nodeId rev ) ; } } ; sOutput ; }<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
public static ManagedEntity [ createManagedEntities ( ServerConnection sc ManagedObjectReference [ ] mors ) { ( ) ManagedEntity ; } ManagedEntity mes ManagedEntity ; ( ; m ; mesExactManagedEntity ( sc ) ; } mes ; }<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
public static Function createStringTemplateSource ( ICmsFormatterBean formatter Supplier CmsXmlContent contentSupplier ) key ; ( formatter formatter ( ) ( ) ; } ( CmsXmlContent content contentSupplier ( ) ; ( getHandler ( ) ( key ) ; } } ; } ; }<CODESPLIT>Helper method to create a string template source for a given formatter and content .
private static ByteBuffer createReadWriteMessage ( byte opCode int logicalBlockAddress short transferLength ) { allocate (DB ) ; ( ) ; position (BLOCK ) ; ( logicalBlock ) ; ( TRANSFER ) ; ( transfer ) ; rewind ( ) ; cdb ; }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
public long read ( ByteBuffer dsts offset length ) {App ( ; ( ; } ByteBuffers move ( appRead dst offset ) ; }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
public static void setInt ( MemorySegment segments offset value ) { ( ( segments 4 segments ( ) ; } setIntMultiSegments ( segments ) ; } }<CODESPLIT>set int from segments .
public Optional User getOptionalUser ( username ( ( getUser ( username ) ) ) ; GitLabApiException ( GitLabApiOptional ( ) ) ;<CODESPLIT>Lookup a user by username and return an Optional instance .
protected void registerRateLimiterComponent ( ) { componentPropName GatewayConfigProperties COMPONENT + IRateLimitComponent ( ) ;Property ( componentPropName ESRateLimitComponent getName ( ) ) ;Property ( componentPropName +clientj ) ;Property ( component "${apan ) ;Property ( componenthost "${apanhost ) ;Property ( component + "${apan ) ;Property ( component +username "${apanusername ) ;Property ( component + "${apan ) ; }<CODESPLIT>The rate limiter component .
public Point3d getCoordinatesFromGridPoint ( int gridPoint ) { dimCounter ; Point point Point ( ) ; ( ; grid ; ) ( ; grid ; ) ( ; grid ; ) ( dimCounter gridPoint ) point x = minx latticeConstant x ; point = min latticeConstant ; point = min + latticeConstant ; return point ; } ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
public void setColor ( Color COLOR ) color ; } color ( COLOR ; } }<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
public void releaseEvent ( EventId eventId ) Exception Lock VWrapper shared getEvent ( eventId ;WrapperWrapper release shared remove ( eventId ; } shared upsert ( eventIdWrapper ; } } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public String toSql ( showParameters ) { sql ; (Paginator sql getD ( ) formSelect ( fullQuery orderBy limit ) ; } sqlQueryQuery : metaModel ( ) formSelect ( metaModel ( ) subQuery orderBy limit ) ; } ( showParameters ( sql ) ( parameters ) ; join ( ) ; sql ( ) ; } sql ; }<CODESPLIT>Use to see what SQL will be sent to the database .
private Source getSourceFromUriResolver ( StylesheetHandler handler ) TransformerException Source ; TransformerImpl processorStylesheetProcessor ( ; processor ( ; href getH ( ; base getBaseIdentifier ( ; resolve ( href base ) ; } s ; }<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
public String getTitle ( ) { ( Journal featOkTst ( ( Journal jcasType casFeattitle jcasType jcas throwFeatMissing (titledetypesJournal ; jcasType ll ll ( addr ( ( JournalType ) jcasType ) casFeatCodetitle ) ; }<CODESPLIT>getter for title - gets Full journal title C
public Val of ( Object o Val Cast as ( ) ; } Val ( ) ; }<CODESPLIT>Convenience method for creating a Convertible Object
protected void addContextTerms ( SparseDoubleVector meaning Queue words distance ) { ( term words ( term ( Iterator EMPTYTOKEN dimension basis ( term ; ( dimension ; meaning ( weight weight ( distance windowSize ; ; } } }<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
public ArrayList View getViews ( ) { ( commandLogging ( commandLoggingTagViews ) ; } viewFetcher getView (, ) ; } ( ) ; ; } }<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
private E WeightedEdge SparseDoubleVector getVertexWeightVector ( WeightedGraph E g vertex ) keepWeightVectors Sparse weight vertexWeight ( vertex ; weightVec weight vertexWeight ( vertex ; weightVec weightVec compute ( vertex ; vertex ( vertex weightVec ; } } } weightVec ; } computeWeightVector vertex ; }<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
static int fillRows ( Row [ rows TypeDescription schema VectorizedRowBatch batch int [ selectedFields ) { rows ( ( ) batch ( ) rows ) ;Description field schema getChildren ( ) ; ( ; selectedFields ;c selectedFields field ; ( rows field field (c ) batchc rows ) ; } rowsToRead ; }<CODESPLIT>Fills an ORC batch into an array of Row .
public ICalProperty getProperties ( component I ( component getProperties ( ) ( ) ) ;<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public static double computeTauAndDivide ( int j int numRows double [ ] u final double max ) { ; ( ; numRows ; ; tau ; } tau ( tau ) ; ( u ) tau tau ; tau ; }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public Epic getEpic ( String epicKey Map String Epic epicMap ) { featureSettings getJ ( ( featureSettings getJ ( ) ( ) ) ( EPICREST ep ) ;EntityEntityRestCall ( ) ;Entity ( ) ; JSONObject issue ( JSONObject ) parse ( responseBody ) ; ( issue ; } saveEpic ( issue epicMap ) ; } ( parsing teams pe ) ; } Hygia ( calling JRA API ) ; } ; }<CODESPLIT>Get Epic using Jira API
public Serializable getLayoutConstraints ( WComponent child Panel getComponent ( ; layoutConstraints model layoutConstraints ( child ) ; ; }<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public Map < String, Set < String > > getReverseMap ( ) { Map entries map ( ) ; Map > >Map > > ( entries ( ) ) ; ( Map Set me entries ) k ( ) ; transList me ( ) ; ( trans transList ) SetMap ( trans ) ; ( ) > LinkedHashSet > ( ) ; toAdd ( k ) ;Map put ( trans toAdd ) ; } ( k ) ; } } } return rMap ; }<CODESPLIT>Returns a reversed map of the current map .
public Credential setRefreshToken ( String refreshToken ) { ( ) ; ( refreshToken ) ( json transport clientAuthentication tokenServerPlease callJsonTransportAuthentication +ServerUrlsetTokenServerUrl ) ; } this refreshToken = refreshToken ; } ( ) ; } return this ; }<CODESPLIT>Sets the refresh token .
public void makeCurrent ( EGLSurface eglSurface ) { (EGLDisplay EGL EGL (Current display ) ; } ( EGLMake (EGLDisplaySurfaceSurfaceEGL new (eglMake ) ; } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
public navigateSafe ( defaultValue Object source Object paths navigateOrDefault ( defaultValue source paths ) ;<CODESPLIT>Use navigateOrDefault which is a much better name .
public void ( CommerceWarehouseItem commerceWarehouseItem ) entityCache remove ( CommerceWarehouseItemModelImpl ENTITY CommerceWarehouseItem commerceWarehouseItem ( ; finderCache clearCache ( FINDER ; finderCache clearCache ( FINDER ;UniqueFindCache ( ( CommerceWarehouseItemModelImpl commerceWarehouseItem ) ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void process ( String input String output ) throws MPXJ IOException { MPP MPP ( ) ;project read ( input ) ; ; project ; mpFileType Number (project getProjectProperties ( )FileType ( ) ) ; ( project ;FixDeFix ; } project ; ; } project ; ; } project ; ; } new ( file type + mp ) ; } } ( input ) ; POFS POFS ( ) ; ( ) ; DirectoryEntry root getRoot ( ) ;project ( DirectoryEntry ) root getEntry ( project ) ; replacements ( ) ; ( Task taskprojectTasks ( mapText ( task ( ) ) ; } processReplacements ( ( ( DirectoryEntry )project getEntry (TBTask ) )Data ) ; clear ( ) ; ( Resource resourceproject getResources ( mapText ( resource ( ) ) ; mapText ( resource getInitial ( ) ) ; } processReplacements ( ( DirectoryEntry )project getEntry (TB )Data ) ; clear ( ) ; ProjectProperties propertiesproject getProjectProperties ( ) ; mapText ( properties getProjectTitle ( ) ) ; processReplacements (project ) ; clear ( ) ; mapText ( properties getProjectTitle ( ) ) ; mapText ( properties getSubject ( ) ) ; ( propertiesAuthor ( ) ) ; mapText ( properties ( ) ) ; ( propertiesComments ( ) ) ; processReplacements ( rootSummaryInformation ) ; clear ( ) ; mapText ( properties ( ) ) ; ( properties ( ) ) ; mapText ( properties getCategory ( ) ) ; processReplacements ( rootDocumentSummaryInformation ) ; ( ) ; writeFilesystem ( ) ; flush ( ) ; ( ) ; ( ) ; }<CODESPLIT>Process an MPP file to make it anonymous .
public void setRollbackOnly ( ) { ( ) ; ( tc ( ) ) Tr ( tcRollback this ) ; } LocalTransactionCoordinator getLocal ( ) ; (Coord )CoordRollbackOnly ( ) ; }ServiceRollbackOnly ( ) ; } ) (setRollbackOnly this ) ; new ( active transaction" ) ; } } ( tc ( ) ) Tr ( tcRollback ) ; } }<CODESPLIT>Marks the current local or global transaction to be rolled back
private static analyse404Response ( String content ) { ( content (reason\":missing ; } (Design document content ) ; ; }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private ListenableFuture writeBlocksToTargets ( Collection DBBPool. BBContainer outputBuffers int [ serialized ) { (tableTasks ( ) serialized ) ; (Buffers ( ) serialized ) ; writeFutures (Buffers ( ) ) ; Iterator DBPool BBContainer containerBuffers ( ) ; serialized ; ( SnapshotTableTask tasktableTasks DBPool BBContainer container container ( ) ; container ( ) ; limit ( serialized serialized + tasktarget getHeader ( ) ) ; position ( ) ; Callable DBPool BBContainerTarget Callables ( container ) ; ( taskfilters ( SnapshotDataFilter filter taskfiltersTarget filter filter (Target ) ; } } write tasktarget write (table ) ; ( writeFuture writeFutures ( writeFuture ) ; } } F allAsList ( writeFutures ) ; }<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
private isTerminal ( IAtom atom Map IAtom Integer atomToIndex graph atom ( atom ) ;<CODESPLIT>Is the atom terminal having only one connection .
private Handler AsyncResult createUndeployHandler ( Message JsonObject message ) { Handler < AsyncResult < > > ( ) void handle ( AsyncResult result ) { ( ( reply ( ( ) ( ) ( ( ) ( ) ) ) ; } reply ( ( ) ( ) ) ; } } } ; }<CODESPLIT>Creates a platform undeploy handler .
public PhotoAllContext getAllContexts ( String photoId ) throws FlickrException { Photo Photo Photo Photo ( ) ; Pool Pool pool Pool Pool ( ) ; PhotoAll PhotoAll ( ) ; parameters ( ) ; parameters put (methodGETCONTEXT ) ; parameters put (photo photo ) ; ( ( ) parameters ) ; ( ( ) ) new Flickr ( ( ), ( ) ) ; } Collection Element photosElement getPayloadCollection ( ) ; ( Element photosElement ) (TagName ( ) (set ) ) Photoset Photo ( ) ;set setTitle ( ( ) ) ;set ( ( ) ) ;set setId ( setElement ( ) ) ;set setF ( setElement ( ) ) ;setPrimary ( setElement ( ) ) ;setServer ( setElement ( ) ) ;set setView ( ( setElement (viewcount ) ) ) ;setComment ( ( setElement (commentcount ) ) ) ;set setCount ( ( setElement (countphoto ) ) ) ;set setCountVideo ( ( setElement (countvideo ) ) ) ; setList ( ) ;SetList (List ) ; } (TagName ( ) (pool ) ) Pool pool Pool ( ) ; setTitle ( setElement ( ) ) ; setId ( setElement ( ) ) ; setUrl ( setElement ( ) ) ; setIconServer ( setElement ( ) ) ; setIcon ( setElement ( ) ) ;Member ( ( setElement ( ) ) ) ;Pool ( ( setElement (count ) ) ) ; poolList ( pool ) ;PoolList (List ) ; } } return allContext ; }<CODESPLIT>Returns all visble sets and pools the photo belongs to .
public Map < String Object getFieldData ( Map < String Object properties ) { prop ; ( properties ) prop ( ) ; ( ; ;Field DBParams FIELD ( ) ;FieldName ( ) properties (Field ) ; ( ) ; Record record this ( ) ; ( ( '.' ) ) record this (FieldName (FieldName ( ) ) ) ;FieldNameFieldName (FieldName ( ) + ) ; } BaseField field ; ( record ) field record getField ( ) ; ( field )Return put (FieldNumber field getData ( ) ) ; } } return propReturn ; }<CODESPLIT>GetFieldData Method .
protected void connect ( InetAddress address port ) Socket BlockGuardPolicy (Network ( ; connect ( ; connected ; connected ; ; }<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private char getEscaped ( ) { ; ( pos ) new IllegalStateException ( " end of DN " + dn ) ; } ( pos '"' ',' '<' '#' : : '*' : '%' : '_' : chars pos ; :UTF ( ) ; } }<CODESPLIT>returns escaped char
private static cutOffValidationMatchersPrefix ( expression ) ( expression ( Citrus VALID expression ( Citrus VALID expression substring ( Citrus VALIDMATCHPREFIX ( ) expression ( ) Citrus VALIDMATCHSUFFIX ( ) ) ; } expression ; }<CODESPLIT>Cut off validation matchers prefix and suffix .
public SortedSet < TypeElement implementingClasses ( TypeElement typeElement ) { SortedSet ( implementingClasses typeElement ) ; SortedSet intfSubClasses ( typeElement ) ; IteratorInterfaces intf ( ) ; ( sub ( Iterator implementingClasses implementingClasses ( subInterfaces ( ) ) ( ) ; ( implementing ( implementingClasses ( ) ; ( ( ) ) ( ) ; } } } ; }<CODESPLIT>Return the set of classes which implement the interface passed .
public void add ( ValidationResult validation ) validation ; validate ; ( validation ; warnings ( validation warnings ; }<CODESPLIT>Adds a validation result to this .
public static String toMetaFieldInfoString ( Object obj ) { ( 100 ) ; MetaField fieldsMetaField ( obj ) ; ( ; fields ; MetaField field fields ; ( field ) ; ( ) ; ( field actual field actual getClass ( ) ( String ) ) ( ) ; ( field value ) ; ( ) ; } ( field value ) ; } ( + fields ) buf ( ) ; } buf ( ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
public getArrayClassName ( Class clazz getArrayClassName ( clazz getComponentType ( ) ) + ; clazz getName ( ) ; }<CODESPLIT>Formats the class name with trailing square brackets .
 void addBlock Block block isInitialized ( ; } BlockScan block ( block ) ; ( (Adding existing block + block ; delBlock ( ) ; } BlockScan ( ;ScanBlockScan ( ) ;Block ( ) ; adjustThrott ( ) ; }<CODESPLIT>Adds block to list of blocks
public String getTile ( int x int y ) { ( ( getArray ( ( getArray ( ( ( ) new ( ) ; } image x y ; }<CODESPLIT>Gets a tile of the XPM Image .
public JBBPDslBuilder BitArray ( name bitLenExpression sizeExpression ) { Item Item ( Bin ; bitExpressionExpression ( bitExpression ) ;ExpressionExpression (Expression ) ; addItem ( ) ; this ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
public static Object indexOf ( String strPattern String strInput int offset boolean caseSensitive boolean matchAll ) throws MalformedPatternException {MatcherInput inputMatcherInput (Input ) ; PerMatcher PerMatcher ( ) ; : PerCompiler ; SINGLE ; ( offset offset ; pattern getPattern (Pattern compile ) ; ( offsetInput ( input setCurrent ( offset ; ( offsetInput ( ) Array matches ArrayImpl ( ) ; ( ( pattern match ( ) ( ) ; ( matchAll ) Double ( match ) ; } matchesEL ( match ) ; } ( ( ) ) matches ; } } ; }<CODESPLIT>return index of the first occurence of the pattern in input text
private Object checkRegisteredServicesByLdapFilter ( filter ) ServiceReference references getBundle ( ) getServiceReferences ( ( ) filter ) ; references ; } references getBundleContext ( ) getService ( references ) ; } ( services registered filter + filter ) ; }<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public void postEvent ( DEvent event ) { ( postEvent ( event ) ; } (omom postEvent ( event ) ; } (Drop event non longer managed objectoid ( ) getClass ( ) getName ( )event event ) ; } }<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
public Identity createOverlayManagerGroup ( name ExtendedIdentifiersExtendedIdentifier ( IfStrings IMETADATANSURI IfStrings IMETADATAoverlaymanagergroup ) ;<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public static DoubleMatrix cholesky ( DoubleMatrix A ) { DoubleMatrix A dup ( ) ; NativeBlpotr ( A rows A rows ) ; ( new LArgumentException (DP, info ) ; } ( ) new L (DP,Minor + info + negative Matrix positiveite ) ; } clearLower ( ) ; ; }<CODESPLIT>Compute Cholesky decomposition of A
public static boolean isCaller ( String className String methodName ) { throwable ( ) ; StackTraceElement stackElements throwable ( ) ; ( stackElements ( Level WARNEmpty call stack ) ; ; } match "*" ( ) ; ( stackElements ( stackElements getClassName ( ( className matchAllMethod? : stackElements i getMethodName ( ) ( methodName ) ; } } ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
public InputStream setFlag ( name value executeCommand (setflag ) ; }<CODESPLIT>set JVM command line flag
public Q addFlag ( Position position prefix Expression expr Expression Expressions template ( ( ; queryMixin addFlag ( QueryFlag ( position flag ) ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ConnectionInfoConnectionInfo ( Channel c ) channel ( Socket ) ; host channel ( ; remoteAddress getRemote ( channel ; channel pipeline ( ( Sslhttpshttp ; ConnectionInfo ( hostAddress remoteAddress scheme ) ; }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDPDomain getPDPDomain ( String pdpDomainName ) throws IOException { SortedSet domainRanges ; ( serializedCache ( serializedCache (DomainName domainCache ( pd ) ; } }DomainRanges checkDomainRanges ( domainRanges ) ; (RequestDomainRanges ( servergetDomainDomainName ) ; (Fetching ) ; URLConnection ( ) ; xml JFCatClient convert ( ) ; domainRanges XML getDomainRangesXML ( ) ; ( domainRanges cache (DomainName domainRanges ; } } ( generating PDP request URL + ) ; new ( PDP name + pdDomainName, ) ; } pdb ; ResidueRange ranges ResidueRange ( ) ; ( domainRange domainRanges SubstructureIdentifier SubstructureIdentifier ( domainRange ) ; ( pdb pdb ( ) ; } ( pdb ( ( new ( take union domains multiple PDB IDs ) ; } ranges ( getResidueRanges ( ) ) ; } PDPDomain ( pdpDomainName ranges ) ; }<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
public Context getContext ( searchView searchView getContext ( ) ; } supportView supportView getContext ( ) ; } (SEARCHVIEW ; }<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private boolean isMacroCycle ( IRing ring IRingSet rs ) { ( ring ( 8 ; ( IBond bond ring bonds ( ; ( IAtomContainer other rs atomContainers ( ( ring ; ( ( bond ; } } ( ) ; } ; }<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
public T T datastoreToJava ( Entity entity ) { ( entity ; } T ( T ) persistent ( ) ; populate ( entity ) ; ; } ( ) ; } ( ) ; } }<CODESPLIT>Convert a value from Google representation to a Java value
private void updateCacheState ( Map Object props getAuthentication ( ; cacheCacheService activate ( ; }CacheService deactivate ( ; } }<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public QuerySnapshot withChanges ( Query query Timestamp readTime DocumentSet documentSet List DocumentChange documentChanges ) QuerySnapshot ( query read )DocumentSnapshot documents ; List QueryDocumentSnapshot getDocuments ( ) documents documents documents ( ; } } } unmodifiableList ( documents ) ; } List DocumentChange getDocumentChanges ( ) unmodifiableList ( documentChanges ) ; } size ( ) documentSet ( ) ; } equals ( Object o ) ; } ; }Snapshot (Snapshot ) ; ( query that query ) ( ( ) that ( ) ) ( getDocumentChanges ( ) that getDocumentChanges ( ) ) ( getDocument ( ) that getDocument ( ) ) ; } hashCode ( ) hash ( query this getDocumentChanges ( ) this getDocument ( ) ) ; } } ; }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean readSend ( InH3 hIn OutboxAmp outbox HeadersAmp headers ) throws IOException {RefHH ;H read ( h ) ; } ) ( Level FINER, ( ), ) ; skip ( h ) ; return ; }RefAmpH ( ) ; ClassLoader loaderH ( ) ; thread ( ) ; thread setContextClassLoader ( ) ; read (H ) ; ( (Level ) ) (Level, + send + method getName ( ) + ( ) + headers ) ; } SendMessage sendMessage SendMessage (box headers serviceRef ( ) ( ) ) ; timeout ; sendMessage offer ( timeout ) ; } ) ( ( ) ) ; ( ( ) ) ( Level, ( ), ) ; } } return ; }<CODESPLIT>The send message is a on - way call to a service .
private String getRemoteFileName ( UploadFile file ) { ( ( PARAMREMOTE ( ) ) file getName ( service ) ; } ( ( PARAMREMOTE ) ( ) ) ( PARAMREMOTE ) ( ) ; length ; } file getProperty ( PARAMREMOTEPATH ) ; }<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public void initializeBufferMetrics ( Task task ) MetricGroup buffers addGroup ( ; buffers gauge (Queue InputBuffers ( task ; buffers gauge (QueueBuffers ( task ; buffers gauge (Pool InputPool ( task ; buffers gauge (Pool OutputPool ( task ; }<CODESPLIT>Initialize Buffer Metrics for a task .
public void doubleClick ( fileName ) QTaste { Region (Click ( ; } QTaste ( ( ) ) ; } }<CODESPLIT>Simulates a double click on the specified image of the area .
public void setDestinationSSECustomerKey ( SSECustomerKey sseKey ) (AwsManagement ( SSECustomerKey SSEAwsKey set time ) ; } destinationSSECustomer sse ; }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
public void ( Throwable t ) Toast ( ( ) show ( ) ; }<CODESPLIT>show any error messages posted to the bus .
private void paintDropLines ( SeaGlassContext context Graphics g ) { JTable DropLocation loc table getDropLocation ( ) ; ( loc ) ; } Color color ( Color ) style ( contextTabledropLineColor ) ; ColorColor ( Color ) style ( contextTabledropLineShortColor ) ; ( colorColor ) return ; } Rectangle ; getHDropLine ( loc ) ; ( ) rect ; rect ; ( color ) extend ( ) ; ( color ) ; g fill ( width ) ; } ( locInsertColumn ( )Color ) (Color ) ; g fill ( ) ; } } getVDropLine ( loc ) ; ( ) rect ; rect ; ( color ) extend ( ) ; ( color ) ; g fill ( width ) ; } ( locInsertRow ( )Color ) (Color ) ; g fill ( width h ) ; } } }<CODESPLIT>Paint the drop lines if any .
public DatalogProgram createDatalog ( SWRLRule rule accept ( ; ( Supported Translation + ; ( ; } DatalogProgram datatalogProgram ( ; ( facts ; dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
protected inflateAuthnRequest ( byte decodedBytes ) val infl inflate ( ) ; infl infl ; } Compression decodeByteArrayToString ( decoded ) ; }<CODESPLIT>Inflate authn request string .
public FrameworkProjectConfig create ( name File propertyFile Properties properties IFilesystemFramework filesystemFramework ) generateProject ( property properties ; } create ( name propertyFile filesystemFramework ) ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized void clearLogContext ( ) { Log embeddedLog HolderCONTEXT ; Config embeddedLog ( ) detach ( Config ) ; ( configurator PropertyConfigurator LogConfigurationConfiguration ( ( Property ) ) getLogConfiguration ( ) ; clear (Configuration ) ; } ( configurator Log clear ( (Configuration ) ) ; } ( embeddedLog ( ) ) ; ( logger Logger embeddedLogIfExists ( ) ; ( Handler handlers clearHandlers ( ) ; ( handlers ( Handler handler handlers handler close ( ) ; } } setFilter ( ) ;ParentFilters ( ) ;ParentHandlers ( ) ; setLevel ( INFO ) ; } } } }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
public RestApiResponse execute ( Blocking blockSingle ( delegate execute ( ) ) ;<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
public InputStream getInputStream ( HttpServletRequest request MutableObject < byte [ sourceMapResult ) throws IOException { this bytes ; sourceMap this sourceMap ; filename filename ; ; ( bytes ( ) ; ( sourceMap sourceMap sourceMap ( sourceMap ) ; } } ( filename ICacheManager cm ( ( IAggregator ) request getAttribute ( IAggregator AREQ ) ) getCacheManager ( ) ; ( cm getCache ( ) filename ) ; ( sourceMap ( ) ; } CacheData ; ObjectInputStream ObjectInputStream ( ( ) ) ; data ( CacheData ) readObject ( ) ; } new ( ( ), ) ; } ( ) ; } bytes bytes ; sourceMap sourceMap ; ( sourceMap sourceMap ( sourceMap ) ; } ( ) ; } } new ( ) ; } ; }<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public void cacheIncludeAndIgnore ( WebElement table ) { (Ignore ( ( WebElement ( ) ) ; (IgnoreMatching (IgnoreMatches ( ) ( table findElements ( ) ) ; } } ( ( ( WebElement ( ) ) ; (cludeMatching (cludeMatches ( ) ( table findElements ( ) ) ; } } }<CODESPLIT>Does the table comparison
public E List InlineDiffChunk E inline ( List E previous List E next ) ( ; this inlineDiffDisplayer display ( thisManager ( previous ) ) ; } Diff ( ; ; } }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public static CompletableFuture MessageSet getMessagesAroundUntil ( TextChannel channel Predicate Message condition long around ) { Message ( ; channel getApi ( ) ( )ExecutorService ( ) submit ( ( ) Message messages ( ; Message untilMessage getMessagesAround ( channel around ) peek ( messages ) filter ( condition ) ( ) ; ( Message ( until ( messages ( ( ) ; } complete ( ) ; } } ) ; future ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public static boolean findSipApplicationAnnotation ( InputStream stream ) { raw ; raw available ( ) ; stream read ( rawClass ) ; ( raw SIPAPPLICATION ) ; ( raw ANNOT ) ; ( two ) ; } ) } return ; }<CODESPLIT>Determine if this stream contains SipApplication annotations
protected Map < String Object buildJobDataMap ( JmxCommand jmxCommand Object [ params ) throws MBeanException { job ( ) ; ; ( Jmx JmxOptions getOptions ( option process ( jobDataMap ( ind ) ) ; } ( Argument this remoteProgram getArguments (Using ( ( ind ) ) ; } } new MBean ( ) ; } jobDataMap ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private void V ( StringBuilder buf ) { Token ( ) ; ( VALUE ) new ( token + ) ; } ( ( ) ) ; getNextToken ( ) ; ( EOL ) ; } ( TRASLASH ) Vopt ( ) ; } }<CODESPLIT>Vopt = EOL V
public void addHeader ( sName sValue ) { (add ( sName ; }<CODESPLIT>Add the passed header as is .
public N Number Number max ( List N numberList ( numberStream ) ;<CODESPLIT>Max number .
public int getChaincodeActionResponseStatus ( ) throws InvalidArgumentException { (Code ; } ProposalPayloadDeserializer proposalPayloadDeserializer getProposalPayloadDeserializer ( ) ; proposalPayloadDeserializer getExtension ( ) ( ) ;Code ; } ; } ( ) ; } }<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
public generate ( Queue Pair Env Attr JCClassDecl queue generate ( queue ;<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public static EnhancedMimeType create ( primary sub Charset encoding version Map parameters ) { EnhancedMimeType ( primary sub encoding version parameters ) ; } MimeType ( create versioned mime + primary + + sub, ) ; } }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
public long toLongWithDefault ( Object value long defaultValue ( ;? ( ) : defaultValue ;<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public void setIsolation ( String iso ) throws JspTagException { ( TRANSACTIONCOMMIT ( iso ) ) isolation ConnectionREAD ; } ( TRANSACTIONCOMMIT ( iso ) ) isolation ConnectionREAD ; } ( TRANSACTIONPEAT ( iso ) ) isolation = ConnectionREAD ; } ( TRANSACTIONSER ( iso ) ) isolation = ConnectionSER ; } new JspTag ( (TRANSACTIONINVALIDOL ) ) ; } }<CODESPLIT>Setter method for the transaction isolation level .
public void traverse ( Node root ) initTraversal ( ; ; pushScope ( ; traverseBranch ( ; popScope ( ; } ( ) ; } }<CODESPLIT>Traverses a parse tree recursively .
public CollectionRequest Tag findByWorkspace ( workspace ) (workspacestags workspace ; CollectionRequest Tag > ( this Tag pathGET ) ; }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
 Rule CriteriaFindQuery ( Sequence ( peek (CliQuery ( Json ( JsonObject ( peek (Operation ( FIND peek (Criteria ( match ( ;<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
private E unlinkLast ( Node < E > l ) { E element item ; Node E > ; item ; ; = ; ( ) ; ; size ; mod ; return element ; }<CODESPLIT>Unlinks non - null last node l .
private static void setupSimpleSecurityProperties ( Hashtable Object env String userDn char ) { ( Context SECURITYAUTHENTICsimple ) ; ( Context SECURITYPRIPDn ) ; ( Context SECURITYCREDENT ( ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
public Team createTeam ( tag sendRpcWait ( SERVICEcreateTeam tag ) ;<CODESPLIT>Create a new ranked team with the specified name and tag
private static void checkFilePattern ( String s ) throws ProblemException { Pattern ; ( File separator '\\' ) compile ( ) ; } ( File separator ) compile ( ) ; } new Problem (This platform uses unsupported + File separatorChar + file separator character add support ) ; } ( ) ; ( ( ) ) new Problem ( string + s + proper file name ) ; } }<CODESPLIT>Verify that a source file name is valid .
public void close ( ) Exception ( Transaction ShardTransactionManager transactionManager ( ( ) ( ) ; } }<CODESPLIT>Close sharding transaction managers .
protected static String getBar ( long percentage ) { ( ) ; ( percentage ) ; ( ) ; ( ; 100 ; ) ( percentage 100 percentage ) ( ) ; } ( percentage ) ( ">" ) ; } ( ) ; } } ( ) ; return. toString ( ) ; }<CODESPLIT>Generates the progress bar for the given percentage
private void resolve ( T element List T result ) dependencies blocked ( element ; dependencies ( T dependencies resolve ( dependency ; } blocked remove ( element ; ( element ; } }<CODESPLIT>Resolves an element .
public B camundaOut ( source target ) Camund model ( Camund ;und ( source ;und ( ; addExtension ( ) ; myself ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
Node createArgumentsReference ( ) { IR (arguments ) ; (Adding (JS ( argumentsSupplier ( ; } ; }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
public Date toDate ( String dateString ) { Date date ; ( ) ; date parse ( dateString ) ; } ) ( fillIn ( ) ) ; } date ; }<CODESPLIT>Takes a String and converts it to a Date
public cusolverRSetNumericProperties ( cusolverRHandle handle zero boost ( cusolverNumeric ( boost ) ;<CODESPLIT>CUSOLVERRF set and get numeric properties
public quoteString ( obj? quote ( ( ) ) : ;<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Deferred < Object deleteUidAsync ( final String type final String name ) { Unique uidtype UniqueUniqueId ( ) ; ( uid MET metricsAsync ( ; TAG tagAsync ( ) ; TAG tagvaluesAsync ( ) ; : ( UID uidtype ) ; } }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
public scrollDownList ( index ) (Logging ( commandLoggingTagscroll ) ; } sc scrollList ( waiter waitForAndGetView ( index ListView ) Sc DOWN ) ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected void makeAnnotationTypeElementDoc ( MethodSymbol meth TreePath treePath ) { AnnotationDocImpl ( AnnotationDocImpl ) ( meth ) ; ( ( treeTree ( tree ; } AnnotationElementDoc ( tree ; ( ) ; } }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
public Object call ( method Object arguments Pickle Pyro internalcall ( method arguments ) ; }<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
public static formatAsPercentage ( value total ) { average ; PERCENTFORMAT format ( average ) ; }<CODESPLIT>Returns value converted to percentage format .
public Geometry JTSGeometryExpression translate ( Expression expr del deltay geometryOperation ( expr ( ) Spatial TRAN expr Constant ( deltax ) ConstantImpl ( delay ) ) ;<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private static byte [ requestWebContent ( String url ) throws TVRageException { Http Http ( ) ; httpGet (acceptxml ) ; DigestedResponse DigestedResponseContent ( ) ; ( ( 500 ) new T ( ApiException HTTP3, url ) ; } ( ( ) ) new T ( ApiException HTTP, url ) ; } getContent ( ) getBytes ( DEFAULTCHARSET ) ; } new T ( ApiException,PARSE, url, ) ; } }<CODESPLIT>Get content from URL in byte array
private static boolean isNumeric ( String value ) { ( value ( ( isDigit ( ; } } ; }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
 RequestMapping ( method = GET value =foo" ) Map String String getFoo ( ) { ( ) ; (foobar ) ; fooObj ; }<CODESPLIT>Controller to just support pinging .
protected static void fireArrayStartEvent ( JsonConfig jsonConfig ) { ( isEventTrigger ( ( Iterator listeners getJsonEventListeners ( ( listeners ( Json listener ( Json ) listeners ( ) ; listener ( ) ; } ( ; } } } }<CODESPLIT>Fires a start of array event .
public E Exception sneaked ( SneakyRunnable E runnable ( ) (neakyRunnable RuntimeExceptionRunnable (neakyRunnable RuntimeException ; casted run ( ; ;<CODESPLIT>Sneaky throws a Runnable lambda .
public static Domain update ( BandwidthClient client String id Map String Object params ) throws AppPlatform ParseException IOException Exception { ( id ) ; domains getUserResource ( Band DOMURI id ) ; Rest post ( domains ) ; toJSON ( ( domains ) ) ; Domain ( client jsonObject ) ; }<CODESPLIT>Convenience method to return a Domain .
public static Stream String getResourceTypes ( Event event ) { (ape jcr api observation Event jcr observation Event mode (ape jcr observation Event ) ; Stream NodeType Stream ( ) ; ( NodeType modeEventixinNodeTypes ( types ( ) ; } types ( modeEvent getPrimaryNodeType ( ) ) ; types ( ) map ( NodeType :: getName ) ; } RepositoryException Repository ( ) ; } } empty ( ) ; }<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
private void processDefaultHeader ( ParserContext ) ( context getFileLines ( hasHeader } process ( getDocumentModel ( ) ) ; } }<CODESPLIT>Process the header of the file .
public Connection getConnection ( url username password ) SQLException alive ( ; alive createConnection ( username password ; } connection ; }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
protected static StringBuilder renderPad ( StringBuilder builder int pad boolean newLine ) { render ( ) ; ( ; pad ; ( ) ; } ; }<CODESPLIT>Render some leading spaces onto a line of html .
public OvhAsyncTaskArray OvhLine eligibility_lines_active_POST ( OvhCity city String contactName OvhStreet street String streetNumber ) throws IOException {xdslelibilitylinesactive ; ( ) ; ( ) ; ( city ) ; (contact contact ) ; (street street ) ; (street street ) ; ( qPathPOST ( ) ) ; convertTo ( t5 ) ; }<CODESPLIT>Get the active lines at given address
private evaluateExpressionStack ( Deque operators Deque values operators values push ( ( operators pop ( values pop ( values pop ( ; } replaceIntegerBooleanRepresentation ( values pop ( ) ) ; }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public int write ( byte [ ] buffer int offset int length boolean isEnd ) throws IOException { ; requestrequest ; ( requestExpire requestExpire ( ) ) close ( ) ; new ClientDisconnect ( L l ( request exp addressRemote ( ) Current ( ) requestExpire ) ) ; } (write getCurrentActual ( ) ; expiressocket ; writeNative (socketFd buffer offset ) ; } ( JStream getCurrent ( expires ; } ( ) closeWrite ( ) ; } ; }<CODESPLIT>Writes to the socket .
public void setAmbientLight ( float r float g float b ) { amb } ; normalize ( amb ) ; gl glEnable (LIGHT ) ; gl glEnable (LIGHT ) ; gl glLight (LIGHTAMENT amb ) ; }<CODESPLIT>Sets the RGB value of the ambientLight
BigInteger setMultiChoiceCount ( ) { ( fields ( ; fields ; multiChoice multiChoice ( fieldsMultiChoice ( ) ) ; multiChoice ;<CODESPLIT>Set the multiChoiceCount for this tuple
public void delete ( forceDelete ) API delete ( getUrl (force forceDelete ) ; ( ) ; }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected void addNameToApplicationMap ( String name ) { appName ( ) ; ( appName ; ConcurrentLinkedQueue application ( appName ) ; ( listQueue ConcurrentQueue ( ) ; application putIfAbsent ( appName ) ; ( list list ; } ( ) ; }<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public static Envelope getTableEnvelope ( Connection connection TableLocation location String geometryField ) throws SQLException { ( geometry geometry ( geometry getGeometry ( connection location ; ( geometry ( SQLException ( table + location + Geometry field extent + computed ) ; } geometry geometryFields ( ) ; } connection ( ) (SELECT STExtent + TableLocation ( geometry ) + + location ) ; ( ( ( ( Geometry ) getObject ( ) )EnvelopeInternal ( ) ; } SQLException ( table extent ) ; }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void doListGet ( Message < JsonObject message ) { ( ) ( ) ; ( ) reply ( ( ) ( ) ( specified ) ) ; ; } ( ) (index ) ; ( index ) reply ( ( ) ( ) ( specified ) ) ; ; } context. execute ( new Action < Object ( ) { Object perform ( ) { data getList ( formatKey ( name ) ) get ( index ) ; } } new Handler < AsyncResult < Object ( ) { void handle ( AsyncResult < Object result ) { ( ( ) ) reply ( ( ) ( ) ( ( ) ( ) ) ) ; } reply ( ( ) ( ) (result ( ) ) ) ; } } } ) ; }<CODESPLIT>Handles a list get .
public static PlotCanvas plot ( String id double [ ] data ) { Histogram histogram Histogram ( data ) ; histogram ( id ) ; lowerBound = min ( ) } ; upperBound = ( ) } ; freq histogram getH ( ) ; ( ; ; ( freq upperBound ) upperBound = freq ; } } PlotCanvas canvas PlotCanvas ( lowerBound ) ; canvasxis ( )Grid ( ) ; canvas ( histogram ) ; canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static Pair < List < Tuple List < Tuple splitData ( List < Tuple trainingData double proportion ) { ( proportion proportion ) new (Pro ) ; } ( proportion ) proportion proportion ; } Tuple ( ) ; Tuple large ( ) ; ( ) ( proportion trainingData ( ) ) ; ; indices ( ) ; ( small training ( indices ( ( ) ( random ( ) ( trainingData ( ) ) ) ; ( indices ( index ( ) ( random ( ) ( trainingData ( ) ) ) ; } indices ( index ) ; ; } small ( indices stream ( ) map ( trainingData ) collect ( ( ) ) ) ; IntStream range ( trainingData ( ) ) filter ( indices ( ) ) ( ( trainingData ( ) ) ) ; ImmutablePair < > ( smallList, largeList ) ; }<CODESPLIT>Shuffle the data and split by proportion
public static void getScreenShotABGR ( ByteBuffer bgraBuf, BufferedImage out ) { WritableRaster getRaster ( ) ; DataBufferByte db ( DataBufferByte ) getDataBuffer ( ) ; byte cpuArray db getData ( ) ; bgra clear ( ) ; b ( cpuArray ) ; bgra clear ( ) ; width ( ) ; ( ) ; ( ; height / 2 ; ) ( ; width ; ) in ( width + x ) 4 ; ( ( ) width + x ) 4 ; =Array + ; g =Array + ; =Array + ; =Array + ; =Array out + ; g =Array out + ; =Array out + ; =Array out + ;Array out + = ;Array out + = ;Array out + = g ; cpuArray out + = ; cpuArray + = ; cpuArray + = ; cpuArray + = g ; cpuArray + = ; } } }<CODESPLIT>Good format for java swing .
public Pair < int [ ] [ ] [ ], int [ ] > documentToDataAndLabels ( List < IN > document ) { doc document ( ) ; data doc windowSize ; labels doc ; ( flags useReverse ) reverse ( document ) ; } ( ; doc ; ) CRFDatum List CRFLabel d makeDatum ( document feature ) ; > > featuresFeatures ( ) ; ( features ( ) ; f ; ) Collection > cliqueFeatures features ( k ) ; data k cliqueFeatures ( ) ; m ; ( feature cliqueFeatures ) index feature ( feature ) ; ( index ) data = index ; ; } } } ( m data k ) f m ; System ( data k f m ) ; data = f ; } } IN document ( ) ; labelsIndex ( ( AnswerAnnotation ) ) ; } ( flags useReverse ) reverse ( document ) ; } return new Pair < int ] ] ], int ] > ( data, labels ) ; }<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public static synchronized List < Class < > > locateAll ( final String serviceName ) { ( serviceName ) new IllegalArgumentException (serviceName ) ; }? classes? ( ) ; ( factories ) Callable? factories ( serviceName ) ; ( ) ( Callable Class ) classes ( call ( ) ) ; } ) } } } } return classes ; }<CODESPLIT>Finds all providers for the given service .
String decodeCString ( ByteBuf buffer ) throws IOException { buffer bytes ( Bson STRINGTERMIN ) ; ( ) ( termination ) ; buffer ( buffer ( ) ) ; buffer skip ( + ) ; return ; }<CODESPLIT>default visibility for unit test
public void addCase ( JMFType theCase ) { (Case ) new (Variant case cannot ) ; JSType ( JSType ) ; ( cases ) cases new JSType ; JSTypeCases = cases ; cases JSType + ; System (CasesCases ) ; } parent this ;Case siblingPosition cases ; casesCase siblingPositionCase ; }<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public String summarizeState ( ) { ( ) ; (clipVol ) (clipVol ) ; ( disabled ) ; ; ( Sound sound _disabledTypes ( ( ) ; } ( sound ) ; } buf append ( ) ( ) ; }<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private Map < String String getCustomMap ( Pattern keyPattern ) { ( ) ; ( Iterator props ( ( ( ; key ( ) ( ) ; keyPattern ( key ) ; ( ( ) ) id group ( ) ; propertyValue props ( key ) ; map ( id propertyValue ) ; } } map ; }<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
public rawUncompress ( inputAddr inputSize destAddr implUncompress ( input input dest ) ;<CODESPLIT>Zero - copy decompress using memory addresses .
public void write ( byte [ ] b int off int len ) { check ( ) ; ( off this this ) ; ; }<CODESPLIT>Writes a byte array content into the stream
public Operation patchHealthCheck ( ProjectGlobalHealthCheckName healthCheck HealthCheck healthCheckResource List fieldMask PatchHealthCheckHttpRequest PatchHealthCheckHttpRequest (HealthCheck ( health health (HealthCheck ( health ( ( ; patchHealthCheck ( request ) ; }<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
private void initializeNoxItemMargin ( TypedArray attributes ) {Item ( ) ( R dimitemmargin ) ;Item attributes ( RitemmarginItem ) ; noNoItemMargin ( noItemMargin ) ; }<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
public OperationResult failed ( indexIndex Throwable error Operation ( index event error ) ;<CODESPLIT>Returns a failed operation result .
public static InList ifIntegersEqual ( InList lhs InList rhs InList action ) ( ) ; ( rhs ) ; ( action ) ; In In ( ; LabelLabel Label ( ; ( ) ; ( rhs ) ; ( JInsn ( IFMPNELabel ; ( action ) ; (Label ) ; ; }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public static FormatOptions of ( int flags int width int precision ) { ( checkConsistency ( flags UN new ( flags + Integer ( flags ) ) ; } ( ( UN new ( width + width ) ; } ( ( precision precision ) precision UN ) new ( precision + precision ) ; } FormatOptions ( flags, width, precision ) ; }<CODESPLIT>Creates a options instance with the given values .
public void tripleClick ( Coordinates where ) ( where click ; exec mouseAction ( OperaMouseKeys LEFT ; }<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
private void initializeNoItemPlaceholder ( TypedArray attributes ) Drawable placeholder attributesraw (itemplaceholder ) ; placeholder placeholder ( ) ( )raw ( drawable ) ; } noPlaceholder ( placeholder ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public void pruneInvalidOptional ( DependencyExplorerOutput outputKeys invalidKeys ) DependencyGraph Graph prunedGraph DependencyGraph Graph ( getGraph ( ; ( KeyInvalidOptional ( prunedGraph ( ;Binding ( ; }Graph (Graph ( ; }<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
private PersistentResourceXMLDescription getSimpleMapperParser ( ) { ( version ( Version simpleMapperParser ; } ( version ( Version ) simpleMapperParser ; } simpleMapperParser ; }<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public String getAbsoluteTemplateURI ( String templateName includeExtension ) { Fast Fast ( ) ; templateName ( templateName ( ) ) ; ( ( S ( SLASH ) ; ( SLASH ) ; ( ( ) ) ; ( SLASHUNDR ) ; ( ( + ( ) ) ) ; } ( SLASHUNDR ) ; ( templateName ( templateName ( ) ) ) ; } ( includeExtension ( EXTENSION ) ; } uri ( ) ; ( ) ; uri ; }<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected void scanResourcePaths ( String startPath ) throws IOException SAXException { dir getResourcePaths ( start ) ; (List ( path dir ( path (WEBclasses } ( path (WEBlib } ( path ( scanResourcePaths ( path ) ; } ( path (WEBtags ( path (implicitld ) parseT ( path ) ; } } ( path ( T ) ) parseT ( path ) ; } } } }<CODESPLIT>Scan web application resources for TLDs recursively .
protected duringDrag ( SVGPoint startPoint SVGPoint dragPoint Event inside listener duringDrag (PointPoint evt inside ) ; ;<CODESPLIT>Method called during drags .
private PGPKeyRingGenerator createKeyRingGenerator ( String userId String password int keySize ) { trace (KeyRingGenerator ) ; ( ID Password Key Size userId password :******** key ) ; PGPRingGenerator generator ; (Creating RSA key generator ) ; RSAGenerator generator RSAGenerator ( ) ; generator init ( RSAGeneration ( BigInteger ( )ure ( ) key ) ) ; (Generating Signing Key ) ; Bc signing Bc ( PGP RSASIGN generator generate ( ) Date ( ) ) ; (Generating Enption Key ) ; Bc encryption Bc ( PGP RSA generator generate ( ) Date ( ) ) ; (Generating Signature Key Properties ) ; PGPSubGenerator signatureSubGenerator PGPSubGenerator ( ) ;Generator setKey ( ) ;Generator setPreferred ( ( ) ) ;Generator setPreferredHash (Hash ( ) ) ;Generator setPreferred ( ( ) ) ; (Generating Enption Key Properties ) ; PGPSubGenerator encryptionSubGenerator PGPSubGenerator ( ) ; encryptionGenerator setKey ( ENCRYPTCOM ENCRYPTSTORAGE ) ; (Creating PGP Key Ring Generator ) ; generator PGPRingGenerator ( PGP RSASIGN signing userId Bc ( ) ( HashAlgorithmTags SHA ) signatureSubGenerator generate ( ) BcContentSigner ( PGP RSASIGN HashAlgorithmTags SHA ) BcSecretKey (EncryptionAlgorithm ( ) ) ( password ( ) ) ) ; generator addSubKey ( encryptionKeyPair encryptionSubpacketGenerator generate ( ) ) ; } PGP ( "{}" ( ) ) ; generator ; } generator ; }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public static Date getDateFromString ( dateString pattern ) { SimpleDateFormat build ( pattern ) ; parse ( dateString ) ; } Date ( String ( parse pattern dateString pattern ), ) ; } }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public Object remove ( Object key ) { (cacheL2 (cache ( key )cache ( key ) ) return ; } ; Map ; (cacheL merge (cachecache ) ; remove ( key ) ; }cache = ;cache clear ( ) ; = ; return ; } }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private String getItemType ( Cmdb cmdb ) { itemType ; subType getConfigurationItem ( ) ; getConfigurationItemType ( ) ; hpsSettings hpsSettings getApp ( ) ; hpsSettings hpsSettings getApp ( ) ;Check ; subTypeCheck ; ( ( hpsSettings ) )Check ; } ( ( hpsSettings ) ) subTypeCheck ; } (Check subTypeCheck ) ( subType subType ( hpsSettings getApp ( ) ) ) itemType = APP ; } ( subType subType ( hpsSettingsComp ( ) ) ) itemType = COMP ; } ( subType subType ( hpsSettings ( ) ) ) itemType = EN ; } } (Check subTypeCheck ) ( ( hpsSettings getApp ( ) ) ) itemType = APP ; } ( ( hpsSettingsComp ( ) ) ) itemType = COMP ; } ( ( hpsSettings ( ) ) ) itemType = EN ; } } ( subType subType ( hpsSettings getApp ( ) ) ( hpsSettings getApp ( ) ) ) itemType = APP ; } ( subType subType ( hpsSettingsComp ( ) ) ( hpsSettingsComp ( ) ) ) itemType = COMP ; } ( subType subType ( hpsSettings ( ) ) ( hpsSettings ( ) ) ) itemType = EN ; } } return itemType ; }<CODESPLIT>Returns the type of the configuration item .
public void readXML ( final List < String _tags final Map < String String _attributes final String _text ) throws SAXException EFapsException { (tags ( ) )tags ( ) ; (uuid ( ) ) this uuid ; } (fileapplication ( ) ) thisApplication ; } (definition ( ) ) (Definition ( ) ) ; } } (definition (tags ( ) ) ) AbstractDefinitionDef ( ( ) ) ;Def readXML (tags subList (tags ( ) )attributestext ) ; } new SAXException ( XML Tag + + + this install ) ; } }<CODESPLIT>Read event for given tags path with attributes and text .
public String getSQLUpdate ( boolean bUseCurrentValues ) {Recordset this getBaseRecord ( ) makeTable ( ) ; KeyArea this getBaseRecord ( )Area ( ) ;ValuesValues : keyArea ( DBConstants TEMP ) ;QueryRecord this getBaseRecord ( )QueryRecord ( ) ;Filter keyArea addSelectParams ( DBConstants TEMPQueryRecordValues ) ; (Filter ( ) )Filter WHERE +Filter ;Values this getBaseRecord ( ) getSQLFields ( DBConstants SQLUPDATEValues ) ; (Values ( ) ) ;Record =UPDATERecord SETValuesFilter ; return strRecordset ; }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public static void verify ( Object... objects ) ( objects mock verify ( ( ) mock ) ; } EasyMockInvocationControl invocationControl ( EasyMockInvocationControl ) MockRepositoryInvocationControl ( mock ) ; invocationControl invocationControl verify ( ) ; } isNReplayVerifyasyMock mock } easym EasyMock verify ( mock ) ; } ( mock + mock object ) ; } } } } } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public void mapTileRequestFailed ( MapTileRequestState pState ) (TileImageTileCache ( getMapTile ( )TileNotFoundImage ExBitmapDrawable ) ; ( HandlerTileRequestCompleteHandlers ( handler send ( MAILESUCCESS ) ; } } } ( HandlerTileRequestCompleteHandlers ( handler send ( MAILE ) ; } } } ( Configuration (TileProviders ( d ( IMapViewMapTileProvidermapTileRequest + MapTile (State getMapTile ( ; } }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
static void validateFactoryAndClass ( FieldDefinition fd factoryId classId String fullPath ) { ( factory fd getFactory ( ( factory + getFactory ( ) + + factory + path + fullPath ) ; } ( classId fd getClass ( ( classId + getClass ( ) + + classId + path + fullPath ) ; } }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
public static String getLabelFor ( InputComponent input addColon ) { label input getLabel ( ; ( label label ( ) ; } ( label ( label ; } label ; }<CODESPLIT>Returns the label for this component
protected View inflatePlaceholderView ( View convertView ) View ; view PlaceholderView view PlaceView ( ( ; } view setMinimum ( ; view ; }<CODESPLIT>Inflates an invisible placeholder view with a specific height .
public void stopService ( ) Exception (stopServiceStopping LdapServer ; server stop ( ; (stopServiceStopping DirectoryService ; service shutdown ( ) ; (stopServiceLdap stopped ) ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
public void setCacheMinutes ( iMinutes ) (CA ; cache ; ( ( timerCache timerCache cancel ( ) ;Cache ; stopCache ( ) ; } } ( timerCache timerCache cancel ( ) ; } startCache ( ) ;Task DBTask ( ;Cache util Timer ( ; timerCache schedule ( timerTask cache ) ; } }<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagateOnEnter ( GVRPickedObject hit ) { GVRSceneObject hitObject hit getHObject ( ) ; GVREManager getGVR ( ) getEventManager ( ) ; (Event ( Event SENDEVENTS (Event ( Event SEND ) ) sendEvent ( ITouchEventsEnter hitObject hit ) ; } (Event ( Event SENDHITOBJECT ) ) sendEvent ( hitObject ITouchEventsEnter hitObject hit ) ; } (Event ( Event SENDE ) (Scene ) ) sendEvent (Scene ITouchEventsEnter hitObject hit ) ; } } (Event ( Event SENDEVENTS ) ) (Event ( Event SEND ) ) sendEvent ( IPickEventsEnter hitObject hit ) ; } (Event ( Event SENDHITOBJECT ) ) sendEvent ( hitObject IPickEventsEnter hitObject hit ) ; } (Event ( Event SENDE ) (Scene ) ) sendEvent (Scene IPickEventsEnter hitObject hit ) ; } } }<CODESPLIT>Propagate onEnter events to listeners
public Future GetSendQuota getSendQuotaAsync (Handler GetSendQuotaRequest GetSendQuota asyncHandlerendQuotaAsync (SendQuota ( ) ) ;<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
public short shortValue ( ) throws OtpErlangRange { ( ; ( ; ( OtprlangRange ( large short + val ) ; } i ; }<CODESPLIT>Get this number as a short .
private MjdbcSQLException translateSQLStatePrefix ( String reason String SQLState int vendorCode SQLException cause ) { MjdbcSQLException ; sqlState getSqlState ( ) ; sqlState ; ( sql sql ( ) ) sqlStatePrefix sqlState ( ) ; ( SpringExceptionHandler SQLSQL ( sqlPrefix ) ) BadSqlGrammar ( reason SQLState vendor ) ; } ( SpringExceptionHandler SQLDATAGR ( sqlPrefix ) ) DataIntegrity ( reason SQLState vendorCode ) ; } ( SpringExceptionHandler SQLDATARESOURCE ( sqlPrefix ) ) DataAccessResourceFailureException ( reason SQLState vendorCode ) ; } ( SpringExceptionHandler SQLTRANSIENTDATARESOURCE ( sqlPrefix ) ) TransientDataAccess ( reason SQLState vendorCode ) ; } ( SpringExceptionHandler SQL ( sqlPrefix ) ) ConcurrencyFailureException ( reason SQLState vendorCode ) ; } } ; }<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public boolean matches ( String name ) { ( pattern ( "" ) ; } ( all ( name ) ; } ( name contains ( middle ) ; } ( ( ) ) ; } end name endsWith ( end ) ; }<CODESPLIT>Checks if Simon name matches this pattern .
public nslimitselector get ( nitroservice service selector Exceptionslimitselectorslimitselector ( ; ( selector ;slimitselector (slimitselectorresource ( ; ; }<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public static int solveQuad ( double [ ] eqn, double [ ] res ) { = eq ; = eq ; = eq ; rc ; ( a ) ( ) return - 1 ; } rc = ; } = ; ( ) return 0 ; } d sqrt ( d ) ; rc ( b + d ) ( a ) ; ( ) rc ( b d ) ( a ) ; } } return fixRoots ( res, rc ) ; }<CODESPLIT>Solves quadratic equation
public Set Term getAllTerms ( ) { Term Term ( ) ; ( StatementGroup statementGroups ( Statement getAllStatements ( ( getAllTerms ( ) ) ; } } ; }<CODESPLIT>Returns the set of all terms contained within the document .
public void cancelCopy ( CopyOperationImpl op ) throws SQLException { (Lock ( op new PSQLException ( ( cancel inactive copy operation ), PSQL OBJECTSTATE ) ; } SQLException ; errors ; ( op Copy ( ( Level FINESTFE => CopyFail ) ; encodeUTF (Copy cancel requested ) ; pgStream send ( ) ; pgStream sendInteger ( + ) ; pgStream send ( ) ; pgStream send ( ) ; pgStream flush ( ) ; processCopyResults ( op ) ; } SQLException errors ; ( SQLException ; SQLException ; ( (Exception ( ; } ( error ) ; } ; } } ( ( ; } } ( op Copy sendQueryCancel ( ) ; } } new PSQLException ( (Database connection cancel copy operation ), PSQL CONNECTION, ) ; } ( (Lock ( op ( op ) ; } } } ( op Copy ) ( ) new PSQLException ( (Missing copy cancel request ), PSQL COMIC ) ; } ( ) new PSQLException ( ( responses single copy cancel request ( errors ) ) PSQLState COMUN ) ; } } }<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
public com ads adwords axis v201809 o AttributeType getRequestedAttributeTypes ( requestedAttribute ;<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public void setRange ( Annotation v ) { ( OntRelationMention featOkTst ( ( OntRelationMention jcasType casFeatrange jcasType jcas throwFeatMissing (rangedetypesntRelationMention ; jcasType ll ( ( ( ORelationMention ) jcasType )range jcasType ll llFS ( ) ) ; }<CODESPLIT>setter for range - sets
public List com. ibm. wss. security. wim. model. RolePlayer getRelatedRolePlayer ( relatedRolePlayer ibm model RolePlayer ( ; relatedRolePlayer ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
 JCExpression getUnlyingBinding ( Un un ( un? un getBinding ( UIdent Key ( identifier ( ;<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
public void clearCache ( ) { entityCache clearCache ( CommerceImpl ) ; finderCache clearCache ( FINDER ) ; finderCache clearCache ( FINDERIN ) ; finderCache clearCache ( FINDERNAMEIN ) ; }<CODESPLIT>Clears the cache for all commerce price entries .
private computeCapacity ( initial ) { ( initial MINIMUM MINCAPACITY ; } ( initialIMUM MAXCAPACITY ; } capacity ; capacity initial capacity ; } capacity ; }<CODESPLIT>Compute capacity given initial capacity .
public V get ( K k long timeout unit await ( ; cache ( k ) ; }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static void setupClasspath ( Path distributedClassPath Path intermediateClassPath Job job ) throws IOException { classpath (uidhadoopinternalclasspath ) ; ( classpathProperty classpathProperty (javaclasspath ) ; } jar classpath ( path ) ; Configuration job getConfiguration ( ) ; FileSystem distributed getFileSystem ( conf ) ; ( LocalFileSystem ; } ( jar jarFiles jarFile ( jar ) ; ( ( (jar Retry retry ( ( ) (Snapshot (SnapshotJarClassPath ( jarFile intermediateClassPath job ) ; }JarClassPath ( jarFile distributedClassPath intermediateClassPath job ) ; } ; }RetryPredicate ( )RE ) ; } new ( ) ; } } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public void eval ( String javascript ) throws Widget { WebElement element findElement ( ) ; WebDriver wd getGUID ( )WrappedDriver ( ) ; ( ( JavascriptExecutor ) ) executeScript ( javascript element ) ; } ( 2000 ; ; ( ( ( ( JavascriptExecutor ) ) executeScript ( javascript element ) ; ; } sleep ( 500 ) ; } } ; } } ( ( ) ; } } }<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
public addWrapField ( long instant amount ( instant FieldWrapped ( ( instant ) amountDiv ) ) ;<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected SendRequest makeUnsignedChannelContract ( Coin valueToMe ) Transaction Transaction ( wallet getParams ( ; valueToMe Coin ( ( ( valueToMe Legacy ( wallet getParams ( getClient ( ) ) ) ; }Input ( contract ( ) ) ; SendRequestTx ( tx ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
public static getUserNameFromToken ( authToken ) authToken ; } authToken split ( TOKEN ) ; }<CODESPLIT>Extracts the user name from token .
protected Class < resolveProxyClass ( String [ interfaceNames ) throws ClassNotFoundException { ClassLoader proxyClassLoader classLoader ; interfaces interface ; nonPublicInterface ; ( interface intf loadClass ( interface ) ; ( isPublic ( intf ( ClassLoader classLoader ( intf ) ; ( nonPublicInterface ( classLoader proxyClassLoader ) new IllegalAccess ( nonPublicInterface + + intf + declared nonpublic class loaders ) ; } } non ; proxyClassLoader classLoader ; } } interfaces ; } Proxy getProxyClass ( proxyClassLoader, interfaces ) ; } new ClassNotFoundException (, ) ; } }<CODESPLIT>Delegates class loading to the specified class loader .
public static double [ ] rowSums ( double [ ] [ ] data ) { data ; ( ; ; ) ( data ) ; } return x ; }<CODESPLIT>Returns the row sums for a matrix .
protected void rehash ( int newCapacity ) {Capacity table ;Table table ;Values values ; = state ;Table newCapacity ; newValues newCapacity ; newCapacity ; this lowWaterMark chooseLowWaterMark ( newCapacity this minLoadFactor ) ; this highWaterMark chooseHighWaterMark ( newCapacity thisLoadFactor ) ; tableTable ; this values = ; this state = newState ; this freeEntries = newCapacity this distinct ; (Capacity ; ; ( FULL ) elementTable ;Insertion ( element ) ;Table element ; =Values ; newState = FULL ; } } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public void add ( HpackHeaderField header ) { ( ; ( headerSize capacity clear ( ) ; ; } capacity headerSize remove ( ) ; }packHeader head ; ( ; ( headpack head ; } }<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private void fired ( Direction initial ) { ( LaunchListener listener listenersLauncher listener notify ( ) ; } ( Launch launch launchables Media media Med ( launch getMedia ( ; Feurable featurable ( media ; Launch launch featurable getFeature ( Launch ; ( launch getDel ( delayed ( DelayLaunch ( launch featurable launch ) ; } launch ( launch initial featurable launch ) ; } } LEngine featurable getFeature ( Ident ) destroy ( ) ; ; } } }<CODESPLIT>Called when fire is performed .
public static void init ( InvocationManager invmgr RootDObjectManager om ) {mgr ; ; inv ( Time ( TimeBase GLOBALGROUP ; }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
 UfsJournalFile createLogFile ( URI location start end UJournal ( location ) ;<CODESPLIT>Creates a journal log file .
protected Object writeReplace ( java.. ObjectStream CertificateRep ( type getEncoded ( ) ) ; } CertificateException javaSerializable (javasecuritycertCertificate + + + ( ; } }<CODESPLIT>Replace the Certificate to be serialized .
private Throwable extractThrowable ( Object arguments arguments? : extractThrowable ( arguments arguments ) ; }<CODESPLIT>Returns a throwable if the last argument is one .
public static List Map IBond IBond makeBondMapsOfAtomMaps ( IAtomContainer ac1 IAtomContainer ac2 List Map IAtom IAtom mappings ) { IBond IBondMaps IBond IBond ( ) ; ( IAtom IAtom mapping mappings bondMaps ( ( mapping ) ) ; } bondMaps ; }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
public LongConstant addLong ( long value ) { ( ) ; ( ; (entries ( ) ) ; ( ) ;Constant ( ) ; entry ; }<CODESPLIT>Adds a long constant .
public GeoPackage getOrOpen ( name File fileOpen ( ) ;<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
public static int extractVersionFromSchemaName ( String clzname ) { clz (V ) ; ( ; Integer valueOf ( clz substring ( idx + ) ) ; } ; } }<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private void drawShape ( Canvas canvas Paint paint Path path ShapeAppearanceModel shapeAppearanceModel RectF bounds ) shapeAppearanceRound corner shapepearance ( ( ; drawRound ( corner corner paint ; } draw ( paint ; } }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public AnalyzerJob getAnalyzerJob ( String descriptorName String analyzerName String analyzerInputName ) { AnJob candidates (jobs ) ;Candidates ( actualDescriptor getDescriptor ( ) ( ) ; descriptorName ( actualDescriptorName ) ; } ) ; ( analyzerCandidates ( actualAnalyzer ( ) ; analyzerName ( actualAnalyzerName ) ; } ) ; } ( analyzerInputCandidates ( InputColumn inputColumnentInputColumn ( ) ; ( inputColumn ; } analyzerInputName ( inputColumn getName ( ) ) ; } ) ; } ( candidates ( ) (alyzerJob candidates choose ) ; ; } ( candidates ( ) ) (Multiple AnalyzerJob choose ) ; } candidates iterator ( ) next ( ) ; }<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
 removeExecutedTrade ( BitExecutedTradeSymbol tradeSymbol BiConsumer BitExecutedTradeSymbol BitExecutedTrade BitCallbacksCallback ( tradeSymbol ;<CODESPLIT>Remove a executed trade callback
public HealthDto doPrimaryHealthCheck ( Health primaryHealthDependenciesDependencies ( ( ( HealthPrimary ( ( ; checkHealth ( primaryHealthDependencies ) ;<CODESPLIT>Performs the Primary Health Check .
public appfwxmlerrorpage get ( nitroservice service Exception appfwxml appfwxml ( ; appfwxmlerrorpage ( appfwxmlerrorpageresources ( ; ; }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private void setupClient ( AbstractHttpClient client ). client. addResponseInterceptor ( HttpResponseInterceptor ( ) void process ( HttpResponse HttpContext ) HttpException ( ) ; ( setAttribute ( ( ; } } ) ; }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private void quickSelect ( List < P points int splitAxis int medianNum ) {Points points ( ) ; (Points )Points ; indexesPoints ; } ( ;Points ; distance ( points ( ) splitAxis ) ; } QuickSelect selectIndex ( medianNumPoints indexes ) ; }<CODESPLIT>Uses quick - select to find the median value
public void writeHtml ( JspWriter pOut String pHtml ) throws IOException { (Html>& ) ; ( ( token ( ) ; ( token ( p (lt ) ; } ( token ( ) p ( ) ; } ( token ( "&" ) ) p ( ) ; } p ( token ) ; } } }<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
protected getNodeName ( Node node getLocalName ( ;? node getNodeName ( ) : ;<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
public void setExpiryDate ( IntRange ( from to ) month IntRange ( from to 9999 ) year )ExpiryEdit ( Date ( month year ; }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected void writeApplyDdl ( DdlWrite write ) { scriptApply ( drop dependenciesDropDependencies ( ) ( ) changes ( ) ( )ForeignKeys ( ) ( )HistoryView ( ) ( )HistoryTrigger ( ) ( ) ) ; }<CODESPLIT>Write the Apply DDL buffers to the writer .
protected static classEquals ( Class clz Class clz ) clz clz ( ) ; } clz clz clz getName ( ) ( clz getName ( ) ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
public void addSharedFunction ( ISource source ) ( ( source ( ; doAddShared ( source ; }<CODESPLIT>Add shared function by ISource
public setCommercePriceListService ( com liferay commerce price list service CommercePriceListService commercePriceListService ;<CODESPLIT>Sets the commerce price list remote service .
public HtmlTree MAIN ( HtmlTree HtmlTree ( HtmlTag ; htmlRole ( Role ; html ; }<CODESPLIT>Generates a MAIN tag with role attribute .
public static cachepolicylabelstats get ( nitroservice service label ) Exception cachepolicylabel cachepolicylabel ( ;label ( label ; cachepolicylabel ( cachepolicylabel objresource ( service ; ; }<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected void saveBroker ( File mapfile HashMapIDBroker broker ) RuntimeException broker isModified ( ; } ( ( ; broker writeTo ( ) ; ( ) ; } ( store component ID mapmapfile + mapfile + ) ; } }<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
public update ( Collection T values Data jdbcTemplate execute ( ConnectionCallback Object ( Object doInConnection ( Connection connection SQLException Data crud update ( ; ; ;<CODESPLIT>update the objects .
public MutableInt fromExternal ( IntSupplier s IntConsumer c Mutable ( ) getAsInt (Int ( ) ; Integer get (Int ( ) ; MutableInt set ( value accept ( ; ; ;<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
public void configure ( Config config ) (Reload configuration ;Write ( ) ; ; processAppPackages ( ) ; }Write ( ) ; } }<CODESPLIT>Replace the configuration of this instance directly .
protected void addPropertiesStart ( type ) ( Host ( ) Ip ( ) ) ; ( ( ) ) ;Property ( ( ) Start ( ) ) ; }<CODESPLIT>Add properties to properties map on transaction start
public List SequenceListType. Sequence getSequence ( ) sequence sequence Sequence Sequence ( ; } sequence ; }<CODESPLIT>Gets the value of the sequence property .
public MapBuilder addNumber ( fieldName include Supplier Number supplier ) include supplier ( ) ; map ( ( fieldName ) ) ; } } this ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public void disconnectCardOneConsumer ( ) { ( TraceComponent ( ) tc ( ) ) SibTr ( tcdisconnectCardConsumer ) ; clonedConsumerPoints ; ( consumerPoints clonedConsumerPoints consumerPoints ( ) ; } Simit Simit ( (CONSUMERCARDINLIMITREACHED getD ( ) getLocalUuid ( ) ( ) } ) ) ; (sibRemoteConsumerDispatcherdisconnectCardOneConsumer this ) ; SibTr exception ( tc ) ; ( ;ConsumerPoints ; ) DispatchableKey = ( DispatchableKey )ConsumerPoints ; ck notifyConsumerPointAbout ( ) ; } ( TraceComponent ( ) tc ( ) ) SibTr ( tcdisconnectCardConsumer ) ; }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
public isAdmin ( AuthContext ctx getUsername ( ) getUsername ( ) ( admin ) ( ) getPassword ( ) ( adminPass ) ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ( ) { ( settings aut (Runner ( ) ; ( runner + runner ( ( ; } ( OperaDefaults SERVER ; }ScopeServices ( ) ; ( runner runner startOper ( ) ; } services init ( ) ; servicesDebugger ( ) ; debuggerDriver ( ; window services getWindow ( ) ; exec servicesExec ( ) ; core services getCore ( ) ; cookie services getCookie ( ) ; mouse OperaMouse ( ; keyboard OperaKeyboard ( ; servicesConsoleLogger (Console ( Console ( logs ;Product ( ( ) getProduct ( ) ) ; ( (Agent ( ( preferences OperaPreferences ( services getPre ( ; preferences ( ) ( P Un Pop ) ; ( ( getProduct ( ( M preferences ( ) ( P Aut Form ) ; } } proxy OperaProxy ( ; proxy parse ( getProxy ( ) ) ; }<CODESPLIT>Initialize required Scope services .
public static String calculateMD5 ( String string ) { hash ; hash (MD ) digest ( string (UTF ) ) ; } NoSuchAlgorithmException ) new (Hh MD5, ) ; } ) new (Hh UTF supported, ) ; } hex ( hash ) ; ( byte hash ) ( & ) ; ( ) hex ( ) ; hex ( Integer toHexString ( ) ) ; } return hex ( ) ; }<CODESPLIT>Calculate the MD5 of a given String
protected static File findRawDir ( File dir ) { ( dir 20 raw findRaw ( dir ) ; ( rawDir ; } dir dir ( ) ; } ; }<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
public Object resolveVariable ( pName ) EL ELEL ( ;ELResolver ( ) ( pName ) ; }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected DependantValue createPrimaryKeyValue ( InFlightMetadataCollector mappings PersistentProperty property Collection collection Map persistentClasses ) { KeyValue ; Depend ; property collection getReferencePropertyName ( ; ( collection getOwner ( ) getIdentifier ( ) ; } ( KeyValue ) collection getOwner ( ) ( property ) ( ) ; } ( ( (GraDomainBinder creating depend table + getTable ( ( + ; key Depend (Building collection getCollection ( keyValue ; ( ) ; ( ) ; ( ) ; key ; }<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
protected AVariableExp getVarExp ( ILexToken PDefinition vardef PType type A ( ; ( ; var ;<CODESPLIT>Generate Var Exp with everything!
public static boolean isNullOrWhiteSpace ( String arg ) { ( ( ( ( ; } ; }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
public BlockInfo queryBlockByNumber ( blockNumber Proposal query ( getShuffPeers ( ( PeerRole LEDQUERY ) ;<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
 ( Getter getGetter ( Class type nameGetMap ( type ) ( ) ; }<CODESPLIT>Search getter for given class and property name .
public static decodeLZToString ( byte data dictionary ) ( decodeZ ( data )UTF ) ; } ( ) ; } }<CODESPLIT>Decode lz to string string .
public AirlineUpdateTemplateBuilder addAirlineUpdateTemplate ( introMessage locale pnNumber Update update AirTemplate ( intro locale pn ) ;<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void addModulesArgument ( String argument List < String arguments Module [ modules String aditionalpath String role ) throws MojoExecutionException { ( ) ; ( arguments ( argument ) ; ( aditionalpath ) ; } ( modules modules ( arguments ( argument arguments ( argument ) ; } ( modules Module module modules ; Artifact artifact ; ( )Artifacts projectArtifacts ( ) ; ( Artifact artArtifacts ( art ( ( module ( art getArtifact ( ( module getArtifact ( ) ( module getClassifier ( ) ) ( ( art getClassifier ( ) ) ) ( module ( )jar ) ( ( art ( ) ) ) ) artifact art ; } } ( artifact ) new MojoExecutionException ( artifact + module ( ) + referenced aspectj plugin + role + project dependencies ) ; } ( buf ( ) ) ( pathSeparator ) ; } ( artifact getFile ( ) getPath ( ) ) ; } } ( buf ( ) ) pathString ( ) ; arguments ( pathString ) ; ( ) (Adding + argument + + pathString ) ; } }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
public static extractAeroGearSenderInformation ( HttpServletRequest request ) (ogearsender ; hasValue ; } request getHeader (useragent ) ; }<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public Flux ServiceMessage requestMany ( ServiceMessage request Class responseType Address address ) Flux defer ( ( ) ( ; ( transporttransport ; transport ( address ) requestStream ( request ) ( message ServiceMessageCodec decodeData ( message responseType ) ) ( ) ; } ) ; }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
public void incrementalRestore ( File incrementalBackupFile ) throws FileNotFoundException IOException ClassNotFoundException RepositoryException { ObjectInputStream ; ObjectInputStream ( ( incrementalBackup ) ) ; ( TransactionChanges changes readExternal ( ) ; changes setSystem ( JCRRESTWORKSPACEINIT ) ; ChangesLogIterator changesLog getLogIterator ( ) ; (Log ( ( cli ( getEvent ( ExtendedEvent LOCK removeLog ( ) ; } } saveChangesLog ( changesLog ) ; } } ( ( ( + ( ) ) ; } } }<CODESPLIT>Perform incremental restore operation .
public Key Integer start ( ( ; consumers. put ( object Consumer Integer ( ; void consume ( ByteBuffer buffer ) ( ; } Integer finish ( ) count ; } } ) ; object ; }<CODESPLIT>Initializes a byte counter on this channel .
public static isElementPresent ( locator ) { ( locator ; ; HtmlElement locateElement ( locator ; } } ( flag ) ; flag ; }<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static void main ( String args [ ) throws Exception { ( lazyox ) ; Thread t1 Thread ( ) { void run ( ) { ( buffer delete ( ) ; ( ) ; (Middle ) ; sleep ( ) ; } } ( fall ) ; ( ) ; } } } ; Thread t2 new Thread ( ) { void run ( ) { sleep ( ) ; } } ( jump over ) ; ( ) ; } } ; start ( ) ; start ( ) ; join ( ) ; join ( ) ; ( buffer ) ; }<CODESPLIT>We have more input since wait started
protected double interpolate ( double boundA double boundB ) { alpha ; ( isNaN ( ) alpha SearchInterpol quadratic ( f ) ; } alpha SearchInterpol cubic ( f gp ) ; ( isNaN ( alphaNew ) ) alphaNew SearchInterpol quadratic (prev gprevprev fp ) ; } ; ( bound bound ) bound ; bound ; } bound ; bound ; } ( alphaNew ) alphaNew ; ( alphaNew u ) alphaNew u ; alphaNew ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private List < SemanticError check ( DataType dataType ) { (Checking semantic constraints datatype + dataType ) ; Semantic errors Semantic ( ) ; ( ) ; ( Constructor constructor dataType constructors (Checking semantic constraints constructor + constructor + datatype + dataType ) ; ( dataType constructors ( ) dataType ( constructor ) ) (Constructor data type + dataType + ) ; errors (ConstructorDataTypeConflict ( dataType name ) ) ; } ( constructor ( constructor ) ) ( constructors + constructor + data type + dataType + ) ; errors (DuplicateConstructor ( dataType name name ) ) ; } ( name ) ; } errors ( check ( dataType ) ) ; } return errors ; }<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
 ( } ) void registerDependency ( List additionalList GrailsPlugin plugin ) plugin ( added ( plugin ( ) ) ; additional ( plugin ) ;PluginDependencies ( additional plugin ) ; } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private JsonNode executeRequest ( HttpPost request ) throws IOException Groovark { execute ( request ) ; (LoggingRequest ( request ) ; }Payload CharStreams ( ( getEntity ( getContent ( Char ; jsonMapper readTree ( StringReader (Payload ) ) ; } Json Gark Server ( parse received data JSON + ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public Map < String T parseMap ( JsonParser jsonParser ) throws IOException { T T ( ) ; ( (OBJECT key json getText ( ) ; ( ) ; (Token ( ) VALUE ) map ( key ) ; } map ( key parse ( ) ) ; } } map ; }<CODESPLIT>Parse a map of objects from a JsonParser .
public DateFuncSup subtract ( DateSeper d date ( date ( ( ; ;<CODESPLIT>subtract date on supported date
private double radicalInverse ( long i ) { ( ) base ;ical ; inverse = ; ( inverse ( ) ( ) ;ical ; base ; } inverse ; }<CODESPLIT>Compute the radical inverse of i .
public static String getTempDir ( ) { ( FileUtil ( TEMPDIR ) tmpDir (javatmp ) ; ( StringUtil ( ) ) ( File ( ) ( ) )temp ; } = ; } }DIR = ; } } TEMPDIR ; }<CODESPLIT>Gets the default temp directory for the system .
public Accumulator Value Accumulator reduce ( List Value list Accumulator init ReduceClosure Accumulator Value f Acc ; ( Value accumulator eval ( accumulator ; accumulator ;<CODESPLIT>Applies a binary function between each element of the given list .
protected ProcessOutput executeProcess ( FaxJob faxJob String command FaxActionType faxActionType ) { (Unsupported ( ) ; } ; (WindowsPrefix ( ( windows ( ) ) ; ( windowsCommand ) ; ( ) ; (Command ) ;Command ( ) ; } Process process ProcessExecutor executeProcess (Command ) ; validateProcess ( process fax ) ; updateFaxJob ( faxJob process fax ) ; processOutput ; }<CODESPLIT>Executes the process and returns the output .
public ModelNode getConnector ( name ) Exception Address Address ( ( SUB SUBWEB CONNECT ; readResource ( address ) ; }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( CharsetDetector det, int [ ] commonChars ) { ( ) single = ;Byte ; common ; bad ; ; confidence ; iterated iterated ( ) ; detectBlock : ( reset ( ) ; nextChar ( det ) ; ) ; ( error ) bad ; } cv & ; ( cv ) single ; } ; ( commonChars ) ( binarySearch ( commonChars ( int ) cv ) ) ; } } } } ( bad bad 5 double ) detectBlock ; } } ( double 10 bad ) ( double total 10 ) confidence = ; } confidence = 10 ; } detectBlock ; } ( double 20 bad ) confidence = ; detectBlock ; } ( commonChars ) confidence = 30 + bad ; ( confidence 100 ) confidence = 100 ; } } maxVal log ( ( )ByteCount 4 ) ; scale = 90 max ; confidence ( ) ( log ( commonCount + ) scaleFactor + 10 ) ; confidence min ( confidence 100 ) ; } } return confidence ; }<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
public static void extract ( DMatrix src srcY0 srcY srcX0 srcX DMatrix dst ) { ( ( Reshape ) ) ( src src src src ) ; extract ( src src src src src ) ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public void resizeEip ( ResizeEipRequest request ) { (Bandwidth ( )Bandwidth ) ; check ( request getE ( ) ) ; ( ( getClientToken ( setClient (Client ( ) ) ; }Request internalRequest ( request Http PUT request getE ( ) ) ; internalRequest (resize ) ; internalRequest ( CLIENTTOKEN request getClientToken ( ) ) ; fillPayload ( internalRequest request ) ; invoke ( internalRequest ) ; }<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
private void useNextAddressAsNewContactSeedBroker ( ) { (ContactSeedBroker seedBrokerAddressesContactSeedBroker ; }Contact Net getCorrect ( seedBrokerContactBroker ; consumer SimpleConsumer (Contact (Contact ( so bufferSizeClientId ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private String unescape ( String value ) { ( ) ; ( ; value ( ) ; ) value ( ) ; ( ESCAPE ) code ( + + ) ; code ( code 16 ) ; ( reservedChars reservedChars code ) ( reservedChars code ) ; ; } new ServiceLocation ( escaped character + ESCAPE + codeString + at position + ( i + 1 ) + of + value, S PARSE ) ; } } ( ) ; } } return ( ) ; }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected HashMap readFile ( HashMap brMap ) throws IOException { ( ) ; exp ( ) ; files readObData (Map ) ;Data ; ; expData ; ( files (vData ( ) ( ) (v ) ; ( obSub obData expData ( ) ; ob ( ) ; copyItem (Data ( )ex ) ; copyItem (Data files ( )crid ) ; copyItem (Data files ( )local ) ; expData put ( jsonKey ) ;v (vKeyvSub (v ) ) ; exp ( expData ) ; } } id ( ) ; idNames ( ) ; removeIndex ( exp idNames ) ; put (eximents exp ) ; return ; }<CODESPLIT>DSSAT TFile Data input method for Controller using
public FixedStringSearchInterpolator createInterpolator ( MojoParameters params filter ) delimitersDelimit ( filter ; delimitersSearchInterpol ( ) ; } DockerAssembly DockerAssembly ( ; AssemblyInterpol fullInterpol ( params getProject ( ) DefaultAssemblyReader createProjectInterpol ( params getProject ( ) )ExpressionMarkers ( ) configSource )ExpressionMarkers ( ) ; }<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public static isPartitionCleanupInProgress ( ZooKeeper zk ) throws Keeper { children zk getChildren ( VoltZK leadinit ) ; ZK Children childrenCallbacks ( ) ; ( children ZK Children callback ZK Children ( ) ; zk getChildren ( ZK joinZK ( VoltZK leadinit ) callback ) ; childrenCallbacks ( callback ) ; } ( ZKCallback childrenCallbacks ( callback ( ( ; } } ; }<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private byte [ ] unifyLData ( final CEMI ldata final boolean emptySrc final List < Integer types ) { data ; (data CEMDataEx ) CEMData ( ( CEMData )data ) ; AddInfo additionalInfo additionalInfo ( ) ; ( additionalInfo ( Iterator AddInfo additionalInfo ( ; ( ; AddInfo ( ) ; ( types ( ( ) ) ) (remove L additional ) ; remove ( ) ; } } } } datadata ( ) ; = ; = ; ( empty ) = ; data data = ; } data ; }<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public static < T Number > int [ ] asArray ( final T... array ) { array ; ( ; ; ) b array ( ) ; } return b ; }<CODESPLIT>Convert any number class to array of integer .
synchronized void setActiveChunkHandle ( SegmentHandle handle ( handle handle ( )Active SegmentChunk handle readonly ) ; SegmentChunkChunk ( ) ; ( Active SegmentChunk handle SegmentChunks ) ; ( handle handle ( ) ( ( ) )Active SegmentChunk handle SegmentChunk ) ; this activeChunk handle ; }<CODESPLIT>Sets the Active SegmentChunk handle .
public String getEmptyValue ( ) { ( TimexInterval featOkTst ( ( TimexInterval jcasType casFeat jcasType jcas throwFeatMissing (deunutypesheTimexInterval ; jcasType llcas ll ( addr ( ( Timex3IntervalType ) jcasType ) casFeatCodeempty ) ; }<CODESPLIT>getter for emptyValue - gets
public static AccountInfo adaptAccountInfo ( BitstampBalance bitstampBalance String userName ) { ( ) ; ( knowchange bitstamp dto account BitstampBalance bitstampBalance getB (change ( Currency ( ( ) ( ) ) ( ) getAvailable ( )Reserved ( ) ( ) ( getAvailable ( ) ) (Reserved ( ) ) ) ; (changeBalance ) ; } AccountInfo ( userName bitstampBalance getF ( ) Wallet ( ) ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
public void afterConnectionClosed ( WebSocketSession session CloseStatus status (WebSocket closed session ( ; }<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public static String trimLastPathSection ( String path ) { sections path ( ) ; ( ) ; ( ; sections ; ) ( sections ) ( ) ; } return newPath ( ) ; }<CODESPLIT>Removes the last part of a file path .
public Style red ( ) Style style Style ( ; style color P ( P MATER ; style ; }<CODESPLIT>Default material red transparent style for SuperToasts .
public ManagedObjectContext createContext ( ) Bean bean ; EDescriptor T ejbDescriptor getEDescriptor ( ) ; ejbDescriptorDr bean getBean ( ) ; } W bean getBean ( ) ; WCre T creation beanCre ( bean ) ; ManagedObject CManaged ( ; managedObjectContext ; }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
public void deleteOperation ( name ) { ( ( ( ) ; deleteOperation ( ) ; }<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
public isMember ( x ( currentState Bits UNKNOWN ; x ( bits word ) ( bits x word & ( ( x & word ) ) ) ; }<CODESPLIT>Is x an element of this set?
Registration addSearchFinish ( SearchFinishEvent SearchFinish handler addHandler ( SearchEvent ;<CODESPLIT>This handler will be triggered when search is finish
public void setForeignBusSendAllowed ( sendAllowed ) { ( ( tc ( SibTr ( tcForeignBusSend ( send ) ) ; }sendTargetForeignBus ( send ) ; ( aliasesTargetThisDest ( aliases Iterator aliasesTargetDest ( ) ; ( (AliasDestinationHandler abstractAliasDestinationHandler (AliasDestinationHandler ) ( ) ;DestinationHandlerForeignBus ( send ) ; } } } ( ( tc ( SibTr ( tcForeignBusSend ) ; } }<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
public void processingInstruction ( target data ) SAXException ( document document processing ( ; }<CODESPLIT>Adapt a SAX2 processing instruction event .
public static Integer getFileSizeOnFTPServer ( String hostName Integer port String userName String password, String filePath ) { ; reply executeCommandFTPServer ( hostName port userName password filePath ) ; ( ( ) ) new ( String format ( get size of file reply from FTP server, filePath, replyString ) ) ; } ( split ( ) ( ) ) ; } return ; }<CODESPLIT>Get size of the FTP file .
public static base_ enable ( nitro_service client, String trapname [ ] ) throws Exception { base ; ( trap trap ) snmpalarm enablerources snmpalarm trap ; ( ; trap ; ) enablerources snmpalarm ( ) ; enablerources trap = trap ; } perform ( client enablerourcesenable ) ; } return ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
public void ordered ( Consumer T action TopSorter TopSorter ( ; sorter ordered ( ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public static SeqServerGroup parse ( String asg ) { ( ) ; ( ) ; ( ) ; (NSequence (N ) )N as ( ) ; } return SeqServerGroup ( asg, d, d, dN ) ; }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
private static int getMapCount ( int srcCount int numNodes ) {Maps ( ( OP ;Maps (MapsNodesMAPNODE ) ; max ( numMaps ) ; }<CODESPLIT>Calculate how many maps to run .
protected void channelRead0 ( ChannelHandlerContext ctx FullBinaryMemcacheResponse msg ) throws Exception { ( getStatus ( SUCCESSPromise ( ; pipeline ( ) remove ( this ) ; fireChannelActive ( ) ;Promise ( (Authentication on Select Bucket ;Promise ( (Bucket on Select Bucket ; : originalPromiseFailure ( (Unhandled select bucket ( ) ) ) ; } }<CODESPLIT>Handles incoming Select bucket responses .
private DiceNotationExpression unwrap ( DiceNotationExpression expression DNotation ; expression ExpressionWrapper ( (Wrapper expressionWrapped ( ; expression ; ; }<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public static float [ ] checkArrayElementsInRange ( float [ ] value float lower float upper String valueName ) { ( + ) ; ( ; value ; ; ( isNaN ( ) ) new ( value + + + NaN ) ; } ( lower ) new ( String format ( rangeff ( low, value,, lower, ) ) ; } ( upper ) new ( String format ( of range offf ( high, value,, lower, ) ) ; } } value ; }<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
public void copy ( InputStream inputStream OutputStream outputStream ( outputStream ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
private static Collection < Tuple getTuples ( List < VarDef varDefs int varStart int varEnd int tupleSize ) { Collection Tuple tuples Tuple ( ) ; ( VarDefDefs ( ) ; Iterator Var values getValidValues ( ) ; ( values ( new ( complete tuples valid values defined var +Var ) ; } Collection TupleTuples tuple :uples ( tuple ) ; ( subTuples ( values ( tuples ( Tuple ( VarBinding ( values ( ) ) ) ) ; } } ( subTuples ( ) ( values ( VarBindingBinding VarBinding ( values ( ) ) ; ( Tuple subTuple subTuples TupleTuple Tuple (Binding ) (Tuple ) ; (TupleCompatible ( ) ) tuples (Tuple ) ; } } } } } tuples ; }<CODESPLIT>Returns all valid tuples of values for the given input variables .
public V get ( K key ) { hash hash ( key ) ; slot ( hash ) ; ( K V table slot ; ( hashCode hash key ( key ) ) entry value ; } } ; }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
public validSecondFactor ( secret number ) ( secret Required ( ; ( Required T ( ; Totp verifiedTotp ( secret number ) ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected void updateOutgoingEdgesStateDL ( int currS int currL int prevS, int prevL, Emissions emission ) { updateOutgoingEdges ( States D States D TransDL em ) ; updateOutgoingEdges ( States D States S TransDL em ) ; }<CODESPLIT>Enumerates the possible transitions into state DL .
public void setPrefix ( String key String prefix ) { fieldname ( key ; Pdf ( fieldname ) ; ( ( prefix ; PdfDictionary dict PdfDictionary (LECTIONSUBITEM ; dict ( D ) ; dict ( P Pdf ( Pdf TEXT ) ) ; ( fieldname dict ) ; }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected AbstractExpression replaceExpressionsWithPve ( AbstractExpression expr ) { ( expr ) ; ( expr TupleExpression ) Parameter ( ) ; ParameterExpressionve ParameterExpression ( expr ) ;parameterTMap ( expr ) ; pve ; } ( expr AggregateExpression ) Parameter ( ) ; ParameterExpressionve ParameterExpression ( expr ) ; TupleExpression Expression getTupleExpressions ( expr ) ; (parentStmt ) ; ( TupleExpressionveStmt ( ) ; ( origparentStmt orig ) new Pl (Subqueries support aggregation of parent statement columns ) ; } }parameterTMap put ( expr ) ; pve ; } ( expr ( ) ) ( replaceExpressionsP ( ( ) ) ) ; } ( expr ( ) ) ( replaceExpressionsP ( ( ) ) ) ; } ( expr getArgs ( ) ) AbstractExpression ( ) ; ( AbstractExpression argument expr getArgs ( (Expressionsve ( argument ) ) ; } expr ( ) ; } expr ; }<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private static addCallback ( String applicationId DelayedCallback callback ) { ; Delay BACKLOG ( applicationId ; ( Delay ( ) ; BACK put ( applicationId list ) ; ; } ( callback ) ; isFirst ; }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
public static byte gunzipBytes ( byte compressedBytes ) throws { ( ( ( compressed ; Infl dos Infl ( ; write ( compressed ) ; ( ) ; toByteArray ( ) ; }<CODESPLIT>to avoid linking all that jazz into the client code
public TupleValueExpression getOutputExpression ( index ) SchemaColumn schema getSchemaColumn ( ; Tupleve Tuple ( getTable ( getTable ( schema ( schemaAlias ( ;ve ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
