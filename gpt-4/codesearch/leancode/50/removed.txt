public InputStream getResourceAsStream ( String resourceName ) { InputStream ; getReal ( resourceName ) ; (System ( ) ) FileInputStream ( ) ; } ( ) ( resource ) ; } } ( ) super getResourceAsStream ( realPath ) ; } return is ; }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>0
public static void register ( Binder binder, Class clazz, Class Annotation annotation ) { ( ( }<CODESPLIT>Registers a class / annotation combination to instantiate eagerly . Classes mentioned here will be pulled out of the injector with an injector . getInstance () call when the lifecycle is created .<CODESPLIT>1
public static br_restoreconfig [ ] restoreconfig ( nitro_service client, br_restoreconfig [ ] resources ) { ( resources ( ( resources ( (restore resources (restore return ( (restoreconfig ) performbulkrequest (, resources,restoreconfig ) ) ; }<CODESPLIT><pre > Use this operation to restore config from file on Repeater Instances . < / pre ><CODESPLIT>0
public Page findPageParameter ( Object paramObj ) { ; ( page = ( Page ) paramObj ; } ( Map = ( Map ) paramObj ; ( ( ( ) page = ( Page ) o ; } } } ( ) ; } return ; }<CODESPLIT>从传递的参数中找Page对象，并返回<CODESPLIT>1
public static InputStream getResourceAsStream ( Class clazz, String fn ) throws IOException { clazz getResourceAsStream ( ; ( (resource relative ) } return unpackStream ( stream, fn ) ; }<CODESPLIT>Get an input stream to read the raw contents of the given resource remember to close it : )<CODESPLIT>1
public static T, R Supplier R compose ( Function T, R f, Supplier T g ) { ( supplier a function ; ( function with a supplier ; return ( ) ( g ( ) ) ; }<CODESPLIT>Composes a function with a ternary function .<CODESPLIT>0
public void getChars ( int srcBegin, int srcEnd, char dst [ ], int dstBegin ) {Begin ; ( ) dest ( ; } }<CODESPLIT>Copies characters from this string into the destination character array .<CODESPLIT>1
public getRedirectURL ( context, viewId, Map, List parameters, booleanViewParams ) ( }<CODESPLIT><p class = changed_added_2_0 > Return a JSF action URL derived from the <code > viewId< / code > argument that is suitable to be used by the { @link NavigationHandler } to issue a redirect request to the URL using a NonFaces request . Compliant implementations must implement this method as specified in section JSF . 7 . 6 . 2 . The default implementation simply calls through to { @link #getActionURL } passing the arguments <code > context< / code > and <code > viewId< / code > . < / p ><CODESPLIT>1
@ Override public EClass getServerInfo ( ) { (EClass )EClass ( EClass ( Store ( ( 45 ; } return serverInfoEClass ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>0
public void addMaybeStartHandler ( Handler handler, Stage stage ) throws Exception { ( handlers ( started ( ( ( handler start ( ; } } handlers ( ( ; } }<CODESPLIT>This will materialize the entire sequence in memory . Use at your own risk .<CODESPLIT>0
@ ( {unusedWeAccess } ) public static CleverTapAPI instanceWithConfig ( Context context, NonNull CleverTapInstanceConfig config ) { ( )CleConfig null ) return null ; } ( instances ) instances ( ) ; } instances ( ( ; ( ) instanceTap ( context ) ; instances ( ( ; } return instance ; }<CODESPLIT>Lifecycle<CODESPLIT>0
public ElemTemplate getCurrentTemplate ( ) {Template ( ) ; ( ( ( (TEMPLATE elem elem getParent ( ) ; } return (Template ) elem ; }<CODESPLIT>This method retrieves the xsl : template that is in effect which may be a matched template or a named template .<CODESPLIT>1
public static boolean normalize ( IAtomContainer ac, Document doc ) throws InvalidSmilesException, CDKException { nl doc (replaceset ) ; Smiles = new Smiles ( ac getBuilder ( ) ) ; change = ; ( ( ) ) child ( ) nl ( ) ; replaces child (replace ) ; replacement child (replacement ) ; replacementstring = replacement item ( ) ( ) ( ) ; ( replacementstring ( ) replacementstring ( ) ) replacementstring replacement ( ) getFirstChild ( ) getNextSibling ( ) ( ) ; } replacementStructure sp parseSmiles ( replacementstring ) ; ( ( ) ) replace ( ) replaces ( ) ; replaces = replace ( ) ( ) ; ( ( ) ( ) ) replacestring replace getFirstChild ( ) getNextSibling ( ) ( ) ; } replaceStructure sp parseSmiles ( replacestring ) ;Map = null ; Universal universal = new Universal ( ) ; ( (IsMap ( replace ) ) )Map = universal makeMapBondsMap ( ac replaceStructure ) ;Map ( ) ; ( ( ) )Mapmap ( ) ;bond (map ( ) ) ; replacebond replacementStructure (map ( ) ) ; setOrder ( getOrder ( ) ) ; change = ; }Map ( ) ; ( ( ) )Mapmap ( ) ;atom (map ( ) ) ; replaceatom replacementStructure (map ( ) ) ;Charge ( getFormCharge ( ) ) ; change = ; } } } } return ( change ) ; }<CODESPLIT>The method takes an XML files like the following : <br > &lt ; replace - set&gt ; <br > &lt ; replace&gt ; O = N = O&lt ; / replace&gt ; <br > &lt ; replacement&gt ; [ O - ] [ N + ] = O&lt ; / replacement&gt ; <br > &lt ; / replace - set&gt ; <br > All parts in ac which are the same as replace will be changed according to replacement . Currently the following changes are done : BondOrder FormalCharge . For detection of fragments like replace we rely on UniversalIsomorphismTester . doc may contain several replace - sets and a replace - set may contain several replace fragments which will all be normalized according to replacement .<CODESPLIT>1
protected void writeTraceeContextToMessage ( Message message ) throws JMSException { ( backend ( ) backend ( ) should ( Async ) ) ( ) filterDenied ( copy ( ) Async ) ; contextSerialization render ( ) ; message ( contextAsString ) ; } }<CODESPLIT>Writes the current TraceeContext to the given javaee message . This method is idempotent .<CODESPLIT>1
public void product ( IntLongVector other ) { ( ) elements start *= other ( ; } }<CODESPLIT>/ * This method is used to get PHSFellowshipSupplemental12 XMLObject and set the data to it from DevelopmentProposal data .<CODESPLIT>0
public static SignatureValidationFilter buildSignatureValidationFilter ( final Resource signatureResourceLocation ) throws Exception { (Exist ( ) ) (Resource cannot be located signatureResourceLocation ) ; return null ; } val ( ; ( RSA ( ) ; ( ( ) ) ; ( ( ) ) ; ( Inline ( ) ) ; ( to resolve credentials from signatureResourceLocation ) ; val buildForSignatureValidation ( ) ; info ( resolved credentials from signatureResourceLocation ) ; (Configuring credential resolver for key signature trust engine @ ( ) ( ) ) ; val ( ) ; val ( ) ; val ( ) ; (Adding validation filter based engine ) ; val signatureValidationValidation ( ) ; signatureValidation setDefaultCriteria (ValidationCriteriaSetFactory ( ) getObject ( ) ) ; (Added metadata SignatureValidationFilter with signature from signatureResourceLocation ) ; return signatureValidationFilter ; }<CODESPLIT>Build signature validation filter if needed .<CODESPLIT>1
public static URL makeURL ( String specification ) throws MalformedURLException {retrie specification specification ) ; ( (classpathclasspath ) return URL ( null, specification, ClassPathURLStreamHandler ( ) ) ; } ) return URL ( specification ) ; }<CODESPLIT>Returns an URL object for the given URL specification .<CODESPLIT>1
public final void debug ( Object message, Throwable t ) { ( ( ) ) message ) } }<CODESPLIT><p > Log a message with debug log level . < / p ><CODESPLIT>1
protected final String toLocaleStr ( Locale locale ) { ( ) return "" ; } language locale getLanguage ( ) ; locale getCountry ( ) ; locale ( ) ; ( ) return "" ; } new ( ) ; ( ) ( language ) ( ) ( ) ( ) ( ) ; } ( ) ( language ) ( ) ( ) ; } ( language ) ; } return sb toString ( ) ; }<CODESPLIT>Convert locale to string with language_country [ _variant ]<CODESPLIT>1
public ListFacetAttributesResult withAttributes ( FacetAttribute... attributes ) { ( attributes setAttributes ( java ( attributes ; } ( attributes attributes add ( } return this ; }<CODESPLIT><p > Associates an Identity and Access Management ( IAM ) role from an Neptune DB cluster . < / p ><CODESPLIT>0
public AutofHelper addOnTextSizeChangeListener (TextSizeChangeListener listener ) { ( ( ; }Listeners add ( return this ; }<CODESPLIT>Adds an {<CODESPLIT>1
public void mergeVertices ( Set < VertexType > vertexSet, GraphType g, VertexCombinator < VertexType > combinator, GraphToolkit < GraphType, EdgeType, VertexType > toolkit ) { ( ( ) ) return ; }Set new ( ) ; ( ( ) ( ) ) ( ) ; ( ( ( ) ) ( ( ) ) )Set add ( ) ; } } composite combinator combineVertices ( vertexSet ) ; ( ) source vertexSet contains ( ( ) ) composite : ( ) ; target vertexSet contains ( ( ) ) composite : ( ) ; ( ( ) ( ) ) } ( lookup ( source ) ) } composite g create ( source target ) ; copy ( composite ) ; } ( ) g remove (Set ) ; } }<CODESPLIT>Resolve an annotation into AnnotationValues representing any type qualifier ( s ) the annotation resolves to . Detects annotations which are directly marked as TypeQualifier annotations and also resolves the use of TypeQualifierNickname annotations .<CODESPLIT>0
@ Override public void visit ( Node node ) throws ELException { ( ) AstFunction funcNode = ( AstFunction ) node ; null ; ( this fnMapper ) fnMapper resolveFunction ( func getPrefix ( ) func ( ) ) ; } ( this varMapper func getPrefix ( ) ( ) ) this varMapper resolveVariable ( func ( ) ) ; return ; } ( this fnMapper ) EL (Factory ( ) ) ; } ( ) EL (Factory (method ( ) ) ) ; } methodParameter getParameterTypes ( ) ; inputParameter node jjGetChild ( ) jjGetChildren ( ) ; (VarArgs ( ) inputVarArgs ( ) input method ) EL (Factory (paramcount ( ) methodGetChild ( )GetChildren ( ) ) ) ; } } (Identifier this varMapper ) variable ( ( ) node ) getImage ( ) ; this varMapper resolveVariable ( variable ) ; } }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public Observable getJobDetailsAsync ( String teamName, String jobId ) { return getJobDetailsWithServiceResponseAsync ( ( ServiceResponse ( Override public ( ServiceResponse ) { return body ( } } }<CODESPLIT>Get the Job Details for a Job Id .<CODESPLIT>0
private void checkIndices ( int row, int col ) { ( rows ) ArrayIndexOutOfBoundsException (row ) ; ( cols ) ArrayIndexOutOfBoundsException ( ) ; }<CODESPLIT>Check that the indices of a requested cell are within bounds .<CODESPLIT>1
private void createParentChildRelationships ( Database db, HashMap < String, Account > descriptionMap, HashMap < String, ArrayList < String > > seqMap ) throws Exception { parentIdStack = new ( ) ; ( seqMap ( ROOTURI ) ) (File root account ROOTURI ) ; parentIdStack add ( Account ROOTURI ) ; ( parentIdStack ( ) ) parentId = parentIdStack ( ) ; Account parent = descriptionMap ( ) ; parentIdStack remove ( ) ; ( parentId ( ROOTURI ) ) ( parent ) (ById ( parentId ) ) Account parentParent db findParent ( parent ) ; ( parentParent ) (Node parent ) ; parentAccount = null ; } } } (Node matching RDF ) ; } } parent db getRoot ( ) ; } ( parent ) ( seqMap ( ) ) Account = descriptionMap ( ) ; ( ) ( parentChild ( ) ) parent getChildren ( ) add ( child ) ; ( seqMap ( ( ) ) ) parentIdStack add ( child ) ; childFolder ( ) ; } } (Duplicate child child parent parentAccount ( ) ) ; } } ( find RDF child ) ; } } } } }<CODESPLIT><p > Specifies the type of the array components so that the adequate array functions can be offered . < / p ><CODESPLIT>0
private DecimalFormat getNumberFormatter ( TransformerImpl transformer, int contextNode ) throws TransformerException { locale ( ) ( transformer, context ) clone ( ) ; = null ;Group = ( nullSeparator )Separator evaluate ( ( ) context this ) null ; ( (Group ) (groupingSeparatoravSimple ( ) ) (Group ( ) ) ) ( ) ( this XSLTErrorResourcesG new { Constants.NAME_NAME m_Separator_avt. ( ) } ) ; }Group = ( null ) evaluate (Path ( ) context this ) null ; ( (Group ) (Group ) (Group ( ) ) ) formatter ( DecimalFormat ) getNumberInstance ( locale ) ; formatterGrouping ( (Group ) ( ) ) ; = formatterDecimalFormat ( ) ;GroupingSeparator ( digitGroup ( ) ) ; formatter ( ) ; formatterGroupingUsed ( ) ; } ( ) formatterGroupingUsed ( false ) ; } } return formatter ; }<CODESPLIT>Get the number formatter to be used the format the numbers<CODESPLIT>1
public static List > toModels (Soap [ ] soapModels ) { (Models ) return null ; } models ( soapModels ; (SoapModels models add ( ( ; } return models ; }<CODESPLIT>Converts the soap model instances into normal model instances .<CODESPLIT>1
public static Double toNullableDouble ( Object value ) { ( return ( return ( ( ( ( ( return ( ) ( ( ) ) ( ) ( ) return ( ) ( ( ) ) ( ) ( ) return ( boolean ) ( ) return ( ) ( ( ) ) ( ) return ( ) ( ( ) ) ( ) return ( ) ( ( ) ) ( ) return ( ) ( ( ) ) ( ) return ( ) ( ) return Double parseDouble ( ( ) value ) ; } ( ) return null ; } return null ; }<CODESPLIT>Converts value into doubles or returns default value when conversion is not possible .<CODESPLIT>0
@ Override public HttpCommandProcessor getCommandProcessor ( Protocol protocol ) { command commandNames ( protocol ) ; ( command ) ( HTTP Command protocol protocol ) ; }Command command (CommandProcessor ) applicationContext getBean ( commandProcessor ) ; ( command ) ( HTTP Command commandProcessor ) ; } return commandProcessor ; }<CODESPLIT>Returns the command processor assocated with the supplied protocol<CODESPLIT>1
public String getGeneratorParameters ( ) { result = this getCommonConstructorParameters ( ) ; "," ;this ( )From ; "," ;this ( ) ; "," ; this ( ) getFClassName ( ) "." this ( )In ; "," ; this future ( ) ; "," ; thisInclusive ( ) ; "," ; this ( ) getFClassName ( ) "." this ( )Default ; "," ; thisProcessing ( ) ; "," ; thisNull ( ) ; return result ; }<CODESPLIT>/ * String attributeName String dataClassName String busClassName boolean isNullable boolean hasBusDate RelatedFinder relatedFinder Map<String Object > properties boolean transactional boolean isOptimistic<CODESPLIT>1
@ Override public boolean setActive ( ) { activated isActive ( ; ( activated ) locator ( ( ) ( ) ) ( getTitle ( ) ) ; title ) ) Tab ) ; activated title click ( ) ; } ( activated ) (setActive ( ) ) ; } return activated ; }<CODESPLIT>example new DataField () . setDate ( 19 05 2013 )<CODESPLIT>0
@ Override public StringConverter findConverter ( Class cls ) { ( return ByteArrayString } return null }<CODESPLIT>Creates a new conversion manager including the extended standard set of converters . <p > The returned converter is a new instance that includes additional converters : <ul > <li > JDK converters <li > { @link NumericArrayStringConverterFactory } <li > { @link NumericObjectArrayStringConverterFactory } <li > { @link CharObjectArrayStringConverterFactory } <li > { @link ByteObjectArrayStringConverterFactory } <li > { @link BooleanArrayStringConverterFactory } <li > { @link BooleanObjectArrayStringConverterFactory } < / ul > <p > The convert instance is mutable in a thread - safe manner . Converters may be altered at any time including the JDK converters . It is strongly recommended to only alter the converters before performing actual conversions .<CODESPLIT>0
@ Override public DisassociateSResources disSResources ( DisassociateSResources request ) beforeClientExecution executeDis ( request<CODESPLIT><p > Removes specified S3 resources from being monitored by Amazon Macie . If memberAccountId isn t specified the action removes specified S3 resources from Macie for the current master account . If memberAccountId is specified the action removes specified S3 resources from Macie for the specified member account . < / p ><CODESPLIT>1
public static double cdf ( double val, double k, double lambda, double theta ) { return ( ) ( exp ( pow ( ( ) ) ) ) }<CODESPLIT>CDF of Weibull distribution<CODESPLIT>1
public static void equalizeLocalCol ( GrayU16 input, int radius, int startX, GrayU16 output, IWorkArrays workArrays ) { radius ; area ; workArrays ( ) ; histogram workArrays pop ( ) ; transform workArrays pop ( ) ; ; ; ( hist input ) hist1 = input. width ; hist = hist1 - width ; } localHistogram ( input, hist0,, hist,, histogram ) ; sum ; ( histogram ) transform sum histogram ; } indexIn = input radius input ; indexOut = output radius output ; ( ) inputValue = input data indexIn ; output data indexOut ( short ) ( ( transform maxValue ) area ) ; } ( input ) indexIn = input. startIndex ( y - radius - 1 ) * input. stride ; ( hist hist ) histogram input dataIn ; }In input ; ( hist hist ) histogram input dataIn ; } sum = 0 ; ( histogram ) transform sum histogram ; } indexIn = input. startIndex y * input. stride startX ; indexOut = output. startIndex y * output. stride startX ; ( ) inputValue = input data indexIn ; output data indexOut ( short ) ( ( transform maxValue ) area ) ; } } workArrays recycle ( histogram ) ; workArrays recycle ( transform ) ; }<CODESPLIT>Local equalization along a row . Image must be at least the histogram s width ( 2 * r + 1 ) in width and height .<CODESPLIT>0
public static int validArrayIndex ( int index, int arrayLength, String message ) { ( ( } }<CODESPLIT>Throws an { @link IndexOutOfBoundsException } if { @code sliceFrom } or { @code sliceLength } is negative or the sum of both is greater than { @code arrayLength } . Note that this means that a slice of length zero starting at array length is a valid slice .<CODESPLIT>0
public staticConnectorSync create ( String host, port ) create ( }<CODESPLIT>ファイルが1904年始まりの設定かどうか。<CODESPLIT>0
private T INode T addNode ( String src, T child, long childDiskspace, boolean inheritPermission ) throws Quota { components ( ; byte path components components length ; path ; ( ; components ; ( ; ( ; return addChild ( in, in -, child, childDiskspace, inheritPermission ) ; } writeUnlock ( ; } }<CODESPLIT>Add a node child to the namespace . The full path name of the node is src . childDiskspace should be - 1 if unknown . QuotaExceededException is thrown if it violates quota limit<CODESPLIT>1
public Vector4 add ( float x, float, float z, float w ) add ( (<CODESPLIT>Increment the components of this vector by the given values .<CODESPLIT>1
public final DetectLanguageResponse detectLanguage ( String parent, String model, String mimeType ) { ( ( validate (detect } DetectRequest request DetectRequest newBuilder setParent setModel mimeType build ; return detectLanguage ( request ) ; }<CODESPLIT>Formats a string containing the fully - qualified path to represent a location resource .<CODESPLIT>0
protected void commonSetup ( ZMatrixRMaj A ) { setMaxSize ( QR }<CODESPLIT><p > Computes the householder vector u for the first column of submatrix j . Note this is a specialized householder for this problem . There is some protection against overflow and underflow . < / p > <p > Q = I - &gamma ; uu<sup > H< / sup > < / p > <p > This function finds the values of u and &gamma ; . < / p ><CODESPLIT>0
@ Override public EsaResourceWritable parseFileToResource ( File assetFile, File metadataFile, String contentUrl ) throws RepositoryException {MetadataMetadata explode ( assetFile metadataFile ) ; ProvisioningFeatureDefinition feature ; featureSubsystemImpl construct ( assetFile ) ; } ( ) Repository ( ( ) ) ; }ResourceWritable resourceResource createEs ( null ) ; feature ( ) ; version feature getVersion ( ) toString ( ) ; subsystem feature getHeader (Subsystem ) ; shortName featurebm ( ) ; metadata ( ) ; name ; ( metadata metadata ( ) ) name = metadataName ; } ( ( ) ) name = subsystemName ; } ( ( ) ) name = shortName ; } name = symbolicName ; } setName ( name ) ; ; overridden ; ( )Metadata getShort ( ) ; setDescription ( ( ) ) ;URL ( (URL ) ) ; overriddenDisplayPolicyMetadata ( ) ; } (Description ) feature getHeader (Subsystem ) ; }Short ( ) ; ( ) ; processIcons ( assetFile feature resource ) ; provider feature getHeader (SubsystemVendor ) ; ( ( ) )ProviderName ( provider ) ; ( ( ) ) ( ) ; } } (Vendor set manifest headers ) ; } ( symbolic ) ; ( (Applies ) )Applies ( (Applies ) ) ; }Applies ( (Applies ) ) ; } Visibility visibility ; DisplayPolicy displayPolicy ; DisplayPolicy webDisplayPolicy ; ( feature ( featureVisibility ( ) ) ) visibility = Visibility. PUBLIC ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. VISIBLE ; } ( ibm feature ( featureVisibility ( ) ) ) visibility = Visibility. PROTECTED ; displayPolicy = DisplayPolicy. H ; webDisplayPolicy = DisplayPolicy. H ; } ( ibm feature ( featureVisibility ( ) ) ) visibility = Visibility. INSTALL ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. H ; } visibility = Visibility. PRIVATE ; displayPolicy = DisplayPolicy. H ; webDisplayPolicy = DisplayPolicy. H ; } setVisibility ( visibility ) ; ( feature isAuto ( ) )Provision ( (Provision ) ) ; IB feature getHeader ( ) ; InstallPolicy installPolicy ; ( (whensat ( ) ) ) installPolicy = InstallPolicy. WHEN_SATISED ; } installPolicy = InstallPolicy. MANUAL ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. VISIBLE ; } ( ) ; } ( isBeta (Applies ( ) ) ) (IDDEN ) ; } ( ) ; } ( overridden ) displayPolicyPolicy ( overriddenDisplayPolicy ) ; } ( ) ; required feature getHeader ( ) ; ( required required ( ) ) fixes required ( "," ) ; ( fixes ) fix fix trim ( ) ; ( fix ( ) ) resource addRequireFix ( fix ) ; } } }ShortName ( shortName ) ; requiredFeatures featureCon ( FEATURE ) ; ( required ) tolates featureates ( ) ; required feature ( ) ; resource addRequireWithTol ( required tol ) ; } superdedBy feature getSuperdedBy ( ) ; ( superBy superBy ( ) ( ) ) superdedByArray superdedBy ( "," ) ; ( ) ( ( ) ) ( ( ) ) ; resource addSuperdedByOptional ( ) ; } resource addSuperdedBy ( ) ; } } } ( ) attachLicense (Metadata resource ) ; } setJavaRequirements ( assetFile resource ) ; attachment ; addContent ( resource assetFile attachmentMetadata contentUrl ) ; processLA ( assetFile resource feature ) ; } ( ) Repository ( ( ) ) ; }License ( (SubsystemLicense ) ) ; ( ( ( ) ) ) ; ( ( ) ) ; return resource ; }<CODESPLIT>Look in the esa for bundles with particular java version requirements . Create an aggregate requirement of the esa as a whole and write the data into the supplied resource<CODESPLIT>0
public static invokeMethod ( Object obj, Method method, Object... args ) { return ( ) invoke ( args ) } ( ( ) } }<CODESPLIT>调用构造函数 .<CODESPLIT>0
public SSLEngine addCommonConfigs ( SSLEngine engine ) { ( ( ) ( ) ) engine setEnabledCipherSuites (Suites ( ) ) ; } (Protocols ( ) sslProtocols ( ) ) engine setEnabledProtocols (Protocols ( ) ) ; } engineCreation (Creation ( ) ) ; return engine ; }<CODESPLIT>Add common configs for both client and server ssl engines .<CODESPLIT>1
public static InternalKBaseKBase ( String kbaseId,BaseConfiguration conf ) { ( ( }<CODESPLIT>TODO : FIXME : make it consistent with above<CODESPLIT>0
private < ItemT > void addInternal ( @ Nonnull Iterable < ItemT > items ) { ( items iterator ( ) hasNext ( ) ) return ; }BuildNumber getNextBuildNumber ( items ( ) ( ) ) ; ( newer older ) items ( ) ; ( ( ) ) add ( ( ) ) ; ( isFull ( ) ) } }Down hasNext ( ) ; } ( newer ) toFill ( ) ; (Fill ) itemsToAdd new ( ) ; items ( ) ; ( ( ) ) ( ) ; ( History ( ) newer ) itemsToAdd addLast ( ) ; ( itemsToAdd ( )Fill ) itemsToAdd removeFirst ( ) ;Up ; } } } } ( itemsToAdd ( ) ) ; } ( itemsToAdd ( )Fill ) skipped items ( ) ; Iter skip ( skipped itemsToAdd ( ) ) ; ( itemsToAdd ( ) skipped ( ) ) skipped ( ) ; itemsToAdd addLast ( ) ; } }Down hasNext ( ) ; ( itemsToAdd ) add ( ) ; } } } } ( older ) items ( ) ; ( ( ) ) item ( ) ; ( History ( ) older )Up ; } add ( ) ; ( isFull ( ) )Down hasNext ( ) ; } } } } }<CODESPLIT>Add run items and queued items to the History page .<CODESPLIT>0
private Set Artifact > getProjectDependencyManagement ( ) { new LinkedHashSet ( ) ; getProject ( ( ; (Management ) ( getDependencies ( ) ) add ( ( ) ) ; } } return result ; }<CODESPLIT>Returns all dependency artifacts in all modules excluding all reactor artifacts ( including attached ) .<CODESPLIT>0
public void add ( Rec fieldList ) throws DBException { Record record = ( Record ) fieldList ; ( ( ( this ( ) ( ) DBConstants OPEN ) DBConstants OPEN ) (Refresh ( ) ) ) this restore ( true ) super add ( record ) ; }<CODESPLIT>Add this record ( Always called from the record class ) .<CODESPLIT>1
protected void setException ( Throwable t ) { (Int ( ) ) outcome = t ; ( this ; finishCompletion ( ) ; } }<CODESPLIT>Sets the result of this future to the given value unless this future has already been set or has been cancelled .<CODESPLIT>0
@ Pure public static URL getResource ( ClassLoader classLoader, path ) (<CODESPLIT>Replies the input stream of a resource .<CODESPLIT>0
@ SuppressWarnings (unchecked ) static K, V Map K, V dynamicallyCastMap ( Map, map, Class K keyType, Class V valueType ) { ( ) return null ; } assert checkCollectionMembers ( ( contains keys ( ; assert checkCollectionMembers ( values ( contains values ( ; return ( Map, ) map ; }<CODESPLIT>=====<CODESPLIT>0
@ Override public java List com liferay model getCPDefinitionsByUuidAndCompanyId ( String uuid, long ) { returnOptionValueRelLocalService getCOptionValueRelByUuid ( }<CODESPLIT>Returns a range of cp definition option value rels matching the UUID and company .<CODESPLIT>0
public void setComplianceStatus ( java util Collection StringFilter complianceStatus ) { ( this compliance ; return ; } this compliance java ( compliance ; }<CODESPLIT><p > The details of a resource that does not have a specific sub - field for the resource type defined . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setResourceDetailsOther ( java . util . Collection ) } or { @link #withResourceDetailsOther ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
public static void callMethod ( final Object obj, final String methodName, final boolean includePrivateMehtods, final Object... args ) throws InvocationTargetException { initClasses ( args ) ; obj ( ) ; method ; ( method getDeclared (ArgsClass ) ; } ( ) getSuperclass ( ) ; } } ( ) NoSuchMethodException (Me ) ; } ) ; method invoke ( obj args ) ; } ( ) ( ( ) ) ; } ( ) ( ) ; } }<CODESPLIT>Checks if is class avilable in class path .<CODESPLIT>0
@ Override public boolean canParse ( File file ) { returnIgnoreCase ( ) }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public ListProductSetsPag listProductSets ( LocationName parent ) {Sets requestSets newBuilder build ; return listProductSets ( request ) ; }<CODESPLIT>Lists ProductSets in an unspecified order .<CODESPLIT>1
public Matrix solve ( Matrix B ) { ( BDimension ( ) n ) IllegalArgumentException (Matrix row ag ) ; } ( is ) (Matrix symmetric positive ) ; } X = B. ( ) ; = B. getColumnDimension ( ) ; for ( ) for ( ) for ( ) X k j -= X [ j * L [ k [ ; } X [ k [ j /= L [ k [ k ; } } for ( ) for ( ) for ( ) X [ k [ j -= X [ [ j * L [ [ k ; } X [ k [ j /= L [ k [ k ; } } return new Matrix ( X, n, nx ) ; }<CODESPLIT>Solve A * X = B<CODESPLIT>1
public java util List RecordPatch getRecordPatches ( ) { ( com amazonaws internal SdkInternalList ; } return recordPatches ; }<CODESPLIT>A list of patch operations .<CODESPLIT>1
private void processFields ( ) { fields ( embeddable ; ( fields ) ( ( ) ) processEmbedded ( field ; } processSimple ( field ) ; } } }<CODESPLIT>Processes the given simple ( or primitive ) field and updates the metadata .<CODESPLIT>0
public Observable updateExplicitListItemAsync (, String, entityId, long itemId, UpdateExplicitListItemOptionalParameter updateExplicitListItemOptionalParameter ) { return updateWithServiceResponseAsync ( updateOptionalParameter ( ServiceResponse ( Override public ( ServiceResponse ) { return body ( } } }<CODESPLIT>Updates an explicit list item for a Pattern . Any entity .<CODESPLIT>1
public void register ( DiagnosticsPlugin plugin ) { checkNotNull ( plugin null ) ; ( enabled ) return ; } period getPer ( ) ; ( period ) IllegalArgumentException ( return period ) ; } ( ( ) ( ) (disabledenabled ) ) ( period DIS ) return ; } pluginsMap ( plugin ( ) plugin ) ; plugin onStart ( ) ; ( period ) scheduler scheduleFixedRate ( new ( ) period ) ; } addStaticPlugin ( plugin ) ; } }<CODESPLIT>Registers a { @link DiagnosticsPlugin } . <p > This method is thread - safe . <p > There is no checking for duplicate registration . <p > If the { @link Diagnostics } is disabled the call is ignored .<CODESPLIT>1
public CacheManagerTask cleanAreaAsync ( Context ctx, BoundingBox bb, int zoomMin, int zoomMax ) { ( ( bb ; addCallback ( ( ; return execute ( task ) ; }<CODESPLIT>Remove all cached tiles in the specified area .<CODESPLIT>1
public static List ExternalGraphic externalGraphicsFromGraphic ( Graphic graphic ) { ( ; ( graphic ( ( ( ( ) ) ExternalGraphic externalGraphic = ( ExternalGraphic ) gs ; add ( ; } } return gList ; }<CODESPLIT>Creates a default { @link Style } for a featurecollection .<CODESPLIT>0
public ArrayClassInfo getArrayClassInfo ( String typeClassName, Type arrayType ) { return Array ( typeClassName element ) }<CODESPLIT>For array types the previous implementation used the element name .<CODESPLIT>0
public void free ( ) { panel ( ( this ; ( panel ) panel free ( ) super free ( ) ; }<CODESPLIT>Free the sub = components .<CODESPLIT>1
public final void ruleXMemberFeatureCall ( ) throws RecognitionException { ( ; { { ( ) before (FeatureCall ( ( ; } { ( ) ; rule__FeatureCall__Group__0 ( ) ; ( ) return } ( ) after (FeatureCall ( ) ( ) ) ; } } } } ( ) ( ) ; ( ) ; } restore ( ) ; } return ; }<CODESPLIT>InternalXbase . g : 633 : 1 : entryRuleXMemberFeatureCall : ruleXMemberFeatureCall EOF ;<CODESPLIT>0
protected String signAndBase64Encode ( byte [ ] data, String key, SigningAlgorithm algorithm ) SdkClientException { sign ( ( algorithm return64 encodeAsString ( ) ; } ( SdkClientException ( calculate ( ) ) } }<CODESPLIT>Computes an RFC 2104 - compliant HMAC signature for an array of bytes and returns the result as a Base64 encoded string .<CODESPLIT>1
private void ProcessNextStep ( ) { (SelectionStep ) SELECTCAT SELECTCAT ( CatalogToSelect ( ) ) fMain show ( ) ; return ; } SELECT SELECT (ToSelect ( ) ) fMain show ( ) ; return ; } SELECT (Transfer TRTRANS ) setLabel ( ) ; } (Transfer TR ) setLabel ( ) ; } (Transfer TRREST ) setLabel ( Restore ) ; } bStart invalidate ( ) ; setEnabled ( false ) ;TableMultiple ( false ) ; RefreshMainDisplay ( ) ; default : ; } }<CODESPLIT>Method declaration<CODESPLIT>0
JsonRepresentation asEventRepr ( EventMetadata metadata, final JsonRepresentation payloadRepr ) { event ( ) ; metadata ( ) ; event mapPut (metadata ) ; mapPut ( ( ) ) ; mapPut ( ( ) ) ; mapPut ( metadata getSequence ( ) ) ; metadata mapPut (event metadata ( ) ) ; metadata mapPut ( metadata ( ) ) ; metadata mapPut ( metadata ( ) ) ; event mapPut (payload payload ) ; return eventRe ; }<CODESPLIT>Set up the screen fields ( default = set them all up for the current record ) .<CODESPLIT>0
public float dot ( IntFloatVector y ) { ( IntFloatSortedVector ) IntFloatSortedVector other ( ( IntFloatSortedVector ) ) ; = ; oc = ; for ( used ) while ( used ) ( other indices indices ) ++ ; } ( indices other indices ) dot += values other values ; } } } } return dot ; } = ; for ( used ) dot += this values ( indices ) ; } return dot ; } }<CODESPLIT>Computes the dot product of this vector with the other vector .<CODESPLIT>1
protected final PrcRefreshCatalog lazyGetPrcRefreshCatalog ( final Map String, Object > pAddParam ) throws Exception { beanName PrcRefresh ( ) ; PrcCatalog ( PrcRefreshCatalog processors ( ; ( ) PrcRefresh ( ) ;Listeners ( (PublicTradeProcessors ( pAddParam ; this processorsMap ( ) ; this ( nullTradeProcessors created ) ; } return proc ; }<CODESPLIT><p > Lazy get PrcRefreshCatalog . < / p ><CODESPLIT>1
private static String buildMessage ( String id ) { ( return NULL } return (F ) }<CODESPLIT>Build the exception s message using the <tt > id< / tt > value .<CODESPLIT>1
public double [ ] getMnessAsOffsets ( ) { ( ( ( ( moneyness moneyness map ( DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return } } ; } ( moneyness moneyness map ( DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return } } ; } moneyness moneyness map ( DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return } } ; } return ( ) }<CODESPLIT>Return all valid maturities for a given moneyness . Uses the fixing times of the fix schedule to determine fractions .<CODESPLIT>0
public Frustum setToProjection ( double left, double right, double bottom, double top, double near, double far, IVector3 nearFarNormal, boolean ortho, boolean mirrored ) { n = nearNormal x ( ), n = nearNormal ( ), n = nearNormal z ( ) ; ( ) doublez = - 1f / nz ; double = nx * left *z = nx * right *z ; double y = ny * bottom *z yt = ny * top *z ; _vertices set ( left bottom near ) ; _vertices set ( right bottom xr near ) ; _vertices set ( right top xr near ) ; _vertices set ( left top near ) ; _vertices set ( left bottom far ) ; _vertices set ( right bottom xr far ) ; _vertices set ( right top xr far ) ; _vertices set ( left top far ) ; } double = 1f / near ; double = left * rr = right * ; double br = bottom * tr = top * ; double = near * nz ; z0 = ( n n br n ) ; _vertices set ( z lr z z ) ; z = ( n rr n br n ) ; _vertices set ( z rr z z ) ; z = ( n rr n tr n ) ; _vertices set ( z rr z tr z ) ; z = ( n n tr n ) ; _vertices m set ( z3 lr z3 tr z3 ) ; double fz = far * nz ; z4 = f ( n n br n ) ; _vertices set ( z4 lr z4 z4 ) ; z5 = f ( n rr n br n ) ; _vertices m set ( z rr z z ) ; z6 = f ( n rr n tr n ) ; _vertices set ( z rr z tr z ) ; z = f ( n n tr n ) ; _vertices m set ( z7 lr z7 tr z7 ) ; } updateDerivedState ( ) ; return this ; }<CODESPLIT>Sets this frustum to an orthographic one pointing in the Z - direction with the specified parameters determining its size ( see the OpenGL documentation for <code > glOrtho< / code > ) .<CODESPLIT>0
private String parameterToString ( Object param ) { ( return "" ; } ( return formatDate ( ( Date ) param ) ; } ( Collection ) ( ; ( ( Collection ( ( ) ) ( ; } ( ( ; } return toString ( ) ; } return valueOf ( param ) ; } }<CODESPLIT>Reads a buffer .<CODESPLIT>0
public static validateNotNull ( value, String errorMsgTemplate, Object... params ) Validate { ( ( ( ) } return }<CODESPLIT>检查指定值是否为<code > null< / code ><CODESPLIT>0
public final void setCommitTrigger ( CommitTrigger commitTrigger ) { ( commit commit return ; } ( commit this commit removeCommit ( commit ; this commit ; } ( commit ) ( commit ) this commit ( ; } this commitTrigger = commitTrigger ; this commit addCommit ( commit ; } }<CODESPLIT>Sets the <code > CommitTrigger< / code > that triggers the commit and flush events .<CODESPLIT>1
public static String getRelativeSubPath ( String base, String path ) { ; join ( ) ; path join ( path ) ; ( ( ) ) path ( ( ) ) ; } ( ) ( ( ) ) ( ( ) ) ; } ( ( ) ) result = result ; } } return result ; }<CODESPLIT>Returns <code > true< / code > if the provided Objects are either both <code > null< / code > or equal according to { @link Object#equals ( Object ) } . <p ><CODESPLIT>0
private void readMoreBytesFromStream ( ) throws IOException { (More ) return ; } bufferAvailable buffer ; ( buffer ) return ; } ( buffer bufferAvailable ) ; ( ) innerStreamHasMoreData = false ; } } }<CODESPLIT>Fill the buffer with more data from the InputStream if there is any .<CODESPLIT>1
@ Override public getP ( request ) { request beforeClientExecution request executeGet ( request }<CODESPLIT><p > Retrieves a specified security configuration . < / p ><CODESPLIT>0
public void println ( final String str ) throws IOException { ) ( ) this writer flush ( ) ; }<CODESPLIT>{<CODESPLIT>0
@ Generated value {eringssGenDObjectTask } ) public void setPeerService (Marshaller value ) { PeerMarshallervalue this peerService request this peerService value }<CODESPLIT>Requests that the <code > bootStamp< / code > field be set to the specified value . The local value will be updated immediately and an event will be propagated through the system to notify all listeners that the attribute did change . Proxied copies of this object ( on clients ) will apply the value change when they received the attribute changed notification .<CODESPLIT>0
public String replaceDocRootDir ( String htmlstr ) { html (@" ) ; ( ) return htmlstr ; }rootrootPattern ( html ) ; (root ( ) ) return htmlstr ; } buf new ( ) ; ; do { ( ) ; buf ( html (End ) ) ;Endroot end ( ) ; ( configurationrootparent ( ) html ( ) ) buf ( configurationrootparent ) ; ; } buf ( ( ) : ( ) ) ; } ( html ( ) html ( ) ) buf ( ) ; } } ( ( ) ) buf ( html (End ) ) ; return buf. toString ( ) ; }<CODESPLIT>Programmatic interface .<CODESPLIT>0
public static List String > getPropertyNames ( Object obj ) { propertyNames ( ; ( ) return propertyNames ; }Detect ( ) ; performGetPropertyNames ( null ) ; return propertyNames ; } }<CODESPLIT>Recursively gets names of all properties implemented in specified object and its subobjects .<CODESPLIT>1
public boolean checkLocks ( boolean exclusive, int depth ) { ( ( ( } false }<CODESPLIT>checks if a lock of the given exclusivity can be placed only considering children up to depth<CODESPLIT>1
private static void createFactoryInstance ( ) { cls forName ( MPSELECTUFACTORY ) ; instance ( MPSelectorEvaluator ) cls newInstance ( ) ; } ( ) (,SelectorEvaluatorcreateFactoryInstance, ) ; ( ) ; } }<CODESPLIT>Create the singleton Factory instance .<CODESPLIT>1
public NotificationChain basicSetUniformDistribution (iformDistributionTypeUniformDistribution, NotificationChain msgs ) { return ( ( ( basicAdd (ROOTUniform msgs }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>1
private EntityManager getEntityManager ( ) { EntityManager em ; ( ( ) ) ( )Synchronization ( ) ; ( ) createEntityManager ( ) ; transaction register ( Tx ( ;Synchronization ( ) ; } validateCompatibleSyncTypes ( ) ; } } nonEm getEntityManager ( ) ; ( ) createEntityManager ( ) ; non ) ; } } return em ; }<CODESPLIT>Subscribes to an event dispatcher and starts a watch for a given key .<CODESPLIT>0
public FSArray getItemList ( ) { ( featOkTst ( ( List jcasType casFeat jcasType jcas throwFeatMissing ( return (Array ) ( jcasType llcas llgetForRef ( jcasType llcas llget ( addr, ( (Type ) jcasType ) casFeatCodeitemList ) ) ) ; }<CODESPLIT>setter for itemList - sets contains items of the level 1 . The items of the level 1 could contain further items of next level and so on in order to represent an iterative structure of list items .<CODESPLIT>0
public PushRules createPushRules ( Object projectIdOrPath, PushRules pushRule ) throws GitLabApiException { GitLab formData new GitLab ( ) (dendeletetag pushDelete ( ) ) (check push getMemberCheck ( ) ) (secret push getPreSecrets ( ) ) (commitmessageregex pushCommitRegex ( ) ) (regex push getBranchRegex ( ) ) (emailregex pushAuthorEmailRegex ( ) ) (fileregex push getFileNameRegex ( ) ) (file push ( ) ) ; post ( CREATED formDataOrPath ( projectIdOrPath )push ) ; return (. readEntity ( PushRules. ) ) ; }<CODESPLIT>Adds a push rule to a specified project .<CODESPLIT>1
public staticsoRecurrence DateInterval of ( int count, PlainDate start, DurationsoDateUnit duration ) { check ( ( ( ) } returnIntervals ( count,DURATION,, duration ) }<CODESPLIT>/ * [ deutsch ] <p > Erzeugt eine Sequenz von wiederkehrenden Datumsintervallen mit der angegebenen Dauer . < / p ><CODESPLIT>1
private static String upperCaseHex ( String s ) { char chars [ = s. toCharArray ( ) ; length = s. length ( ) ; for ( length ) { ( chars [ i ) { chars = ; ; chars = ; ; chars = ; ; chars = ; ; chars = ; ; chars = ; ; } } return new String ( chars ) ; }<CODESPLIT>/ * Efficiently converts a string containing a hexadecimal number from lower case to upper case<CODESPLIT>1
static ImmutableList NameValuePair > buildParameters ( String analyticsId, String clientId, String virtualPageName, String virtualPageTitle, String eventType, String eventName, boolean isUserSignedIn, boolean isUserInternal, Optional Boolean > isUserTrialEligible, Optional String > projectNumberHash, Optional String > billingIdHash, Optional String > clientHostname, Random random ) { checkNotNull ( analytics ) ; checkNotNull ( clientId ) ; checkNotNull (Title ) ; checkNotNull ( ) ; checkNotNull ( eventType ) ; checkNotNull ( eventName ) ; checkNotNull ( projectHash ) ; checkNotNull (Hash ) ; checkNotNull ( clientHostname ) ; checkNotNull ( random ) ; list ( ) ; list ( ( ) ) ; list ( ( analytics ) ) ; list ( ( VALUEVIEW ) ) ; list ( (NONACTIVE VALUE ) ) ; list ( (CACHEBUSTER toString ( randomLong ( ) ) ) ) ; list ( (EVENT eventType ) ) ; list ( (EVENT eventName ) ) ; (Hostname ( )Hostname ( ) ( ) ) list ( ( client ( ) ) ) ; } list ( ( ) ) ; ( ( ) ( ) ( ) ) list ( (HASH projectHash ( ) ) ) ; } ( ( ) ( ) ( ) ) list ( (ILLHASH billingHash ( ) ) ) ; } list ( (SIGNED to ( isUserSigned ) ) ) ; list ( ( to ( isUserInternal ) ) ) ; ( isUser ( ) ) list ( (TRI to ( isUserTriigible ( ) ) ) ) ; } list ( new (VIRTUAL VALUE ) ) ; list ( new ( virtual ) ) ; (Title ( ) ) list ( new ( virtualTitle ) ) ; } return listBuilder build ( ) ; }<CODESPLIT>Adds more data providers to the validator .<CODESPLIT>0
@ Override public void insert ( CharSequence text ) throws IOException { text ( ) ; ( ) return ; } ( ( cursor ) ) ( buffer ) ; } ( cursor ) makeRoom ( ) ; } ( ln ) set ( ( cursor ) text ( ) ) ; } ; }<CODESPLIT>Inserts text at cursor position<CODESPLIT>1
public void onNewTab ( final AjaxRequestTarget target, final T tab, final int index ) { ( ( ( ( ( ( ) }abs ( add ( setSelected ( add ( }<CODESPLIT>On new tab .<CODESPLIT>1
public static void outputImage ( int w, int h, OutputStream os, String code ) throws IOException { verify code ( ) ; BufferedImage image new BufferedImage ( BufferedImage TYPEINTRGB ) ; Random rand new Random ( ) ; g image createGraphics ( ) ; g ( ) ; colors new ; colorSpaces new { Color. WHITE Color. CYAN Color. GRAY Color. L_GRAY Color. MAGENTA Color. ORANGE Color. PINK Color. YELLOW } ; fraction new colors ; ( colors ) colors = color rand. nextInt ( color. length ) ; fraction randFloat ( ) ; } Arrays sort ( fraction ) ; g ( ) ; g fillRect (,, w, ) ; Color getRColor ( 200, ) ; g ( ) ; g fillRect (,, w, ) ; Random random new Random ( ) ; g ( getRColor ( ) ) ; ( 20 ) random nextInt ( ) ; random nextInt ( ) ; random nextInt ( ) ; random nextInt ( ) ; g drawLine (,, xl 40, 20 ) ; }Rate ; area ( ) (Rate ) ; ( area ) random nextInt ( ) ; random nextInt ( ) ; getRandomIntColor ( ) ; imageRGB ( ) ; } she ( g, w,, ) ; g ( getRColor ( ) ) ; ; = new ( ) ; g setFont ( font ) ; chars code toCharArray ( ) ; ( verify )Transform = newTransform ( ) ; setToRotation ( / rand nextDouble ( ) ( rand nextBoolean ( ) ) ( / ) / / ) ; gTransform ( ) ; g drawChars ( chars,,, ( ( w ) verify ), ) ; } g dispose ( ) ;IO write ( image,jpg, os ) ; }<CODESPLIT>生成指定验证码图像文件<CODESPLIT>0
public Object findClosestObject ( int x, int y, int [ ] distance ) { (size ) return null ; } = binarySearch ( ) = sr ; = = ; for ( boolean ) expanded = false ; (size ) Record rec = _records sr ; ( ) = distance ( ) ; ( ) min = sr ;ist = dist ; } ; expanded = ; } } ( ) Record rec = _records sl ; ( ) = distance ( ) ; ( ) min = sl ;ist = dist ; } sl -= 1 ; expanded = ; } } } ( min ) (Prox algorithm ) ; } ( ) distance 0 =ist ; } return _records minidx. object ; }<CODESPLIT>Removes from the tracker the object that is equal to ( <code > o1 . equals ( object ) < / code > ) the specified object .<CODESPLIT>0
public void setGoldenGrammarErrors ( FSArray v ) { ( featOkTst ( ( G ) jcasType ) casFeatErrors ) jcasType jcas throwFeatMissing (Errors ) ; jcasType llcas llset ( addr ( (oldSentenceType ) jcasType ) casFeatCodeoldGrammarErrors jcasType llcas llgetFSRef ( v ) ) ; }<CODESPLIT>setter for goldenGrammarErrors - sets<CODESPLIT>1
Map < CmsPrincipalBean, String > getResponsibles ( CmsObject cms, CmsResource res ) {Principal result newPrincipal ( ) ; parentResources new ( ) ; parentResources readPath ( res CmsResourceFilter ) ; } ( ) ( ( ) ) ; } ( parentResources ) stored ( ) getSite ( ) ; sitePath ( ) remove ( resource ( ) ) ; ( ) ( ) ;AccessControl entriesAccessControlEntries ( resource ( ) ) ; (AccessControl entries ) (Res ( ) ) principal lookup ( getPr ( ) ) ; ( principal )Principal newPrincipal ( principal ( ) principal getDescription ( ) principalGroup ( ) ) ; ( resource ( ) ( ( ) ) ) ( resource ( ) ( ) ) result put ( prBean sitePath ) ; } result put ( prBean resource ( ) ) ; } } result put ( prBean, null ) ; } } } } } ( ) ( reading responsible users resource ( ) ( ) ) ; } ( ) ( ) ; } } return result ; }<CODESPLIT>Returns the responsibles . <p ><CODESPLIT>1
public static post ( String uriTemplate, handler ) { ( post ( }<CODESPLIT>Performs mapping for all routers .<CODESPLIT>0
public static void descendingOrder ( DMatrixRMaj U, boolean tranU, DMatrixRMaj W, DMatrixRMaj V, boolean tranV ) {Singular = ( ) ; checkMatrix (,U,,, ) ; for ( ) double bigValue = - 1 ; big = ; for ( ) = ( ) ; ( big ) bigValue = v ; bigIndex = j ; } } ( big ) ; ( big ) } = ( ) ; ( ) ; ( ) ; ( ) swapRowOr (,,, bigIndex ) ; } ( ) swapRowOr (,U,, bigIndex ) ; } } }<CODESPLIT>Computes the SVD and sorts singular values in descending order . While easier to use this can reduce performance when performed on small matrices numerous times .<CODESPLIT>0
public stopMonitoring ( StopMonitoringData stopMonitoringData ) ApiException { ApiResponse stopWithHttpInfo stop ( }<CODESPLIT>Start recording a call Start recording the specified call . Recording stops when the call is completed or you send [ / voice / calls / { id } / stop - recording ] ( / reference / workspace / Voice / index . html#stopRecording ) on either the call or the DN .<CODESPLIT>0
public String getAttributeString ( String attName ) { ; ( return null } return ( ) ; } }<CODESPLIT>Get the value for a given attribute .<CODESPLIT>1
public static List findByGroupId ( long groupId, start, int end ) { ( ( }<CODESPLIT>Returns a range of all the cp option values where groupId = &#63 ; .<CODESPLIT>1
private static void handleSingletonClass ( String key, String value ) throws Exception { object handle ( ; ( ( ) ) interfaces ( ; ( ) ( object ) ; } } ( object ) ; } }<CODESPLIT>Send email with a string content and attachment<CODESPLIT>0
public static String [ ] split ( String string, char separator, final boolean ignoreQuotes ) { string ; return strtok getTokenArray ( ) ; }<CODESPLIT>Normalize and collapse whitespaces from string buffer .<CODESPLIT>0
public ComparisonExpression getLFilterFromPrefixLike ( ) { ExpressionType rangeComparator ExpressionTypeSTHAN comLike return rangeFilterFromPrefixLike ( range }<CODESPLIT>/ Construct the upper bound comparison filter implied by a prefix LIKE comparison .<CODESPLIT>1
public void showForgotPasswordView ( String authToken ) {TokenValidator validator newTokenValidator ( ) ; validation validator validateToken ( AUI ( ) authToken OpenCms getLogin ( ) getTokenLifetime ( ) ) ; ( validation ) user validator getUser ( ) ; ( ( ) )SetPasswordDialog newSetPasswordDialog (admin user getLocale ( ) ) ; A ( ) setContentDialog ( ( ) ( A ( ) ( ) ) (PWCHANGE ) user ( ) dlg ) ; } Notification show (VaadinText (USERNOTMAN, user ( ) ), ERROR ) ; } } A ( ) setError ( ( ) ( A ( ) ( ) ) (PWCHANGEINVALID ) ) ; ( authorization token authToken validationResult ) ; } } ( ) ( ( ) ) ; } }<CODESPLIT>Initializes the login view . <p ><CODESPLIT>0
@ WithBridgeMethods ( value SQLServerQuery class, castRequired ) public C tableHints ( SQLServerTableHints... tableHints ) { (Grammar ; ( } return ( ) this ; }<CODESPLIT>Set the table hints<CODESPLIT>1
private void populate ( Field field, Object target, String stringValue ) { ( ) ; field ( ) ; value convert ( ) to ( ) ; ( value ) ; } ( ) ( populate ) ; } }<CODESPLIT>Populates the specified field on the target with the value from the given option .<CODESPLIT>1
public Object getParameter ( String name ) {FromString ( name ) ; (user ) return ;user ( ) ; ( ) Arg ( Arg )userParams ( ) ; ( ( ) ( ) ) return arg. getVal ( ). object ( ) ; } } return null ; } ( ) return null ; } }<CODESPLIT>Reset parameters that the user specified for the transformation . Called during transformer . reset () after we have cleared the variable stack . We need to make sure that user params are reset so that the transformer object can be reused .<CODESPLIT>0
private MultipartContent createContent ( final ProblemInput input, final File output, final File source ) throws IOException { type new ( MEDIA ) ; type ( BOUND createBoundary ( ) ) ; source new ( PATH ) ( source ( ) ) toString ( ) ; Multipart content new Multipart ( ) set ( type ) (Executor buildData ( CSRFPARAMETER values getToken ( ) ) ) (Executor build (PARAMETER output ) ) (Executor build ( SOURCEPARAMETER source ) ) (Executor buildData ( SOURCEPARAMETER source ) ) (Executor buildData (PARAMETERCOMMAND ) ) (Executor buildData ( PROPARAMETER input ( ) ( ) ) ) (Executor buildData ( INPUTPARAMETER ( input ( ) ) ) ) (Executor buildData (PARAMETER DEFAULTSOURCE ) ) (Executor buildData (PARAMETER DEFAULTAGENT ) ) ; return content ; }<CODESPLIT><p > Created and returns a valid { @link MultipartContent } instance that contains data required for submission . < / p ><CODESPLIT>1
@ SuppressWarnings (unchecked ) public boolean push ( E e ) { ( buckets ( ( ;InBucket = ; } buckets getLast ( )InBucket = ; return true ; }<CODESPLIT>This method verifies that this GO has no PCI representation or that the PCI representation is not dirty or new . Otherwise it will throw an exception in order to prevent the dirty state of the GO and the PC to result in conflicting updates in the database .<CODESPLIT>0
static ResultDescriptor resultDescriptor ( ResultDescriptorDTO rDescriptorDTO ) { new ( ( ) ) ; (DTODTOatasources ( ) ) (Heartbeat ( ) ) ( ( getSource (Heartbeat ( ) getFunction ( ) ) ; } datasource ( getLabel ( ) ( ) getFunction ( ) ) ; } } (DTODTOExpressions ( ) ) expression ( expr getLabel ( ) expr getExpression ( ) ) ; } export (Exports ( ) ) ; return rDescriptor ; }<CODESPLIT>Visits all nodes in the resource tree bellow the given resource using depth - first search .<CODESPLIT>0
public boolean handleRemoteCriteria ( StringBuffer strFilter, boolean bIncludeFileName, Vector BaseField > vParamList ) { this getNextEnabled ( ) ; ( ) return ( ( ) )Criteria ( ) returnRemoteCriteria ( ) }<CODESPLIT>Check to see if this record should be skipped . Generally you use a remote criteria .<CODESPLIT>0
@ POST ( MediaType_JSON ) Produces ( MediaType_JSON ) public Response registerWindowsVariant ( WindowsVariant windowsVariant, (pushAppID ) String pushApplicationID, Context UriInfo uriInfo ) { push getSearch (Push ( push ; ( return ( NOT ) entity ( not findApplication ) build ( ) ; } validate ( ; } ( ) create )BadRequest ( ( ; return builder build ( ) ; }Register pushApplicationID ) ; add ( ; push add ( push ; return ( uriInfo getAbsolutePathBuilder ( ) path ( ( windowsVariant getVariantID ( ) ) ) build ( ) ) entity ( windowsVariant ) build ( ) ; }<CODESPLIT>Get a global integer property . This method will first try to get the value from an environment variable and if that does not exist it will look up a system property .<CODESPLIT>0
public static Iterable Reference getReferences ( String referenceSetId, OfflineAuth auth ) IOException { ( ( return Paginatorferences create ( gen ) search ( SearchReferences ( )SetId ( referenceSetId ) ) }<CODESPLIT>Gets VariantSetIds from a given datasetId using the Genomics API .<CODESPLIT>0
public void put ( String localFile, String remoteTargetDirectory ) { } remoteTargetDirectory }<CODESPLIT>Copy a local file to a remote directory uses mode 0600 when creating the file on the remote side .<CODESPLIT>1
public synchronized void throttle ( final int bulkMutationRpcTargetMs ) { (Thrott ) return ; } (Initializing BulkMutation throttlingOnce reduced bulkMutationRpc ) ( ) ( bulk ) ; ( ) ( bulk ) ; setCurrentInFlightMax (InFlightMax ( ) ) ; Runnable r new Runnable ( ) { @ Override public void run ( ) { meanLatency ( stats ( ) ) ; ( meanLatency bulk ) reduceParallelism ( meanLatency absoluteMaxInFlight ) ; } ( meanLatency ) reduceParallelism ( meanLatency absoluteMaxInFlight ) ; } ( (ThrottTimer ( ) ) ) ( meanLatency ) increaseParallelism ( meanLatency absoluteMaxInFlight 20 ) ; } (Flight absoluteFlight meanLatency ( bulk ) ) increaseParallelism ( meanLatency absoluteMaxInFlight ) ; } } } private long getMeanMs ( Timer timer ) { return NANOSECONDS ( ( long ) timer getSnapshot ( ) getMean ( ) ) ; } private void reduceParallelism ( long meanLatencyNanos, int step ) { minimum ( ) ; ( step minimum ) ; setParallelism ( meanLatencyNanosRedu newValue ) ; } private void increaseParallelism ( long meanLatencyNanos, int incrementStep ) { ( increment ) ; setParallelism ( meanLatencyNanosIncre newValue ) ; } private void setParallelism ( long meanLatencyNanos, String type, int newValue ) { currentValue ( ) ; ( newValue currentValue ) setCurrentInFlightMax ( newValue ) ; (Latency ( meanLatencyNanos ) ) } } } ; BigtableSharedPools ( )Executor ( ) scheduleFixedRate ( 20 20 SECONDS ) ; ; }<CODESPLIT>Enable an experimental feature that will throttle requests made from {<CODESPLIT>1
public static UncheckedBinary fromBase64 ( String base64 ) { normalizedBase new ( base ( ) ) ; ( base ( ) ) base64 ( ) ; ( ) ; ( ) ; ( ) ;Base64 ( ) ; } ( ( ) % )Base64 ( ) ; } bytesConverter parseBase64Binary ( normalizedBase64 toString ( ) ) ; return Binary. from ( bytes ) ; }<CODESPLIT>Reads standard and URL / filename - safe Base 64 dialects as described in RFC 4686 . Additionally it accepts not Base 64 encoded strings without padding or allows to use dot character ( . ) as padding character .<CODESPLIT>1
boolean isMatch ( Class beanType, Object id ) { return ( ( ) }<CODESPLIT>Checks that the supplied parameter is not null . Throws a {<CODESPLIT>0
private String formatPriority ( Priority value ) { ; ( ) priority (TYPES ; priority ( ; ( priority ) priority = Priority LO ; } ( priority ) priority = Priority DO_NOT_LEVEL ; } } priority /= 100 ; result = priorityTypes priority - ; } return ( result ) ; }<CODESPLIT>This method is called to format a task type .<CODESPLIT>0
public static cuMemPeer ( CUdevice dstDevice, CU dst, CUdevice srcDevice, CU src, ByteCount ) { cuNative ( }<CODESPLIT>Copies device memory between two contexts .<CODESPLIT>1
private GraphCQueryBuilder has ( String key,anPredicate predicate, Object condition ) { checkNotNull ( checkNotNull ( predicate ( predicate isValidCondition ( condition condition condition constraints ( predicate condition ; return this ; }<CODESPLIT>/ * --------------------------------------------------------------- Query Execution ---------------------------------------------------------------<CODESPLIT>0
private void changeReplicas ( PrimaryTerm term ) { threadContext execute ( ( { ( ( ( this term term ; consumer register ( primary ( ( } } ) ; }<CODESPLIT>Handles a replica change event .<CODESPLIT>1
public void translate ( Vector3D, > translation ) {03 translation ( ; translation ( ; translation getZ ( ; }<CODESPLIT>Translate the position .<CODESPLIT>1
public static float getFloat ( float value, float minValue, float maxValue ) { ( ( }<CODESPLIT>Return a float value within the range . <p > This is just a wrapper for Math . min () and Math . max () . This may be useful if you feel it confusing ( Which is min and which is max? ) . < / p ><CODESPLIT>1
@ Destroy ( priority AutActionPriority MIN_ ) public void savePreferences ( ) {Set Preferences preferencesSetsSet ( ; ( preferences ) Preferences preferences names ( ; preferencesFlush add ( preferences ) ; preference save ( preference preferences ) ; } ( preferences preferencesFlush ) preferences flush ( ) ; } }<CODESPLIT>Saves all current preferences . This is a reasonably heavy operation as it flushes all preferences files - by default this is done once before the application is closed .<CODESPLIT>1
public void unsubscribe ( final Subscription T > subscription ) { subscription getToken ( ) ; FINER} token {1 { this. name token } ) ; ( ) this transport registerErrorHandler ( null ) ; } ( ) thisToMap remove ( ) ; } ( ) thisToHandlerMap remove ( ) ; } ( subscription subscription ( ) ( ) ) ; } }<CODESPLIT>Unsubscribes a handler .<CODESPLIT>1
public static SymbolList toDSymbolList ( Sequence sequence )Symbol { checkNotNull return createDN ( sequence ( ( "" ) }<CODESPLIT>Convert the specified HML Sequence element into a DNA symbol list .<CODESPLIT>1
private boolean processArguments ( String [ ] args ) { ( args ) System ( messages (argument ) ) ; return false ; } setCustomMessageFileFromEnvironment ( ) ; argPattern compile ( ) ; for ( args ) argMatch argPattern ( args ) ; ( matches ( ) ) ( ( ) ) ( args length ) ; ( args ( ) args ( ) ) version = EPUBVersion. VERSION_2 ; } ( args ( ) args ( ) ) version = EPUBVersion. VERSION_3 ; } outWriter ( messages (help ) ) ; (Version (Version UNS ) ) ; } } outWriter ( messages. (help ) ) ; ( messages (version ) ) ; } ( args length ) mode = args ; expanded mode (exp ) ; } outWriter. ( messages. (help ) ) ; ( messages ( ) ) ; }profile ( args length ) profile = args ++ ; profilePUBProfile ( profileStr toUpperCase ( ROOT ) ) ; } ( ) System.. ( messages. (modeversionignored profile ) ) ; profile = EPUBProfile. DEFAULT ; } } outWriter. ( messages. (help ) ) ; ( messages ( ) ) ; }save true ; ( ( args length ( ) ) ( args ( ) ) ) fileOut = new ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ; } pathFile = new ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new ( pathFileFile ( ) getParentFile ( ) pathFile ( )checkxml ) ; } fileOut = new ( pathcheckxml ) ; } } xmlOutput = ;json ( ( args length ( ) ) ( args ( ) ) ) fileOut = new ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ; } pathFile = new ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new ( pathFileFile ( ) getParentFile ( ) pathFile ( )checkjson ) ; } fileOut = new ( pathcheckjson ) ; } } jsonOutput = ;mp ( ( args length ( ) ) ( args ( ) ) ) fileOut = new ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ; } pathFile = new ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new ( pathFileFile ( ) getParentFile ( ) pathFile ( )checkmp ) ; } fileOut = new ( pathcheckmp ) ; } }mpOutput = ;info reporting Report Info ;fatal reporting Report Fatal ;error reporting Report Error ; reporting Report ;usage reporting Report Usage ;quiet outWriter setQuiet ( true ) ;failwarnings fw args (failwarnings length ( ) ) ; failOnWarnings ( compareTo ( "-" ) ) ; ( args length ) fileOut = new ( args ++ ) ; }Messages ( args length ) fileName = args ; ( ( fileName ( Locale ROOT ) ) ) customMessageFile = null ; useCustomMessageFile = false ; ; } ( fileName ( "-" ) ) customMessageFile = new ( fileName ) ; useCustomMessageFile = ; ; } System.. (. ( messages. (messagefilename ) fileName ) ) ; displayHelp ( ) ; return false ; } } ( args length ) ( args ( "-" ) ) listChecksOut = new ( args ++ ) ; } listChecksOut = null ; } } listChecks = ; ( args length ) ( args ( "-" ) ) System.. (. ( messages. ( ) args ) ) ; displayHelp ( ) ; return false ; }Tag = args ++ ; this localeLanguageTag ( langTag ) ; this messages getInstance ( this locale ) ; } } System.. (. ( messages. ( ) ) ) ; displayHelp ( ) ; return false ; } "?"helpHelp ( ) ;version ( ) ; default System.. (. ( messages. (unargument ) args ) ) ; displayHelp ( ) ; return false ; } } ( path ) path = args ; } System.. (. ( messages. (unargument ) args ) ) ; displayHelp ( ) ; return false ; } } } ( ( xmlOutputOutput ) ( xmlOutput jsonOutput ) (Output jsonOutput ) ) System.. ( messages. (output ) ) ; return false ; } ( path ) sb = new ( ) ; for ( path ( ) ) ( path ( ) ) ( ) ; } ( path ( ) ) ; } } path toString ( ) ; } ( path ) ( listChecks ) return true ; } System.. ( messages. (file ) ) ; return false ; } } ( path matches ( ) ) ( mode versionPUB ) System.. ( messages. (modeversionignored ) ) ; mode = null ; } } ( mode profile ) outWriter. ( messages. (moderequired ) ) ; return false ; } return true ; }<CODESPLIT>recursively get the values stored for the given {<CODESPLIT>0
public FieldList move ( int iRelPosition ) throws DBException { m_iLogicalFilePosition = UNKNOWN_ ; FieldList record this getNextTable ( ) move (RelPosition ) ;PhysicalFile ; ( DBConstants FIRST ) ; ( DBConstants LAST ) (EndOf UNKNOWN )CurrentPosition = UNKNOWN_ ; }EndOf ; } ; m_iPhysicalFilePosition =CurrentPosition ; ( ( record ) ( ( DBConstants FIRST ) ( DBConstants NEXT ) ) )EndOf ; ( ) this addReference ( ) ; m_iLogicalFilePosition =CurrentPosition ; } return record ; }<CODESPLIT>Find this bookmark in one of the lists .<CODESPLIT>0
public void registerIndexQuery ( long index, Runnable query ) { queriesQueries ( ( ; queries add ( ; }<CODESPLIT>Registers a causal session query .<CODESPLIT>0
public static populateCommand ( command, String... args ) {CommandLineFactory ; parse ( return command ; }<CODESPLIT><p > Convenience method that initializes the specified annotated object from the specified command line arguments . < / p > <p > This is equivalent to < / p > <pre > CommandLine cli = new CommandLine ( command ) ; cli . parse ( args ) ; return command ; < / pre ><CODESPLIT>1
public LogEvent [ ] getLogEvents ( ) { ( return LogEvent ; } events ( ; return ( LogEvent )LogEvents toArray ( events ) ; } }<CODESPLIT>Finds a template based on the given URI . If path ends in a slash revert to loading default template . If default not found or not specified return null .<CODESPLIT>0
@ Requires ( {bycontract ) Ensures (result null ) protected byte [ ] instrumentWithContracts ( byte [ ] bytecode, ContractAnalyzer contracts ) { reader ( ) ;Loading ( reader ) ; Specification adapter Specification ( contracts ) ; reader accept ( adapterReader EXP ) ; return writer toByteArray ( ) ; }<CODESPLIT>Processes the specified reader and returns extracted contracts .<CODESPLIT>0
@ Override final public void dissociateConnections ( ) throws ResourceException { ( ( ) TRACE ( ) ) SibTr ( TRACEissoci ) ; } ( ( ) ( ) ) object ( ; ( ) ( ( ) object )oci ( ) ; remove ( ) ; } } ( ( ) TRACE ( ) ) SibTr ( this TRACEissociConnections ) ; } }<CODESPLIT>Returns the current global or container local transaction if any for this managed connection . If there is currently no transaction associated with this managed connection calls <code > lazyEnlist< / code > to ensure that one has not been started .<CODESPLIT>0
public com ads v201809 StringStringMapEntry [ ] getDisplayValue ( ) { }<CODESPLIT>Gets the parentDimensionValue value for this ProductBiddingCategoryData .<CODESPLIT>0
@ SuppressWarnings (WeAccess ) public ApiFuture Void > deleteInstanceAsync ( String instanceId ) { ( projectId ; Delete request Delete newBuilder instanceName build ; return ApiFutures transform ( stub deleteInstance ( ) futureCall ( request ), Api Empty, Void ( ) Override public Void apply ( Empty input ) { return null ; } }Executor ( ; }<CODESPLIT>Asynchronously lists all of the instances in the current project .<CODESPLIT>0
boolean contains ( String normalizedPath ) { ( ( ( ( return normalizedPath regionMatches (, normalizedRoot,, normalizedRoot ( ) ) ; }<CODESPLIT>Check if the provided path is contained within this root s hierarchy .<CODESPLIT>1
private static boolean checkValidity (Socket client, byte from, expected ) ( }<CODESPLIT>Check if the client is in a valid state .<CODESPLIT>1
@ Override public Request EnableVpcClassicLinkRequest getDryRunRequest ( ) { requestRequest ( ( this ; request (DryRun ( true ; return request ; }<CODESPLIT><p > One or more filters to limit the type of sessions returned by the request . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setFilters ( java . util . Collection ) } or { @link #withFilters ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
private String generateMethodKey ( CtMethod method ) throws NotFoundException {QualifiedName ( ( ;Simple ( ; ( ; returnMethod generateMethodKey (QualifiedName, methodSimple,ClassQualifiedNames ) ; }<CODESPLIT>( for example when class of method argument type has not been loaded by class loader )<CODESPLIT>0
public static void info ( String format, Object... arguments ) { }<CODESPLIT>Info等级日志，小于Warn<br > 由于动态获取Log，效率较低，建议在非频繁调用的情况下使用！！<CODESPLIT>1
private static CommandLineArgument findCommandLineOption ( String arg ) { ( ( ( ( return commandLine } } return null ; }<CODESPLIT>Not needed until workers support dynamic removal ( currently reload required )<CODESPLIT>0
@ Override public void addInheritedSummaryLabel ( TypeElement typeElement, Content inheritedTree ) { Content ( MEM typeElement false ) ; Content ( ( typeElement configuration (docletInheritedFrom configuration (docletInheritedFrom ; ContentHeading HtmlTree HEAD ( HtmlConstants INHERITHEAD ) ; labelHeading addContent ( Contents ) ; labelHeading addContent ( ) ;Tree addContent ( labelHeading ) ; }<CODESPLIT>{<CODESPLIT>0
public static String makeDeepLink ( String link ) { (RemoteConnection ( )Remote ( ) ) ( ( "&"REMOTECONNECTIONRemoteConnectionLink ( ; } return link ; }<CODESPLIT>Adds remote connection parameter to link GET query if parameter yet not present in this link .<CODESPLIT>1
public static Object convert ( String propertyName, String s, Class t, Class propertyEditorClass ) throws JspCoreException { ( ) ( ( Boolean ) ( Boolean ) ) return } ( ) return getValueFromBeanInfoPropertyEditor (, propertyName, s, propertyEditorClass ) ; } ( ( Boolean ) ( Boolean ) ) ( ( ) (true ) )true return new Boolean ( s ) ; } ( ( ) ( ) ) return new Byte ( s ) ; } ( ( ) ( ) ) return s length ( ) 0 new Character ( s charAt ( 0 ) ) null ; } ( ( ) ( ) ) return new Short ( s ) ; } ( ( ) ( ) ) return new Integer ( s ) ; } ( ( ) ( ) ) return new Float ( s ) ; } ( ( ) ( ) ) return new Long ( s ) ; } ( ( ) ( ) ) return new Double ( s ) ; } ( ( ) ) return s ; } ( ( ) ) return new java io File ( s ) ; } ( ( ) ( ) ) return new Object s } ; } return getValueFromPropertyEditorManager (, propertyName, s ) ; } } ( ) ( ) ; } }<CODESPLIT>{<CODESPLIT>0
public boolean isGeneralInstance ( ) { ; ( ) = this generalInstance ; } ( ( ) ) getParent (General ( ; } return ; }<CODESPLIT>Getter method for the instance variable { @link #generalInstance } .<CODESPLIT>1
public List CmsPropertyConfig > getPropertyConfiguration ( ) { parent parent ( ) ; parentProperties ; ( ( )DiscardInherited ( ) ) parentProperties parent ( ) ; } parentProperties emptyList ( ) ; } combine ( parentPropertiesOwnPropertyConfigurations ( ) ) ; return result ; }<CODESPLIT>Gets the configuration for the available properties . <p ><CODESPLIT>1
public static void removeConsecutiveSeparators ( JPopupMenu popupMenu ) { ( ( ) ) (Popup ( popup ( ) ) ) (Popup ( popup ( ) ) ) popup remove ( ; } } } }<CODESPLIT>Removes all top separators from the given pop up menu . <p > For example calling the method on the given menu : <pre > Separator Separator Menu Entry Separator Menu Entry Separator Menu Entry < / pre > would result in : <pre > Menu Entry Separator Menu Entry Separator Menu Entry < / pre ><CODESPLIT>0
protected void writeListNumbers ( final OutputStream result ) throws IOException { ( write ( Rtf LIST write (ByteArray ( ; } }<CODESPLIT>Write the indentation values for this <code > RtfList< / code > .<CODESPLIT>0
private String buildInternalForm ( ) { StringBuffer result new StringBuffer ( ) ; resource null ; internal ; resource ( ) readResource ( getParamResource ( ) CmsResourceFilter ALL ) ; internal resourceInternal ( ) ; } ( ) ( ( ) ) ; } ( ( resource ) ( resource isFile ( ) ) ) (form action ) ( getDialogUri ( ) ) ( methodpost nameinternal ) ; (table border0 ) ; ( ) ; (dialogpermissioncell ) ( key (PERMISSIONINTERNAL0 ) ) ; (input typecheckbox name ) ; (INTERNAL ) ; ( value ) ; ( internal ) ( checked ) ; } (Editable ( ) ) ( disableddisabled ) ; } ( ) ; (Editable ( ) ) (input typesubmitdialogbutton value ) ( key (LABELSET0 ) ) ( ) ; } ( ) ; ( ) ; (table ) ;Action (INTERNAL ) ; setParamType ( null ) ; setParam ( null ) ; ( paramsAsHidden ( ) ) ; (form ) ; } return result. toString ( ) ; }<CODESPLIT>Builds a String with HTML code to display the form to add a new access control entry for the current resource . <p ><CODESPLIT>1
public withIntegrationResponses ( java Map String,ResponseResponses ) {ResponsesResponses }<CODESPLIT><p > Specifies the integration s responses . < / p > <div class = remarks > <p / > <h4 > Example : Get integration responses of a method< / h4 > <h5 > Request< / h5 > <p / ><CODESPLIT>1
public static String getStateStyle ( CmsResourceState state ) { ; ( ( ( stateStyle OpenCmsThemeDELETED ; } ( ( stateStyle OpenCmsThemeNEW ; } ( ( stateStyle OpenCmsThemeCHANGED ; } } return stateStyle ; }<CODESPLIT>Gets the CSS style name for the given resource state . <p ><CODESPLIT>1
public CloseableResource BlockMasterClient acquireBlockMasterClientResource ( ) { returnMaster (Master acquire ( Override public void close ( ) { release } } }<CODESPLIT>Releases a block worker client to the client pools .<CODESPLIT>0
public void setRecommendations ( java util Collection ReservationPurchaseRecomm recommendations ) { ( recommend ; return ; } recommend javaPurchaseRecomm ( recommend ; }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public static Point findImage ( BufferedImage image, BufferedImage findme, double tolerance ) { ( ; ( ; ( ( ; ( ; ( return findImage ( getRGB ( image ), image, imageHeight, getRGB ( find ), find, findHeight, tolerance ) ; } } return null ; }<CODESPLIT>Gets the RGB pixels for the given image into a new array .<CODESPLIT>0
@ SuppressWarnings (unchecked ) protected void fireEntryRemoved ( K key, V value ) { ( listeners ) ( this listenersListeners ( ) ) listenerRemoved ( value ) ; } } }<CODESPLIT>Fire the removal event .<CODESPLIT>1
public void setWelcomeFiles ( String [ ] welcomeFiles ) { ( welcome welcome welcome welcome } }<CODESPLIT>CHECKSTYLE : OFF<CODESPLIT>0
public static void setDebugConfigs ( OneProperties debugConfigsObj, String debugConfigAbsoluteClassPath ) { ( ConfigsConfigsConfigsObj ; } (ClassPath ConfigsConfigAbsoluteClassPathConfigAbsoluteClassPath ;Configs initConfigs (ClassPath ; } (Configs initConfigs (ClassPath ; } }<CODESPLIT><p > Set self define debug configs . < / p > Can use self debug configs path or self class extends { @link OneProperties } .<CODESPLIT>1
public Optional Style getStyle ( String styleName ) { styleName ; ( return this styleParser loadStyle ( this, thisHttpRequest, style ) ; } return empty ( ) ; } }<CODESPLIT>Retrieve the configuration of the named template .<CODESPLIT>0
@ Override public ListUsageLicense listUsageLicense ( ListUsageLicenseConfigurationRequest request beforeClientExecution executeListUsage ( request<CODESPLIT><p > Modifies the attributes of an existing license configuration object . A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager . Components include specifications for the license type ( Instances cores sockets VCPUs ) tenancy ( shared or Dedicated Host ) host affinity ( how long a VM is associated with a host ) the number of licenses purchased and used . < / p ><CODESPLIT>0
publicConsumerGroup createEventConsumerGroup ( String, String resourceName, StringEndpointName, String name ) { createEventWithServiceResponseAsync ( toBlocking ( ( body ( }<CODESPLIT>Add a consumer group to an Event Hub - compatible endpoint in an IoT hub . Add a consumer group to an Event Hub - compatible endpoint in an IoT hub .<CODESPLIT>1
public ConstantInfo addConstant ( ConstantInfo constant ) { Constant ( Constant ) ( constant ) ; ( info ) return info ; } constant ( ) ; (IndexedPreserve )Indexed ( ) ;Indexed ( ) ;Indexed ( ) ; } ( constant constant ) ;Count ; return constant ; }<CODESPLIT>Perform an HTTP GET at the given path returning the results of the response .<CODESPLIT>0
@ Override public void visit ( Column column ) { ( ) ; ( ( ) ( ) ) setValue ( ( ) BOOLEAN ) ; } }<CODESPLIT>Booleans are not recognized by the parser but are seen as column names .<CODESPLIT>1
private HodSearchResult addDomain ( final Iterable > indexIdentifiers, final HodSearchResult document ) { document ( ) ; ; (Identifiers ) ( ( ( ) ) ) ( ) ; } } ( )NAMES contains ( ) ( ) ; } return document toBuilder ( ) domain ( domain ) build ( ) ; }<CODESPLIT>Add a domain to a FindDocument given the collection of indexes which were queried against to return it from HOD<CODESPLIT>1
private URI initiateResumableUpload ( URI batchJobUploadUrl ) throws BatchJobException { HttpRequestFactory requestFactory = httpTransportFactory ( req { headers createHttpHeaders ( ) ; headers ) ; headers ) ; headers ) ;Logging ) ; } ) ; requestFactory buildPostRequest ( ( batchUpload Empty ( ; httpRequest execute ( ) ; ( ( ) ( ) ( ) ) (Initiate upload Res upload URI ) ; } return URI create ( getHeaders ( ) getLocation ( ) ) ; } ( ) ( initiate upload ) ; } }<CODESPLIT>Post - processes the request content to conform to the requirements of Google Cloud Storage .<CODESPLIT>0
protected String getSelectedValue ( CmsObject cms, List CmsSelectWidgetOption selectOptions, String currentValue ) { currentValue ; ( (SelectSelect getDefault ( select ( ( ; } } return paramValue ; }<CODESPLIT>Returns the currently selected value of the select widget . <p ><CODESPLIT>1
public void marshall ( ListBootstrapActionsRequest listBootstrapActionsRequest, ProtocolMarshaller protocolMarshaller ) { (Bootstrap ) SdkClientException ( marshall(...)" ) } protocolMarshaller marshall ( listBootstrapActions (BINDING ; protocolMarshaller marshall ( listBootstrapActions getMark ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public static LicenseApi licenseApiFactory ( String pathToLicense ) { ( ( return LicenseApi ( ) Override public boolean initializeFromFile ( File license ) { return true } Override public boolean isAnyKindOfTrial ( ) { return false } Override public boolean isProTrial ( ) { return false } Override public boolean isEnterpriseTrial ( ) { return false } Override public int maxHostcount ( ) { return Integer } Override public Calendar expires ( ) { ( ( return } Override public boolean verify ( ) { return true } Override public boolean isDrReplicationAllowed ( ) { return false } Override public boolean isDrActiveActiveAllowed ( ) { return false } Override public boolean isCommandLoggingAllowed ( ) { return false } Override public boolean isAWSMarketplace ( ) { return false } Override public boolean isEnterprise ( ) { return false } Override public boolean isPro ( ) { return false } Override public String license ( ) { returnV } Override public Calendar issued ( ) { ( return } Override public String note ( ) { return "" } Override public boolean hardExpiration ( ) { return false } Override public boolean secondaryInitialization ( ) { return true } } ; }set ( return null } ; ( ( return null } ( initializeFromFile ( return null } ( verify ( verify return null } } ( License lex return null } return licenseApi ; }<CODESPLIT>Simple code to copy a file from one place to another ... Java should have this built in ... stupid java ...<CODESPLIT>0
@ Override publicInstanceStartTime modifyInstanceStartTime (InstanceStartTime request ) beforeClientExecution executeStartTime ( request }<CODESPLIT><p > Modifies the placement attributes for a specified instance . You can do the following : < / p > <ul > <li > <p > Modify the affinity between an instance and a <a href = https : // docs . aws . amazon . com / AWSEC2 / latest / UserGuide / dedicated - hosts - overview . html > Dedicated Host< / a > . When affinity is set to <code > host< / code > and the instance is not associated with a specific Dedicated Host the next time the instance is launched it is automatically associated with the host on which it lands . If the instance is restarted or rebooted this relationship persists . < / p > < / li > <li > <p > Change the Dedicated Host with which an instance is associated . < / p > < / li > <li > <p > Change the instance tenancy of an instance from <code > host< / code > to <code > dedicated< / code > or from <code > dedicated< / code > to <code > host< / code > . < / p > < / li > <li > <p > Move an instance to or from a <a href = https : // docs . aws . amazon . com / AWSEC2 / latest / UserGuide / placement - groups . html > placement group< / a > . < / p > < / li > < / ul > <p > At least one attribute for affinity host ID tenancy or placement group name must be specified in the request . Affinity and tenancy can be modified in the same request . < / p > <p > To modify the host ID tenancy placement group or partition for an instance the instance must be in the <code > stopped< / code > state . < / p ><CODESPLIT>0
@ public static1,2IntObjPredicate1,2 objIntObjPredicate ( ConsumerIntObjPredicate1,2 consumer )Int ( consumer }<CODESPLIT>One of ways of creating builder . This might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .<CODESPLIT>1
public InterceptorsType EjbJarDescriptor > getOrCreateInterceptors ( ) { model getOrCreate (intercept ) ; Inter interceptors Inter ( thisintercept model ) ; return interceptors ; }<CODESPLIT>If not already created a new <code > interceptors< / code > element with the given value will be created . Otherwise the existing <code > interceptors< / code > element will be returned .<CODESPLIT>1
protected static Action findAction ( EObject grammarComponent, String assignmentName ) { ( ( grammar ( ( ( ( ( ) ) ) return action ; } } } return null ; }<CODESPLIT>Replies the assignment component with the given nazme in the given grammar component .<CODESPLIT>1
public int getUnsignedMediumInt ( ) { getUnsigned ( ; getUnsigned ( ; getUnsigned ( ) ; (is ) return ( ) ( 8 ) ; } return ( ) ( 8 ) ; } }<CODESPLIT>Returns an unsigned three - byte medium int from the buffer at the current position<CODESPLIT>1
public void rollback ( ) {Rolling back modifyAttributes ) ldapOperations modifyAttributes ( compModifications ) ; } ( ) rollback ModifyAttributes dn dn ) } }<CODESPLIT>/ *<CODESPLIT>1
static formProperty ( uri, String localName ) form ( create ( localName }<CODESPLIT>TODO : marked deprecated by original implementor<CODESPLIT>0
@ Override public synchronized void beginTransaction ( ) throws DatabaseEngineRuntimeException { getConnection ( ) ; (Commit ( ) ) transaction active ) return ; }Commit ) ; } ( ) ( starting transaction ) ; } }<CODESPLIT>Closes a { @link MappedEntity } logging a warning if an { @link Exception } is thrown . <p > It flushes before closing the { @link MappedEntity } .<CODESPLIT>0
@ SuppressWarnings (unchecked ) public List < io.oo. models. Job > getAllJobs ( ) throws MangooSchedulerException { requireNonNull ( this quScheduler RequiredUL toString ( ) ) ; models Job jobs new ( ) ; ( getAll ( ) ) triggers ( ) this quSchedulerTriggers ( job ) ; ( ) ;SchedulerTrigger ( ( ) ) ; active ( trigger ) ; jobs add ( new models Job ( active job ( ) trigger getDescription ( ) trigger getNext ( ) trigger getPrevious ( ) ) ) ; } } ( )Scheduler ( ) ; } return jobs ; }<CODESPLIT>Pauses a job by a given name @param name The name of the job to pause<CODESPLIT>0
public void flush ( ) { ArrayList batches this incomplete all ( ) ;Records ; ( batch batches ) batch ( ) size ( ) ; } (Flush batches with {} records batches ( )OutRecords ) ; ( batch batches ) batch await ( ) ; } } ( ) ( flushing batches ) } }<CODESPLIT>This will block until all the incomplete batches are acknowledged<CODESPLIT>1
static double computeAngularSimilar ( DoubleTuple t0, DoubleTuple t1 ) { ( computeSimilar ( }<CODESPLIT>Get the keysize . If no key size specified this will return the default key size .<CODESPLIT>0
public static boolean xor ( boolean... array ) { ( ArrayUtil ( ) ) IllegalArgumentException ( ) } ; ( ) result element ; } return ; }<CODESPLIT>对Boolean数组取或<CODESPLIT>0
@ ( ) public staticSharedContextUser getUserContext ( ) { return (Shared ) getInstance ( ) getShared ( ( ) ) }<CODESPLIT>Returns the managed user context .<CODESPLIT>1
public void copySeleniumCookies ( Set Cookie browserCookies, CookieStore cookieStore ) { ( convert ( browser add ( } }<CODESPLIT>Converts Selenium cookie to Apache http client .<CODESPLIT>0
private Block wrapInMacroMarker ( MacroBlock macroBlockToWrap, List BlockBlocks ) { returnMarker ( ( ) getParameters ( ) getContent ( ) isIn ( ) ) }<CODESPLIT>TODO : support more than strings<CODESPLIT>0
public void abort ( final Executor exec ) throws SQLException { ( ( executor ) } ( return ; } closed ; }<CODESPLIT>アノテーションを元にフォーマッタを作成する。<CODESPLIT>0
public JsonValue generalJsonValueProducer ( InjectionPoint ip ) { ( ; ( ; ( ; return json ; }<CODESPLIT>Return the indicated claim value as a JsonValue<CODESPLIT>1
@ Override public int get ( TemporalField field ) { ( ) ( ( ) field ) (Seconds ) ; return ( )Seconds ( ) ; } return dateTime get ( field ) ; } return Temporal super get ( field ) ; }<CODESPLIT>Gets the value of the specified field from this date - time as an { @code int } . <p > This queries this date - time for the value of the specified field . The returned value will always be within the valid range of values for the field . If it is not possible to return the value because the field is not supported or for some other reason an exception is thrown . <p > If the field is a { @link ChronoField } then the query is implemented here . The { @link #isSupported ( TemporalField ) supported fields } will return valid values based on this date - time except { @code NANO_OF_DAY } { @code MICRO_OF_DAY } { @code EPOCH_DAY } { @code PROLEPTIC_MONTH } and { @code INSTANT_SECONDS } which are too large to fit in an { @code int } and throw a { @code DateTimeException } . All other { @code ChronoField } instances will throw an { @code UnsupportedTemporalTypeException } . <p > If the field is not a { @code ChronoField } then the result of this method is obtained by invoking { @code TemporalField . getFrom ( TemporalAccessor ) } passing { @code this } as the argument . Whether the value can be obtained and what the value represents is determined by the field .<CODESPLIT>1
@ Override public void relocate ( ) { = 200 = ; = ( this ( ) ) ; = ( this ( ) ) ; enableSQL setLocation ( ) ; sqlLabel setLocation ( ) ; sql setLocation ( ) ; sqlLabel setLocation ( ) ; sqlField setLocation ( ) ; sqlUserLabel setLocation ( ) ; sqlUserField setLocation ( ) ; sqlPasswordLabel setLocation (30 ) ; sqlPasswordField setLocation (30 ) ; enableZipEncodingCheckBox setLocation ( ) ; }<CODESPLIT>A call of this method should validate the positions of the panels components .<CODESPLIT>1
public void fixateDistorted ( ) { ( ) ( ) Cache cache getGrid ( ) ; computeAverage ( cache ) ; model computeDeformed ( cache ) ; } } }<CODESPLIT>Precompute the portion of the equation which only concerns the undistorted location of each point on the grid even the current undistorted location of each control point .<CODESPLIT>0
publicPatch get ( String, String name ) { getWithServiceResponseAsync ( toBlocking ( ( ( }<CODESPLIT>Create or replace the patching schedule for Redis cache ( requires Premium SKU ) .<CODESPLIT>0
@ Override public void eUnset ( int featureID ) { ( featureID ) AfplibPackageRG__LID (LID ) ; return ; AfplibPackageRG__ect ( ) ; return ; AfplibPackageRG__NAMEName (NAMEEDEFAULT ) ; return ; AfplibPackageRG__CPNAMECPName (NAMEEDEFAULT ) ; return ; AfplibPackageRG__NAMEName (CSNAMEEDEFAULT ) ; return ; AfplibPackageRG__Rot ( CHAREDEFAULT ) ; return ; } super eUnset ( featureID ) ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>0
@ Override public void convertParameter ( Path address, attributeName, ModelNode attributeValue, ModelNode operation, )<CODESPLIT>{<CODESPLIT>1
public IfClassAvailable Exclude T getOrCreateIfClassAvailable ( ) { childNode (available ; ( ( return IfClassAvailableImpl Exclude ( this,classavailable, childNode, ( ) ) ; } return createIfClassAvailable ( ) ; }<CODESPLIT>If not already created a new <code > if - class - available< / code > element will be created and returned . Otherwise the first existing <code > if - class - available< / code > element will be returned .<CODESPLIT>1
public static void setThreadPool ( ThreadPoolExecutor ) { ( shutdown ConTools pool pool } }<CODESPLIT>Sets thread pool to given size .<CODESPLIT>0
public ThymEngineConfigBuilder setMessageResolver (MessageResolver messageResolver ) {Resolvers clearResolvers ( ( return this }<CODESPLIT><p > Sets a single message resolver for this template engine . < / p > <p > Calling this method is equivalent to calling { @link #setMessageResolvers ( Set ) } passing a Set with only one message resolver . < / p > <p > This operation can only be executed before processing templates for the first time . Once a template is processed the template engine is considered to be <i > initialized< / i > and from then on any attempt to change its configuration will result in an exception . < / p ><CODESPLIT>1
public static GrayU8 labelToBinary ( GrayS32 labelImage, GrayU8 binaryImage, int numLabels, int... selected ) { ; ( ; } return labelToBinary ( label, binary,Blob ) ; }<CODESPLIT>Scans through the labeled image and adds the coordinate of each pixel that has been labeled to a list specific to its label .<CODESPLIT>0
public EClass getIfcFacetedBrep ( ) { ( ifcEClass ) ifcEClass ( EClass EPackage ( Ifc getEClassifiers ( ( 225 ; } return ifcFacetedBrepEClass ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>1
public void marshall ( DescribeDominantLanguageDetectionJobRequest describeDominantLanguageDetectionJobRequest, ProtocolMarshaller protocolMarshaller ) { (JobRequest ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public String getFileLink ( ) { ( returnJsp substituteLink (, getSitePath (resource ) ) } return "" ; } }<CODESPLIT>Gets a lazy map which maps locales to attachment beans for that locale . <p ><CODESPLIT>0
private List < Map < StreamStateHandle, OperatorStateHandle > > repartition ( GroupByStateNameResults nameToStateByMode, int newParallelism ) {HandleHandle mergeList new ( newParallelism ) ; (Parallelism ) mergeList add ( new ( ) ) ; }HandleHandle State nameDis nameBy getBy (Handle SPLBUTE ) ; ( nameDis newParallelism mergeList ) ;HandleStateHandle State nameUnionState nameStateBy getBy (StateHandle UNION ) ; repUnionState ( nameToUnionState mergeMapList ) ;StateHandleStateHandle State nameBroadcastState nameStateBy getBy (StateHandleCAST ) ; repBroadcastState ( nameToBroadcastState mergeMapList ) ; return mergeMapList ; }<CODESPLIT>Repartition SPLIT_DISTRIBUTE state .<CODESPLIT>0
private String normalizeParameters ( MultiValueMap < String, String > collectedParameters ) { MultiValueMap sortedParameters = new TreeMultiValueMap ( ) ; for (Parameters ( ) ( ) ( ) ), List ( ) ; collected = ( ) ; collectedValues = ( ) ; encodedValues = new ( collectedValues ( ) ) ; sortedEncodedParameters put (Encode ( collected ), encodedValues ) ; for (Values ( ) ( ) ) value = value ( ) ; encodedValues add ( value null oauth ( value ) ) ; } sort ( encodedValues ) ; } params = new ( ) ; for (Parameters ( ) ( ) ( ) ), List ( ) ; name = ( ) ; values = ( ) ; for ( values ( ) ( ) ) value = value ( ) ; params ( name ) ( ) ( value ) ; ( value hasNext ( ) ) params ( "&" ) ; } } ( hasNext ( ) ) paramsBuilder ( "&" ) ; } } return paramsBuilder. toString ( ) ; }<CODESPLIT>internal helpers<CODESPLIT>1
public void removePort ( TCPPort endPoint ) { ( TraceComponent ( ) tc ( ) ) ( tcremove endPoint ( ) ) ; } ( accept endPoint ( endPoint ; ( accept ) (100 acceptExceptions ) ( TraceComponent ( ) tc ( ) ) event ( tcIgnoring remove call on fatal selector path ) ; } ( TraceComponent ( ) tc ( ) ) ( tcremove ) ; } return ; } work ( REMOVE workSync ) ; (Sync ) ( TraceComponent ( ) tc ( ) ) Tr. event ( this tcPassing remove to selector endPoint ( ) ) ; } accept addWork ( ) ;Sync wait ( ) ; } ( ) } } ( accept sharedAccept acceptUsage ( ) ) sharedAccept ; } } (TCP to removed registered ) ; ( TraceComponent ( ) tc ( ) ) event ( tcThrow ) ; } (remove this ) ; ; } } ( TraceComponent ( ) tc ( ) ) ( tcremove ) ; } }<CODESPLIT>Removes an end point from the set of end points that we are accepting connections on . This has the effect of removing the server socket from the selector and closing it .<CODESPLIT>1
public Observable ExtendedServerBlobAudit createOrUpdateAsync ( String, String, ExtendedServerBlobAudit parameters ) { createOrUpdateWithServiceResponseAsync ( ( ServiceResponseBlobAuditBlobAudit ( Override public ExtendedServerBlobAudit ( ServiceResponse ExtendedServerBlobAudit ) { return body ( } } }<CODESPLIT>Creates or updates an extended server s blob auditing policy .<CODESPLIT>0
public Map String, String > getHeadersToMap ( Map String, String > map ) { ( ) ( ) map map ; forEach ( (0 ( ; return map0 ; }<CODESPLIT>获取指定的header值 没有返回默认值<CODESPLIT>0
public Artifact createArtifact ( String groupId, String artifactId ) { create (RELEASEjar }<CODESPLIT>Replies the dependencies for the given artifact .<CODESPLIT>0
@ ec xtext service SingletonBinding ( eager ) public Class ec xtext generator parser antlr debug validation SimpleAntlrJavaValidator bindSimpleAntlrJavaValidator ( ) { return generator parser debugAntlrJavaValidator }<CODESPLIT>contributed by org . eclipse . xtext . generator . validation . JavaValidatorFragment<CODESPLIT>1
public void marshall ( CreateDeploymentGroupRequest createDeploymentGroupRequest, ProtocolMarshaller protocolMarshaller ) { ( createGroupRequest ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( createDeployment ( )BINDING ) ; protocolMarshaller marshall (GroupName ( )BINDING ) ; protocolMarshaller marshall ( ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequestFilters ( )FILTERBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getOnFilters ( ) ONFILTERBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getAutoGroups ( ) AUTOGROUPSBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getService ( ) SERBINDING ) ; protocolMarshaller marshall (Trigger ( )BINDING ) ; protocolMarshaller marshall (Alarm ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getAutoRollbackConfiguration ( )BACKBINDING ) ; protocolMarshaller marshall ( ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getBlGreenDeploymentConfiguration ( )GREENBINDING ) ; protocolMarshaller marshall (LoadBalancer ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequestSet ( )SETBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequestServices ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getOnSet ( ) ONSETBINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public void prependHandler ( Nonnull final EJSEvent eJSEvent, Nonnull final IHasJSCode aNewHandler ) { ValueEnforcer notNull ( ) ; ValueEnforcer notNull (NewHandlerNewHandler ) ;Events ( ; ( ) a ( ) ;Events (Code ) ; }Code prepend (NewHandler ) ; }<CODESPLIT>Add an additional handler for the given JS event . If an existing handler is present the new handler is appended at front .<CODESPLIT>1
public static Nullable Pair Integer, Integer > decodeDimensions ( InputStream is ) { checkNotNull ( ; byteBuffer acquire ( ; ( byteBuffer ) byteBuffer allocate ( ; } BitmapFactory options BitmapFactory ( ; options ; options byteBuffer array ( ; decode ( null options ; return ( options outWidth - 1 options outHeight - 1 ) null ( options outWidth, options outHeight ) ; } release ( byteBuffer ; } }<CODESPLIT>Decodes the bounds of an image and returns its width and height or null if the size can t be determined<CODESPLIT>1
public static HttpResponse execute ( HttpRequestBase request ) IOException { ( request request createRedirect (Redirect ( build ( ; return execute ( request ) ; }<CODESPLIT>Execute http response .<CODESPLIT>1
private static void sort ( byte [ ] byteArray, int start, int end, boolean descending ) { ( return ; } ( ; Merge sort ( byteArray start descending Merge sort ( byteArray descending ( Merge merge ( byteArray start ; } Merge merge ( byteArray start ; } }<CODESPLIT>Merge two sorted arrays into a bigger array in ascending order . This routine runs in O ( n ) time .<CODESPLIT>0
public void writeThrowable ( OutputStream out, Throwable value ) throws IOException { ( out ; writeSerialized ( out ; ( ; printStackTrace ( ( ; writeString ( outTRACE ( ; ( out ) ; }<CODESPLIT>Encode a Throwable instance as JSON : { throwable : Base64 stackTrace : String }<CODESPLIT>1
protected String renderRadio ( FacesContext facesContext, UIInput uiComponent, String value, boolean disabled, boolean checked, boolean renderId, Integer itemNum ) throws IOException { clientId ( facesContext ) ; ( item ) clientId facesContext getNChar ( ) item ; ResponseWriter writer getResponseWriter ( ) ; writer startElement ( HTML ) ; ( itemId ) writer writeAttribute ( HTML itemId null ) ; } ( render ) writer writeAttribute ( HTML clientId null ) ; } writer writeAttribute ( HTML TYPE HTMLRADIO null ) ; writer writeAttribute ( HTML clientId null ) ; ( disabled ) writer writeAttribute ( HTML DIS HTML DIS null ) ; } ( checked ) writer writeAttribute ( HTML CHECK HTML CHECK null ) ; } ( ) writer writeAttribute ( HTML VALUE value null ) ; } writer writeAttribute ( HTML VALUE null ) ; } behaviors ; ( ui Client ) ( (Behavior ) ) getClientBehaviors ( ) ;Properties ; (CommonPropertiesOptim ( ) )PropertiesProperty getCommonProperties ( ) ; } ( behaviors ( )CommonPropertiesOptim ( ) )Property renderChangeEventProperty ( writerProperties ) ;Property renderEventProperties ( writerProperties ) ;Property renderFieldEventPropertiesWithoutOnchange ( writerProperties ) ; } renderBehaviorOnchangeEventHandler ( writer ) ; (CommonEventsOptim ( ) )EventsEvent getCommonEvents ( ) ;Event renderBehaviorEventHandlers ( writerPropertiesEvents ) ;Event renderBehaviorFieldEventHandlersWithoutOnchange ( writerPropertiesEventsComponent ) ; } renderBehaviorEventHandlers ( writerComponent ) ; renderBehaviorFieldEventHandlersWithoutOnchange ( writerComponent ) ; } } renderHTMLAttributes ( writerComponent HTMLHUATTRIBUTESOUTDISABLEDANDANDEVENTS ) ; } renderHTMLAttributes ( writerComponent HTMLHUATTRIBUTESOUTDISABLEDAND ) ; } ( ( ui ) ) writer writeAttribute (faces render html HTML DIS Boolean TRUE null ) ; } writer endElement ( HTML ) ; return itemId ; }<CODESPLIT>Renders the given SelectItem ( Group )<CODESPLIT>0
public DataSource getDataSource ( String dataSourceName ) throws ServiceLocator { dataSource ; dataSource ( ( dataSource ; } ( ) ( ) } ( ) ( ) } return dataSource ; }<CODESPLIT>This method obtains the topc itself for a caller<CODESPLIT>0
private void buildHosts ( Map externalProperties, List < Server > servers, String persistenceUnit, final KunderaMetadata kunderaMetadata ) { persistenceMetadata kunderaMetadataMetadata ( )Metadata ( persistence ) ; Properties persistenceMetadata getProperties ( ) ; this. externalProperties = externalProperties ; hosts ; port ; ( external ) hosts (Properties (PropertiesNODE ; (Properties (Properties ; } ( hosts ) hosts ( (PropertiesNODE ; } ( ) ( (Properties ; } ( hosts ) buildHosts ( hostsAsString this hostsList ) ; } ( servers servers ( ) ) buildHosts ( servers this hostsList ) ; } }<CODESPLIT>Build host array .<CODESPLIT>1
public String getPresentationML ( ) throws IllegalStateException { ( message ) ( messageparse ) ; } ByteArrayOutputStream new ByteArrayOutputStream ( ) ; new ( ) ; out ( ) ; out ( ) ; messagePresent ( out ) ; out close ( ) ; return bout toString ( ) ; }<CODESPLIT>Parse a Markdown message into its MessageMLV2 representation . Generates document tree structures for serialization into output formats with the respective get () methods .<CODESPLIT>0
private void showFacebookAppError ( ) { makeText ( ( stringfacebook__errorfacebookSHORT ) show ( ) ; }<CODESPLIT>Links an account .<CODESPLIT>0
public staticX read ( InputStream input ) IOException { return reader ( ST read ( }<CODESPLIT>Read an GPX object from the given { @code input } stream .<CODESPLIT>0
@ Override protected void i_addRow ( Connection conn, String table, String [ ] columns, String [ ] values, boolean [ ] numeric ) throws SQLException { sql new ( ) ; sql (INSERT INTO ) ( table ) ( ) ; ( columns ) ( ) sql ( ) ; } sql ( columns ) ; } sql ( VALUES ) ; ( columns ) ( ) sql ( ) ; } ( values ) sql (NULL ) ; } sql ( ) ; } } sql ( ) ; ( ( ) ) (About execute sql toString ( ) ) ; } PreparedStatement stmt conn prepareStatement ( sql toString ( ) ) ; ; ( values ) ( values ) ; ( ) setNumeric ( stmt var columns values ) ; } stmt setString ( var values ) ; } } } stmt executeUpdate ( ) ; } closeStatement ( stmt ) ; } }<CODESPLIT>Get a long string which could be a TEXT or CLOB type . ( CLOBs require special handling -- this method normalizes the reading of them )<CODESPLIT>0
int getNextSentencePosition ( int numberOfParagraph, int startOfSentencePosition ) { ( ( ) return anEntry nextSentencePosition ; } } return - ; }<CODESPLIT>get Proofreading errors of sentence out of paragraph matches from cache<CODESPLIT>0
private void asyncRefresh ( ) { (Refresh ( executor submit ( new Runnable ( ) { Override public void run ( ) { refresh ( } asyncRefresh ; } } } ; } ( asyncRefresh ; } } }<CODESPLIT>Invokes the callback to get a new value .<CODESPLIT>0
@ Override public ScheduleExpression getSchedule ( ) { ( ) ; ( tc ( ) ) Tr ( tcgetSchedule this ) checkTimer ( ) ; PersistentTimerHandlerHandlerHandler (GET ) ;Expression parsedHandler getParsed ( ) ; (Schedule ) new ( a calendar toString ( ) ) ; ( tc ( ) ) Tr ( tcgetSchedule ) ; } ScheduleExpression scheduleJS getDefault ( )ObjectCop copy ( parsed getSchedule ( ) ) ; ( tc ( ) ) Tr ( tcgetSchedule schedule ) return schedule ; }<CODESPLIT>Query whether this timer has persistent semantics .<CODESPLIT>0
public void marshall ( OperatingSystem operatingSystem, ProtocolMarshaller protocolMarshaller ) { ( ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( ( )BINDING ) ; protocolMarshaller marshall ( ( )BINDING ) ; protocolMarshaller marshall (System ( )BINDING ) ; protocolMarshaller marshall (System ( )BINDING ) ; protocolMarshaller marshall (System ( )BINDING ) ; protocolMarshaller marshall (System ( )BINDING ) ; protocolMarshaller marshall (System getSupported ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
private static void resolveServerConfig ( ServerConfig serverConfig ) { serverConfig getBound ( ) ; ( ) serverConfig ( ) ; ( ( ) ) getLocal ( ) ; ) ; boundHost = SystemInfo. isWindows ( ) host : NetUtils. ANY ; } boundHost = host ; } ) ; } ( ( ) ) serverConfig ( ) ; getAvailable (Configs (Options ) ) ; ( ) ( ( ) ). info (Changed port from {} to {} because the config port is disabledPort port ) ; } ) ; } } }<CODESPLIT>初始化Server实例<CODESPLIT>0
public static String blur ( int radius, int sigma ) { ( ) IllegalArgumentException ( ) } ( ) IllegalArgumentException ( ) ; } ( ) IllegalArgumentException (Sigma ) ; } return FILTERBLUR + "(" + radius + "," + sigma + ; }<CODESPLIT>This filter uses a 9 - patch to overlay the image .<CODESPLIT>0
@ Override public void send ( Nonnull String data ) IllegalStateException { check send }<CODESPLIT>{<CODESPLIT>0
public void throttle ( boolean verbose ) { ( System ( ) this LastCheck 5000 ) ( this End ( ) this Start ( ) ) observedLatency ( ) ( this EndDuration ( ) this StartDuration ( ) ) ( ) ( this End getExecutionCount ( ) this Start getExecutionCount ( ) ) ; double tuningLatency = observedLatency ; el = thisLatencyBuckets ( ) ; = this StartLatencyBuckets ( ) ; = this getExecution ( ) this Start getExecution ( ) ; el = ; for ( )sum += ; } = ; for ( )sum += ; } ( ( ( double ) ( ) ( double ) ) ) outDuration = ; out = ; for ( )Count += ( ) ; ( ) outDuration ( ) ; outDuration ( ) ; } tuningLatency ( ) ( this EndDuration ( ) this StartDuration ( ) outlierDuration ) ( ) ( this End getExecutionCount ( ) this Start getExecutionCount ( ) outlierExecutionCount ) ; } oldRate = this Rate ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; (uningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( verboseRate this Rate ) System out printf ( Adjustcent Latency this DateFormat format ( Date ( round ( ( System ( ) this StartTime ) ) ) ) (Rate this Rate UPDOWN ) ( double ) this RateuningLatency ) ; } this Start ( PerCounter ) this End clone ( ) ; this End =ConnectionPoolStatistics ( this Connection ) ( this ) ; this LastCheck ( ) ; } this throttle ( this ) ; }<CODESPLIT>Throttle the execution process and re - adjust the rate requirement on the fly . The limiter will automatically re - adjust the rate internally by using a basic { @link RateLimiter } after analysis of the latency data gathered from the performance tracking .<CODESPLIT>1
private PrintStream createOutputStream ( ) { ( output ) ( ; ( ; ( ) return PrintStream ( bos, false, encoding ) ; } return PrintStream ( bos, false ) ; } } ( ) IllegalArgumentException ( ( ) ) } }System ; ( ) return PrintStream ( System out, false, encoding ) ; } ( ) } } return System out ; }<CODESPLIT>Utility method to skip a given amount of bytes from the input stream . This will return the index after the skip ( which may or may not be able to skip the entire requested amount ) .<CODESPLIT>0
public static boolean areNotEmpty ( String... values ) { ; ( values values ) result = false ; } ( ( ; } } return ; }<CODESPLIT>检查指定的字符串列表是否不为空。<CODESPLIT>1
public static String getEncodedServletURI ( HttpServletRequest request ) { request getServlet ( ) ; contextPath request ( ) ; ( ( ) ) return contextPath + servletPath ; } contextPath contextPath ( ) ; request request getRequest ( ) ; requestUri request ( ) ; ( contextPath ) ; requestUriChar contextPath ; ( ( ) ) ( ) requestUriChar copyFragment ( requestUri requestUriChar ) ; ( ) ; } } requestUriChar copyFragment ( requestUri requestUriChar servlet ) ; return servletURI toString ( ) ; }<CODESPLIT>Get request s servlet URI encoded based on results from { @link HttpServletRequest#getContextPath () } and { @link HttpServletRequest#getRequestURI () } which are both encoded URI / path and { @link HttpServletRequest#getServletPath () } which is DECODED path . We cannot just concatenate context path and servlet path to get the proper result because of these encoding / decoding differences especially if the Servlet path contains encoded characters . @param request @return servlet URI ( meant to be equivalent to contextPath + URLEncoded ( servletPath ))<CODESPLIT>1
public void setMode (Mode mode ) { this mode mode ( ( this caseSensitive false ; } }<CODESPLIT>This method will try to avoid creating new strings for each structure name ( element / attribute )<CODESPLIT>0
private void createReportMap ( ) { entering ( ) ; SumizedReportMap = new Sumized ( ) ;ReportMap put (Fulluite,Suites ) ;ReportMap put (Test,Tests ) ;ReportMap put (Class,Classes ) ;ReportMap put (Group,Groups ) ; ReportMap Sumized testSummaryReport = new ReportMap Sumized ( ReportNames TESTSUMREPORT ( )ReportMap ) ; fullReportMap add ( testSummaryReport ) ; Sumized groupsClone = new Sumized (Groups ) ; Sumized class ; SumizedGroup = new Sumized ( ) ;Group (CaseResult ) ; groupsClone add ( naGroupData ) ;ReportMap = new Sumized ( ) ; for ( groups ) sGroupName = group gets ( ) ; class = new Sumized ( ) ; for ( ( ) ) (GroupClassName ( ( ) ) ( ) ) add ( mpClass (ClassName ) ) ; } }ReportMap put ( sGroupName,Data ) ; } ReportMap SumizedReport = new ReportMap Sumized ( ReportNames GROUPSUMREPORT ( )ReportMap ) ; fullReportMap add ( secondReport ) ;DetailReportMap = new ( ) ;DetailReportMap put (Passed List, tcPassedData ) ; subDetailReportMap put (Failed List, tcFailedData ) ; subDetailReportMap put (Skipped List, tcSkippedData ) ; ReportMap thirdReport = new ReportMap ( ReportNames TEST ( )DetailReportMap ) ; fullReportMap add ( thirdReport ) ;Reports = new ( ) ;Reports put (, tcData ) ; ReportMapReport = new ReportMap ( ReportNames DEFREPORT ( )Reports ) ; fullReportMap add (Report ) ; Base = ( Base ) fullMap ( fullMap ( ) )Generated ( ) ( ) ( ) ;Titles = (ClassMethodTestcase idTest DescriptionGroup]" takenOutputErrorError Details ) ;Titles (Titles ) ;TestOutputReportMap = new ( ) ; fTestOutputSubReportMap put (Test Output, tcOutputData ) ; ReportMapReport = new ReportMap ( ReportNames TESTOUTPUTETAILSREPORT ( )TestOutputReportMap ) ; fullReportMap add ( fReportSheet ) ; ( ) ; }<CODESPLIT>Generates all summarized counts for various reports<CODESPLIT>0
@ Override public ExtensionProcessor createExtensionProcessor ( IServletContext servletContext ) throws Exception { module ( ( WebAppConfigExtended ) ( servletContext getWebAppConfig ( ) ) ) getMetaData ( ) ;ModuleModule ( module ) ; (MetaData ) return null ; }PersistentCache overlayCache servletContext getModule ( ) adapt (PersistentCache ) ;ModuleInfoModuleInfo (ModuleInfo ) overlayCache getFromCache (ModuleInfo ) ; ( ( ) ) ( tc ( ) ) ( tcNo JAX service in the module create service processor ) ; } return null ; } publisherModule servletContext getModule ( ) ; Jax publisher new Jax ( publisher Jax getWeb ( publisher ) ) ; publisher ( SER servletContext ) ; publisher setAttribute ( JaxBU new ( servletContext getModule ( ) adapt (Annotations ) getInfo ( ) servletContext getModule ( ) ) ) ; WebApp webApp = ( WebApp ) servletContext ; publisher ( webAppCollab ( ) getWebCollab ( ) ) ; endpoint endpointSR getServiceWithException ( ) ; (Infos ( ) ) endpoint publish ( endpointInfo publisher ) ; } (AppConfig )WebConfigurator configure (ModuleInfo servletContext getWebAppConfig ( ) ) ; } return new JaxRsExtensionProcessor ( servletContext ) ; }<CODESPLIT>{<CODESPLIT>1
private void forEveryEdge ( EdgeVisitor visitor ) { = getFrom ( ) ; = edgeIds ( ) ;Edge =Iterator NO ; for ( )IteratorState = graphEdgeIteratorState (Ids ( ) ) ; (Base ) (EdgeIds ( ) empty requested node array index edgesIds ( ) ) ;Base getBase ( ) ; = graphEdgeIteratorState (Edge ( ) ) ; visitor (Base,, prevEdgeId ) ;Edge =Edge ( ) ; } visitor finish ( ) ; }<CODESPLIT>Returns the list of all edges .<CODESPLIT>0
public staticSetup guessSetup ( Key [ ] fkeys, boolean singleQuote, int checkHeader ) { guessSetup (keysSetup (UEINFOUEQuote checkHeaderUE nullWriter }<CODESPLIT>Discover the parse setup needed to correctly parse all files . This takes a ParseSetup as guidance . Each file is examined individually and then results merged . If a conflict exists between any results all files are re - examined using the best guess from the first examination .<CODESPLIT>0
public static boolean isEnabled ( State state ) { return Boolean ( state ( MET, DEFAULT ) ) }<CODESPLIT>Check whether metrics collection and reporting are enabled or not .<CODESPLIT>1
static, ID, ID createDao ( ConnectionSource connectionSource, Class clazz ) SQLException { returnDaoImpl ( connection } }<CODESPLIT>Helper method to create a Dao object without having to define a class . Dao classes are supposed to be convenient but if you have a lot of classes they can seem to be a pain .<CODESPLIT>0
public void setCode ( String timecode ) throws Timecode Timecode { clear ( ; setHours ( ( ; setMinutes ( ( ; setSeconds ( ( ; setFrames ( ( ; ( ( setSamples ( ( ; setFramesSecond ( ; } ( ) } } normalize ( ; }<CODESPLIT>Sets the object based on a string in the form HH : MM : SS : FF<CODESPLIT>1
private void extractMessage ( JsonObject object ) { meta object (meta ; ( )Primitive metaPrimitive ( ; ( ) this message ( ; return ; } }Primitive error objectPrimitive (error ; ( ) this message error ( ; return ; } this message =Unknown Error ; }<CODESPLIT>Performs an XAuth authentication .<CODESPLIT>0
public static base_response update ( nitro_service client, gslb resource ) throws Exception { ( ; lentrytimeout resource lentrytimeout ;tolerance resourcetolerance ; l resource l ;6 resource v6 ; lorder resource lorder ; dropl resource dropl ; return updateresource updateresource ( client ) ; }<CODESPLIT>Use this API to fetch lbvserver_tmtrafficpolicy_binding resources of given name .<CODESPLIT>0
protected synchronized void activate ( BundleContext context, Map < String, Object > props ) { jndiName ( ) props ( ) ; original ( ) props (value ) ; decode ( Boolean ) props (decode ) ; ( jndiName jndiName ( ) ( ) ) ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc to registerNDI jndiName jndiName and value both set ) ; } return ; } value original ; ( decode ) value Password decode ( ) ; } ( ) Tr error ( tcdecode ) ; } } parsed Literal parse ( value ) ; value parsed ( ) ( ) ; service decode new Decode ( original ) parsed ; Dictionary propertiesFor new ( ) ; propertiesForService (service jndiName ) ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tcRegisterNDI valueClassName value parsed andNDI name jndiName ) ; } this serviceRegistration context registerService ( valueClassName serviceObject propertiesForService ) ; }<CODESPLIT>Registers the JNDI service for the supplied properties as long as the jndiName and value are set<CODESPLIT>1
public List Map String, String getWObjectList (Class wClass ) {ObjectList ( ( }<CODESPLIT>Query a list of object data for an specific class <br ><CODESPLIT>1
public static void closeEL ( Transport t ) { ( ( ) close ( ) } ( )IfNecessary ( ; } }<CODESPLIT>close Writer without a Exception<CODESPLIT>1
public static ClassLoader ElementMatcher Junction isParentOf ( ClassLoader classLoader ) { return classLoaderSTR isBootstrapClassLoader ( ) ClassLoaderParent ( classLoader ) }<CODESPLIT>Matches all class loaders in the hierarchy of the matched class loader against a given matcher .<CODESPLIT>0
public void marshall ( BatchGetObjectAttributesResponse batchGetObjectAttributesResponse, ProtocolMarshaller protocolMarshaller ) { ( ) SdkClientException ( marshall(...)" ) } protocolMarshaller marshall (GetAttributes getAttributes ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public void handleInputStream ( final InputStream is ) throws IOException { (Handling input stream ) ; OutputStream os new FileOutputStream ( thisfile ) ; bytesWritten util Io copy ( os thiswrite ) ; (rote bytesWritten filefile ) ; } closeQuietly ( ) ; closeQuietly ( os ) ; } }<CODESPLIT>{<CODESPLIT>0
public ValidationData ruleSync ( List ValidationRule rules ) { rule ( ; rules ( rule { ( ; rule ( rule ; } ) ; this validationRules removeAll ( rule ; thisRules ( this validationRules ; this validationRules = ruleList ; this validation sort ( ( ; return this ; }<CODESPLIT>Find list parent validation data .<CODESPLIT>0
protected List String > getDataTypeStartWords ( ) { ( ) all ( ;StartWords addAll (Types ;StartWords addAll (StartWords ( ) ; } return allDataTypeStartWords ; }<CODESPLIT>Returns a list of data type start words which can be used to help identify a column definition sub - statement .<CODESPLIT>1
protected void setupToolbarElements ( JToolBar toolbar ) { = ; = new ( ) ; this addToolBarElements ( toolbar, TOLOCATIONSTART, ) ; toolbar add ( new ( Constant messages getString ( panelPrefixtoolbarcontextlabel ) )HelperGB ( ) ) ; add ( getContextSelectComboBox ( ) ( ) ) ; this addToolBarElements ( toolbar, TOLOCATIONSELECT, ) ; toolbar add ( new ( )HelperGB ( ) ) ; (Options ( ) ) add ( ( )Helper ( ) ) ; } this addToolBarElements ( toolbar, TOLOCATIONEND, ) ; }<CODESPLIT>Gets the Context select combo box .<CODESPLIT>0
private int parseTrailer ( byte [ ] input, int inOffset, List < WsByteBuffer > list ) throws DataFormatException { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tcParsing trailer offset this parse val this parseInt ) ; } in ; val ; ( this parse input ) ( this ) parseFirst ; parseInt ( ( ) ) parseFirst ; ( ( ) ) parseFirst ; val = ( val 16 ) | this. parseInt ; ( this checksum ( ) )Checksum does not match crc this. checksum. getValue ( ) trailer val ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc ) ; } release ( list ) ; ( ) ; } ( ( ) ) parseFirst ; val = ( val 16 ) | this. parseInt ; ( this infl getBytes ( ) val ) does not match inflater this. inflater. getBytes ( ) trailer val ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc ) ; } release ( list ) ; ( ) ; } this resetPro ; default : ; } ; parse ; } return offset ; }<CODESPLIT>Parse past the GZIP trailer information . This is the two ints for the CRC32 checksum validation .<CODESPLIT>1
public ObservableSecretBundle getDeletedSecretAsync ( String vaultBaseUrl, String secretName ) { returnWithServiceResponseAsync ( vaultBaseUrl ( ServiceResponse ( Override publicSecretBundle ( ServiceResponseSecretBundle ) { return body ( } } }<CODESPLIT>Permanently deletes the specified secret . The purge deleted secret operation removes the secret permanently without the possibility of recovery . This operation can only be enabled on a soft - delete enabled vault . This operation requires the secrets / purge permission .<CODESPLIT>0
public void addClassToId ( final Class < > clazz, final String id ) { notNull ( clazz,Class null ) ; hasText ( id,Alias ( null or contain only ) ; ( ( clazz ) ) IllegalArgumentException (Class clazz alias ( ( clazz ) set alias ) ; } ( id ( id ) ) IllegalArgumentException ( (Class ( ) clazz ) ; }To put ( clazz, id ) ; idToClass put ( id, clazz ) ; }<CODESPLIT>Adds single mapping : class < - > alias ( id ) .<CODESPLIT>1
void submit ( ) { action ; (All ( ) ) action = CmsFlexCache CLEAR_ONLINE_ALL ; } action = CmsFlexCache CLEAR_ONLINE_ENTRI ; } fire ( (CLE ( CACHE ( action ) ; }<CODESPLIT>Set defautl values to vaadin components . <p ><CODESPLIT>0
@ Override public Shutdown shutdown ( Shutdown request ) beforeClientExecution executeShutdown ( request }<CODESPLIT><p > Shuts down a gateway . To specify which gateway to shut down use the Amazon Resource Name ( ARN ) of the gateway in the body of your request . < / p > <p > The operation shuts down the gateway service component running in the gateway s virtual machine ( VM ) and not the host VM . < / p > <note > <p > If you want to shut down the VM it is recommended that you first shut down the gateway component in the VM to avoid unpredictable conditions . < / p > < / note > <p > After the gateway is shutdown you cannot call any other API except <a > StartGateway< / a > <a > DescribeGatewayInformation< / a > and <a > ListGateways< / a > . For more information see <a > ActivateGateway< / a > . Your applications cannot read from or write to the gateway s storage volumes and there are no snapshots taken . < / p > <note > <p > When you make a shutdown request you will get a <code > 200 OK< / code > success response immediately . However it might take some time for the gateway to shut down . You can call the <a > DescribeGatewayInformation< / a > API to check the status . For more information see <a > ActivateGateway< / a > . < / p > < / note > <p > If do not intend to use the gateway again you must delete the gateway ( using <a > DeleteGateway< / a > ) to no longer pay software charges associated with the gateway . < / p ><CODESPLIT>1
@ GuardedBy (monitor ) VisibleForTesting static MetricServiceClient createMetricServiceClient ( Nullable Credentials credentials ) throws IOException { settings newBuilder )rpc newBuilder ) ) build ) ) ; ( credentials ) settingsCredentials FixedCredentials create ) ) ; } return MetricServiceClient create ( settingsBuilder build ( ) ) ; }<CODESPLIT>Resets exporter to null . Used only for unit tests .<CODESPLIT>0
public final List Connection > getConnections ( final ConnectionMode connectionMode, final String dataSourceName, final int connectionSize ) throws SQLException { getDataSource ( ( ; checkState ( null dataSourceMissing dataSource ) ; Connection connections ; ( connections ( ; } Connection ; ( connections ( ) ) ( connections ) ( connection ) ; } ( connections ( ) ) ( connection ) ; addAll ( connections ) ; Connection create ( dataSource connection dataSource connection connections ( ) ) ; addAll (Connections ) ; ( cachedConnections putAll ( dataSourceConnections ) ; } } ( createConnections ( dataSource connection dataSource connection ) ) ; (Connections putAll ( dataSource ) ; } } return result ; }<CODESPLIT>Get database connections .<CODESPLIT>1
public void copyFrom ( TextImage source, startRowIndex, rows, startColumnIndex, columns, destinationRowOffset, destinationColumnOffset ) { copyTo }<CODESPLIT>Copies the content from a TextImage into this buffer .<CODESPLIT>1
public LocalDateTime minusWeeks ( long weeks ) { return ( weeks plusWeek ( plusWeek ( plusWeek ( weeks }<CODESPLIT>Returns a copy of this { @code LocalDateTime } with the specified number of months subtracted . <p > This method subtracts the specified amount from the months field in three steps : <ol > <li > Subtract the input months from the month - of - year field< / li > <li > Check if the resulting date would be invalid< / li > <li > Adjust the day - of - month to the last valid day if necessary< / li > < / ol > <p > For example 2007 - 03 - 31 minus one month would result in the invalid date 2007 - 04 - 31 . Instead of returning an invalid result the last valid day of the month 2007 - 04 - 30 is selected instead . <p > This instance is immutable and unaffected by this method call .<CODESPLIT>0
public static String concat ( String... strs ) { ; ( strs ( } return toString ( ) ; }<CODESPLIT>快速连接参数中的字符串 .<CODESPLIT>1
@ ( ) public static buildApplicationObject ( Class interfaceClass, Class extendedInterfaceClass, Class extendedInterfaceWrapperClass, Collection String classNamesIterator, defaultObject ) { return (ClassClass classNamesIterator default null }<CODESPLIT>Creates ApplicationObjects like NavigationHandler or StateManager and creates the right wrapping chain of the ApplicationObjects known as the decorator pattern .<CODESPLIT>0
@ Override public synchronized RecordStructure read ( long sessionId, long urlId ) throws DatabaseException {Read sessionId ;Read ; ( psRead executeQuery (Structure build ( ; return ; } } ( ) ( ) } }<CODESPLIT>This method initializes this<CODESPLIT>0
@ Override public final T process ( final Map String, Object > pAddParam, final T pEntity, final IRequestData pRequestData ) throws Exception { fieldRequestData getParameter (fieldName ) ; getter this getters ( ( ) field ) ; filePath ( ) getter ( ) ; ( filePath ) ( filePath ) ; ( ( ) delete ( ) ) ( delete file ) ; } } this delete ( pAddParam ) ; return null ; }<CODESPLIT><p > Process entity request . < / p ><CODESPLIT>1
protected int getTransactionIsolation ( ) { ( ; return val null - Integer parseInt ( val ) ; }<CODESPLIT>transactionIsolationオプションの指定<CODESPLIT>1
public static int krone ( BigInteger a, BigInteger p ) { ( kr ( }<CODESPLIT>Verifies this library is loaded properly .<CODESPLIT>0
private static void parseBounds ( JSONObject modelJSON, Shape current ) throws JSONException { ( modelJSON (bounds ) ) boundsObject modelJSONObject (bounds ) ; setBounds ( new ( new ( bounds (Right ) ( ) bounds (Right ) ( ) ) new ( bounds ( ) ( ) bounds ( ) ( ) ) ) ) ; } }<CODESPLIT>creates a point array of all dockers and add it to the current shape<CODESPLIT>0
@ Override public ParseResult parse ( Reader reader, AttributeSource parent ) throws IOException { new ( ) ; new ( ) ; buf new ; ; ( ( ( ) ) ) ( buf ) ; } Iterator < MtasUpdateRequestProcessorResultItem > iterator ; ( MtasUpdateRequest MtasUpdateRequest ( ( ) ) ) { getIterator ( ) ; ( iterator iterator hasNext ( ) ) strStringValue ( ) ; binBin ( ) ; } str ; bin ; close ( ) ; return res ; } parent clearAttributes ( ) ; ( ( ) ) MtasUpdateResult ( ) ; ( )TermAttributeatt parent addAttribute (TermAttribute ) ;att ( tokenTerm ) ; } (Flags )Attribute flags parent addAttribute (Attribute ) ; flagsFlags (Flags ) ; } ( )IncrementAttribute patt parent addAttribute (IncrementAttribute ) ; setPositionIncrement ( ) ; } (Payload ) PayloadAttribute parent addAttribute ( PayloadAttribute ) ; set ( new ( token ) ) ; } ( )Attribute parent addAttribute (Attribute ) ; offset (End ) ; } state parent captureState ( ) ; states add ( state clone ( ) ) ; parent clearAttributes ( ) ; } } ( ) ( ) } return res ; }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public String getMessage ( final String code ) { code ; ; ResourceBundle bundles ( ) ; ( bundles ) return bundles. getString ( code ) ; } ( ) ( error ) error = e ; } } } error ; ; }<CODESPLIT>An implementation of { @link Parser } s abstract { @link Parser#flatten ( Options String [] boolean ) flatten } method . <p > The following are the rules used by this flatten method . <ol > <li > if <code > stopAtNonOption< / code > is <b > true< / b > then do not burst anymore of <code > arguments< / code > entries just add each successive entry without further processing . Otherwise ignore <code > stopAtNonOption< / code > . < / li > <li > if the current <code > arguments< / code > entry is <b > -- < / b > just add the entry to the list of processed tokens< / li > <li > if the current <code > arguments< / code > entry is <b > - < / b > just add the entry to the list of processed tokens< / li > <li > if the current <code > arguments< / code > entry is two characters in length and the first character is <b > - < / b > then check if this is a valid { @link Option } id . If it is a valid id then add the entry to the list of processed tokens and set the current { @link Option } member . If it is not a valid id and <code > stopAtNonOption< / code > is true then the remaining entries are copied to the list of processed tokens . Otherwise the current entry is ignored . < / li > <li > if the current <code > arguments< / code > entry is more than two characters in length and the first character is <b > - < / b > then we need to burst the entry to determine its constituents . For more information on the bursting algorithm see { @link GroovyInternalPosixParser#burstToken ( String boolean ) burstToken } . < / li > <li > if the current <code > arguments< / code > entry is not handled by any of the previous rules then the entry is added to the list of processed tokens . < / li > < / ol ><CODESPLIT>0
@ Override public Iterable T findAll ( NonNull Sort sort ) { ( sortsort findAll ( ( ALL ( sort ; return operation find ( query, information getJava ( ), information getCollection ( ) ) ; }<CODESPLIT>Returns all entities sorted by the given options .<CODESPLIT>1
void loadConfigs ( ) throws IOException { loadConfig ( ; loadConfig ( ; system loadConfig ( ; (Fallback ( (Fallback ( system ( ) ; dumpdebugLogMER ) }<CODESPLIT>end of class ConfigSource<CODESPLIT>0
private void appendLine ( final String timeStampStr, final int indentLevel, final String line, final StringBuilder buf ) { ( timeStamp ) ; buf ( ) ; buf ( ( ) ) ; buf ( ) ; ( ; ( ) buf ( ) ; } (ashes ) buf ( ) ; } buf ( ) ; buf ( ) ; }<CODESPLIT>Add a child log node .<CODESPLIT>0
static public String createMonitor ( String monitorUrl, Node parserInstruction, String modifiesResponse, TECore core ) { monitors ( monitor ;Core ( ) ; ( ) ( ( ) ) ; ( ( ) ) ; } ( CONFIGConfigured monitor test ) ; return "" ; }<CODESPLIT>Monitor without parser that doesn t trigger a test<CODESPLIT>0
public void addRelationToResource ( CmsDbContext dbc, CmsResource resource, CmsResource target, CmsRelationType type, boolean importCase ) throws CmsException { ( ( ) ) ( ( ) ( remove ( ( ) ) remove ( ( ) ) ( ( ) ( ) ) ) ) ; } relation ( resource type ) ;Driver ( dbc ) createRelation ( dbc dbc ( ) ( ) ) ; ( ) ( dbc ( dbc resource ( )ADD { relationPath ( ) relationPath ( ) } ) false ) ; setDateLastModified ( dbc ( ) ) ; } }<CODESPLIT>Adds a resource to the given organizational unit . <p ><CODESPLIT>0
public void marshall ( AssociateProductWithPortfolioRequest associateProductWithPortfolioRequest, ProtocolMarshaller protocolMarshaller ) { ( associatePortfolio ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( associateWith ( )BINDING ) ; protocolMarshaller marshall ( associateWithPortfolio ( )BINDING ) ; protocolMarshaller marshall ( associateWithPortfolio ( )BINDING ) ; protocolMarshaller marshall ( associateWithPortfolioPortfolio ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT><p > To help organize your resources you can assign your own metadata to the resources that you create . Each tag is a key - value pair . < / p ><CODESPLIT>0
public static void swap ( int [ ] intArray1, int array1Index, int [ ] intArray2, int array2Index ) { ( array array )Array array ;Array arrayArray array ;Array array ; } }<CODESPLIT>Helper method that swaps all the elements of the arrays . This method runs in O ( <code > Math . min ( array1 . length array2 . length< / code > ) time .<CODESPLIT>1
public void marshall ( DeleteUserRequest deleteUserRequest, ProtocolMarshaller protocolMarshaller ) { ( deleteUserRequest ) SdkClientException ( marshall(...)" ) } protocolMarshaller marshall ( deleteUserRequest (BINDING ) ; protocolMarshaller marshall ( deleteUserRequest ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
protected void addWebuserCondition (SelectQuery select,OrganizationalUnit orgUnit, TableAlias users ) { ; ( ( webuserConditionTemplate %$s8 AND %$s ; } webuserConditionTemplate %$s8 OR %$s ; } ( users ( ( ; select addCondition (Condition }<CODESPLIT>Adds a check for the web user condition to an SQL query . <p ><CODESPLIT>1
void add ( LessExtend lessExtend, String [ ] mainSelector ) { (SelectorSelector ( ) ) mainSelectorExtend ( ) ; } mainSelector merge ( mainSelectorExtend ( ) ) ; } less ( ; ( lessExtendAll ( ) ) Less extend Less ( ) ; pollLast ( ) init (Selector ) ; { ( ) ; ( ) } all add ( extend ) ; } ( addLast ( ) ; } exact add (Selector mainSelector ) ; } }<CODESPLIT>Add to the given selectors all possible extends and return the resulting selectors .<CODESPLIT>0
JMFSchema [ ] getEncodingSchemas ( ) throws MessageEncodeFailedException { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ; JMFSchema result ;MFSchema ( (MFMessage ) headerPartPart ) ( ) ;MFSchema result null ; result result ; ( payload ) ( (MFMessage ) payloadPartPart ) ( ) ;Size length ; } result newMFSchema result ; ( ) ; ( payload ) ( ) ; } } (MF ) (JsObjectgetSchemas this new { new { MfpConstants._MESSAGE headerPart. jmfPart theMessage } new { MfpConstants._MESSAGE payloadPart. jmfPart theMessage } } ) ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ;Encode ( ) ; } ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ; return result ; }<CODESPLIT>Get a list of the JMF schemas needed to decode this message<CODESPLIT>1
public boolean add ( final int value ) { ( capacity ) (HashSet ) ; } ( value ) ; ( values missing ( values ) return false ; } index ( index ) ; } values index = value ; size return true ; }<CODESPLIT>Splits a { @link ClientMessage } into frames of a maximum size .<CODESPLIT>0
private void delete_obj_property ( Database database, String name, String type, String propname ) DevFailed { ( ( checkAccess ( array ; array ; arrayname ; deleteproperty ( database }<CODESPLIT>==========================================================================<CODESPLIT>1
public static int getCtrlOrMetaModifier ( ) { ( ( ; (Browser ( return ShortActionKey META ; } return ShortActionKey CTRL ; }<CODESPLIT>Dynamic styles for window .<CODESPLIT>0
public User resolveUser ( final long userId ) throws SQLException {Tries mark ( ;Cache ( userId ; ( )Cache mark ( ; return user ; } select ( ; ( )Cache ( ; } return user ; } }<CODESPLIT>Resolves a user by username possibly with the internal cache .<CODESPLIT>1
public static String buildCleanedParametersURIRepresentation ( org apache commons httpclient URI uri, SpiderParam HandleParametersOption handleParameters, boolean handleODataParametersVisited ) throws URIException { ( handle ( return uri toString ( ) ; } ( handle ( return createBaseUriWithCleanPath ( uri, handleParameters, handleDataParametersVisited ) ; } ( handle ( ) ( create ( uri handle handle ; ( uri ( ; ( ( ) ) ( ( ; } return toString ( ) ; } return uri toString ( ) ; }<CODESPLIT>Tells whether or not the given port is the default for the given scheme . <p > <strong > Note : < / strong > Only HTTP and HTTPS schemes are taken into account .<CODESPLIT>0
public int run ( String arg, boolean stdin, boolean force ) throws IOException { outputStream ; InputStream inputStream ; KeystoreWrapper keystoreWrapper ; ( ) CREATE ( ( ) ) proceed promptNo (An keystore already exists]" ) ; ( proceed false ) promptExit creating keystore ) return 0 ; } } keystore ( ) build ( ) ; outputStream openWrite ( ) ; save ( outputStream ) ; return 0 ; LIST ( ( ) ) prompt (ERROR ES Use command create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; load ( inputStream ) build ( ) ; ( list ( ) ) prompt ) } return 0 ; ADD ( ( ) ) prompt (ERROR ES Use command create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; load ( inputStream ) build ( ) ; ( keystore ( ) force false ) proceed promptNo (Setting already exists]" ) ; ( proceed false ) promptExit keystore ) return 0 ; } } ( stdin ) data prompt ( ) ;Secure ) ; } prompt readPassword (Enter value ) ; keystore setSecureSetting ( ( data ) ) ; fill ( ( ) ) ; } outputStream openWrite ( ) ; save ( outputStream ) ; return 0 ; REMOVE ( ( ) ) prompt (ERROR ES Use command create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; load ( inputStream ) build ( ) ; ( keystore ( ) false ) prompt (ERROR Setting in ) ; return ; } removeSecureSetting ( ) ; outputStream openWrite ( ) ; save ( outputStream ) ; return 0 ; default promptERROR command command ) ) return 7 ; } } ( eh ) promptERROR load keystore file eh ) ) return 8 ; } ( ) promptERROR load keystore file ) ) return ; } ( ) prompt (ERROR ( ) ) return 10 ; } ( outputStream ) outputStream close ( ) ; } ( inputStream ) inputStream close ( ) ; } } }<CODESPLIT>{<CODESPLIT>0
private boolean updateStreamBlacklist ( Set Tuple2 String, String processingBlacklist, Message message, Set String initialStreamIds ) { ; (Streams ( ( remove ( ( ; } processingBlacklist add ( ( message ( ( ; } } return addedStreams ; }<CODESPLIT>Evaluates all pipelines that apply to the given messages based on the current stream routing of the messages .<CODESPLIT>0
protected boolean isFireDrainableByClosing (Factory fireFactory ) { returnhoseReceiverhose (hose TimedShFirehoseFirehoseByClosing ( ( ( TimedShFirehosehose getDelegate ( (hoseFirehoseFirehoseByClosing ( ( (Firehosehose getDelegate ( }<CODESPLIT>Is a firehose from this factory drainable by closing it? If so we should drain on stopGracefully rather than abruptly stopping . <p > This is a hack to get around the fact that the Firehose and FirehoseFactory interfaces do not help us do this . <p > Protected for tests .<CODESPLIT>1
public boolean dispatchKeyEvent ( KeyEvent event ) { ( ( ( return controller dispatch ( ) ; } return false ; }<CODESPLIT>returns controller if a new device is found<CODESPLIT>0
public boolean isDerivation ( Type parent, Type child ) { ( ( return true } ( Type N t ( Type N child ; ( ( return isDer ( parent, getType ( ) ) ; } return false ; } }<CODESPLIT>Check whether one type is a derivation of another . For example in this scenario :<CODESPLIT>1
public void setSelectedClass ( java lang String selectedClass ) { getState ( ( }<CODESPLIT><p > Return the value of the <code > selectedClass< / code > property . < / p > <p > Contents : CSS style class to apply to the rendered label on selected options .<CODESPLIT>0
public static Pred attributeIn ( Function, function, Iterable iterable ) { returnPredicate, ( function, in ( iterable ) ) }<CODESPLIT>Creates a predicate which returns true if an attribute selected from an object passed to accept method is contained in the iterable .<CODESPLIT>1
private void validateRequest ( DownloadRequest dreq ) throws ErrorResponseException { path ( ) ; ( path (XML ) path ( ) ) (Content ( ) ) ; } }<CODESPLIT>Make sure that it is a valid request . This is also the place to implement the reverse IP lookup<CODESPLIT>1
public AutofHelper setEnabled ( boolean enabled ) { ( enabled )Enabled = enabled ; ( enabled )TextChanged (TextWatcher ;TextChangeListener (ChangeListener ) ; autof ( ) ; }Text removeTextChanged (TextWatcher ) ;Text removeChangeListener (ChangeListener ) ; setText ; } } return this ; }<CODESPLIT>Set the enabled state of automatically resizing text .<CODESPLIT>1
public static void checkIfUnmodifiedSince ( final StringUnmodifiedSince, final Instant modified ) { Instant parseDate ( ifUn ; ( ( ( ( ( ) ( ) ) } }<CODESPLIT>Check for a conditional operation .<CODESPLIT>1
public void setProgress ( CmsUploadProgessInfo info ) {File = info getCurrentFile ( ) ;File = ; (File ) }FileIndex =File - 1 ; (FileorderedFilenamesUpload ( ) )FileIndex = m_orderedenamesToUpload. size ( ) - 1 ; } } (contentLength )contentLength info getContentLength ( ) ; }Filename =orderedenamesUpload (File ) ; contentLength =Upload (contentLength ) ; file =orderedenamesToUpload ( ) ; readBytes =Upload ( getBytesRead ( info getPercent ( ) ) ) ;bar setValue ( info ( ) ) ; (started )started = ;fileinfoHTML ( ( ) key (UPLOADPROGRESS ) ) ;fileinfoHTML ( ( ) key (UPLOADPROGRESSUPLOAD ) ) ;fileinfoHTML ( "" ) ;fileinfo setText ( "" ) ;fileinfo setText ( "" ) ;fileinfo setText ( "" ) ;fileinfoFormatter ( ) ( ) ; }fileinfo setText ( currFilename ) ;fileinfo setText ( ( ) key (UPLOADPROGRESSCURRENT new (File ) new ( file ) getFileText ( ) ) ) ;fileinfo setText ( ( ) key (UPLOADPROGRESSUPLOAD readBytes contentLength ) ) ; }<CODESPLIT>Returns the file text . <p ><CODESPLIT>0
public static void escape ( String str, StringBuilder rval ) { for ( str. ( ) ) char hi = str. ( ) ; ( hi hi hi ( hi hi ) ( hi hi ) ( ( hi24 CharacterHighSurrogate ( hi ) ) ) ) rval. (. format ( "\\u04, ( int ) hi ) ) ; } ( CharacterHighSurrogate ( hi ) ) char lo = str. ( ++ ) ; c = ( hi 10 ) lo (10000 (xD800 10 )DC ) ; rval. (. format ( "\\U, c ) ) ; } ( ) { ( "\\ ) ; ( "\\ ) ; ( "\\ ) ; ( "\\ ) ; ; ( "\\ ) ; ; ( "\\\"" ) ; ; ( "\\\ ) ; ; default : rval. ( hi ) ; ; } } } }<CODESPLIT>Parses the authority for the pre - parsed given JsonLdUrl .<CODESPLIT>0
public static void sendClose ( ByteBuffer data, WebSocketChannel wsChannel, WebSocketCallback callback ) { ; sendClose ( }<CODESPLIT>Sends a complete close message invoking the callback when complete<CODESPLIT>0
public CharacterSet getInverse ( ) { n forbiddenCharacters characters n characters forbiddenCharacters return }<CODESPLIT>Write VCF record with the specified print writer .<CODESPLIT>0
protected boolean readFeatureParameters ( Element node ) { child node getChildNodes ( ) ; = new ( ) ; par = new ( ) ; for ( ( ) ) ( ( ) ) child ( ) child ( ) ; value = child getAttribute (value ) ; par = value split ( ":" ) ; para = new ( ) ; for ( par ) para add ( parseInt ( par ) ) ; }names add ( par ) ; par add ( para ) ; } } ( ) System out ( ( ) ) ; ( ) ; return false ; } return true ; }<CODESPLIT>Read feature parameters .<CODESPLIT>1
public Node insertBefore ( Node newChild, Node refChild ) DOM { ( return null }<CODESPLIT>Unimplemented . See org . w3c . dom . Node<CODESPLIT>1
public static AuthToken basic ( String username, String password, String realm ) { ( username null ) ; ( passwordPassword null ) ; map ( ) ; map (CHEME (basic ) ) ; map ( value ( username ) ) ; map ( value ( password ) ) ; ( ) map ( value ( ) ) ; } return InternalAuthToken ( map ) ; }<CODESPLIT>The basic authentication scheme using a username and a password .<CODESPLIT>1
private Function Expression, Statement addNodeToPlaceholderMap ( String mapKey,andaloneNode node ) { return putToMap ( map placeholder compile ( map ) ) }<CODESPLIT>See go / soy - element - keyed - roots for reasoning on why this is disallowed .<CODESPLIT>0
public void marshall ( MetricDefinition metricDefinition, ProtocolMarshaller protocolMarshaller ) { ( ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( ( )BINDING ) ; protocolMarshaller marshall (Regex ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
static String [ ] split ( URI remoteUri, String suffix, @ Nullable String defaultBranch ) { host remote getHost ( ) ; ( host ( ) (file ) ) IllegalArgumentException ( remote remote ) ; } path remote getRaw ( ) ; ( path ) IllegalArgumentException ( path remote remote ) ; } Pattern compile ( suffix| ) ( path ) ; ( ( ) ) IllegalArgumentException ( suffix remote path remote ) ; } newRemote ; port remote ( ) ; ( host ) ( ) newRemote remote getScheme ( )://" host port group ( ) ; } newRemote remote getScheme ( )://" host group ( ) ; } } newRemote = remote getScheme ( )://" group ( ) ; } remote ; = URL decode ( path ( group ( ) ( ) ) ) ; normalizePath ( ) ; remotePath = decoded ; } ( UnsupportedEncodingException ) ( ) ; } fragment = remote getFragment ( ) ; remoteBranch = fragment null fragment defaultBranch ; return new String newRemote remote remoteBranch ; }<CODESPLIT>Splits the specified remoteUri into : - the actual remote repository URI - the path in the remote repository - the branch name .<CODESPLIT>1
public static List < Class < > > resolveHierarchy ( final Class < > type ) { ( ) ; type ; ( ( ) ) add ( ) ; getSuperclass ( ) ; } return res ; }<CODESPLIT>Assigns base class in scheme for provided model type ( for example to make class vertex type it must extend V ) .<CODESPLIT>0
public void setRefreshing ( boolean refreshing ) { ( refreshRefresh refresh )Refreshing = refreshing ; ; (Using ) (Direction ) getMe ( ( (Spinner ; ( (Spinner ( ; } } endTarget = ( int )SpinnerFinalOffset ; } setTargetTopBottom ( mCurrentTop true ) ;Notify = false ; startScaleUpAnimation (RefreshListener ) ; } setRefresh ( refresh false ) ; } }<CODESPLIT>Notify the widget that refresh state has changed . Do not call this when refresh is triggered by a swipe gesture .<CODESPLIT>1
private Field [ ] getAllInstanceFields ( final Object obj ) { fieldsFieldsByClass ( obj ( ; ( fields ) Reflection getAll ( obj excludeStatic exclude ; fields ( ( ;FieldsByClass ( ( ) fields ) ; } return fields ; }<CODESPLIT>Visits all the keys and entries of the given map .<CODESPLIT>0
private Map VectorLayer, Filter > dtoAttributeCriterionToFilters ( AttributeCriterion criterion ) throws GeomasException { Filter filters Filter ( ) ; Filter f ; Vector ( ( ; ( ) Geom ( criterion ( ) ) ; } operator criterion getOperator ( ) ; (LIKE ( toUpperCase ( ) ) ) filter createLikeFilter ( criterion ( ) criterion ( ) ) ; } ( ( toUpperCase ( ) )BEFORE ( toUpperCase ( ) )AFTER ( toUpperCase ( ) ) ) filter parseFilter ( criterion ( ) ) ; } filterService createCompareFilter ( criterion ( ) criterion ( ) criterion ( ) ) ; } filters ( ) ; return filters ; }<CODESPLIT>Prune impossible combinations . ( eg . If And criteria filter different layers they will return nothing so they are pruned ) .<CODESPLIT>0
public Session createMailSession ( final String host, final int port, final String username, final String password ) { generateProperties ( ; ( ( ; ( ( ( ; ( ( ( username ; } ( (Authenticate ( ; return getInstance ( props, ( ) Override protected PasswordAuthentication getPasswordAuthentication ( ) { return Password ( username, password ) ; } } ) ; } return getInstance ( props ) ; } }<CODESPLIT>Actually instantiates and configures the { @link Session } instance . Delegates resolving transport protocol specific properties to the { @link #transportStrategy } in two ways : <ol > <li > request an initial property list which the strategy may pre - populate< / li > <li > by requesting the property names according to the respective transport protocol it handles ( for the host property name it would be <em > mail . smtp . host < / em > for SMTP and <em > mail . smtps . host < / em > for SMTPS ) < / li > < / ol ><CODESPLIT>1
private PBXObjectRef addProjectConfigurationList ( final Map objects, final String baseDir, final List < DependencyDef > dependencies, final CommandLineCompilerConfiguration compilerConfig, final CommandLineLinkerConfiguration linkerConfig ) { configurations new ( ) ;Settings new ( ) ;Settings (CCWARNABOUTRETURNYES ) ;Settings (CCWARNUSEDVARIABLEYES ) ;Settings (PREBINDING ) ;Settings (SDKROOTDeveloperSDKMacOSsdk ) ;Object createBuildConfiguration (Settings ) ; objects (Config ( )Config getProperties ( ) ) ; configurations add (Config ) ; releaseSettings new ( ) ; releaseSettings (CCWARNABOUTRETURNYES ) ; releaseSettings (CCWARNUSEDVARIABLEYES ) ; releaseSettings (PREBINDING ) ; releaseSettings (SDKROOTDeveloperSDKMacOSsdk ) ;Object release createBuildConfiguration (Release releaseSettings ) ; objects ( releaseConfig ( ) releaseConfig getProperties ( ) ) ; configurations add ( releaseConfig ) ;Object configurationList createConfigurationList ( configurations ) ; projectConfigurationListProperties configurationList getProperties ( ) ; projectConfigurationListProperties (defaultConfigurationVisible0 ) ; projectConfigurationListProperties (defaultConfigurationDebug ) ; objects ( configurationList ( ) configurationList getProperties ( ) ) ; includeDirs compiler ( ) ; ( includeDirs ) includePaths new ( ) ; include new ( ) ; ( include includeDirs ) (System ( include ) ) absPath includeDir ( ) ; ( includeMap ( absPath ) ) ( absPath (usr ) ) includePaths add ( toUnixPath ( absPath ) ) ; } toUnix ( getRelativePath ( baseDir includeDir ) ) ; includePaths add ( relPath ) ; } includePathMap ( absPath absPath ) ; } } } includePaths. add (ed ) ;Settings (HEADERSEARCH includePaths ) ; releaseSettings (HEADERSEARCH includePaths ) ; } preArgs compiler getPreArguments ( ) ; defines new ( ) ; ( pre preArgs ) ( ( ) ) add ( pre ( ) ) ; } } ( ( ) ) add (inherit ) ;Settings (CCPREDEFINITION ) ; releaseSettings (CCPREDEFINITION ) ; } ( linker ) librarySearch new ( ) ; librarySearchPaths new ( ) ; otherLdFlags new ( ) ; linkerArgs linkerArguments ( ) ; ( linker linkerArgs ) ( linker ( ) )Dir linker ( ) ; ( librarySearchMap ( lib ) ) ( lib (usr ) ) librarySearchPaths add ( toUnix ( getRelativePath ( baseDir new (Dir ) ) ) ) ; } librarySearchMap ( libDir libDir ) ; } } ( linker ( ) ) lib linker ( ) ; ; ( dependencies ) ( lib ( ( ) ) )File getFile ( ) ; ( File ( ( ) ) ( ) ) ; } } } ( ) otherFlags add ( linker ) ; } } }Settings (BRARYSEARCH librarySearchPaths ) ;Settings ( otherFlags ) ; releaseSettings (BRARYSEARCH librarySearchPaths ) ; releaseSettings ( otherFlags ) ; } return configurationList ; }<CODESPLIT>Add project configuration list .<CODESPLIT>1
@ Override public ResultSet getTablePrivileges ( String catalog, String schemaPattern, String tableNamePattern ) throws SQLException { checkClosed ( ) ;Tabletable newTable ( new (TABLE STRING ) new (TABLE STRING ) new (TABLE STRING ) new (GR STRING ) new (GR Volt STRING ) new (PRILEGE Volt STRING ) new (GR Volt STRING ) ) ; JDBCResultSet new JDBCResultSet ( thisCatalogtable ) ; return res ; }<CODESPLIT>Retrieves a description of the access rights for each table available in a catalog .<CODESPLIT>1
public ObservableAccount getStorageAccountAsync ( String, String, String storage ) { return getStorageWithServiceResponseAsync ( ) map ( ServiceResponse, ( ) Override publicAccount ( ServiceResponseAccount ) { return body ( ) } } ; }<CODESPLIT>Gets the specified Azure Storage account linked to the given Data Lake Analytics account .<CODESPLIT>1
private static double sinQ ( double xa, double xb ) { ( ) ( ( ) ) ; ; ;TABLE ;TABLE ;TABLE ; double sinA = epsilon ; ( epsilon ) ; ; ( ) ; HEX ; double2 = ( sinA ) - ; sinA =2 ; double result ; double a = ; double b = ; double t = sintA ; double c = a t ; ( ) ; a = c ; b = b d ; t = costA sinA ; c = a t ; ( ) ; a = c ; b = b d ; b = b sintA cosB costA sinB ; b = b sintB costB sinA sintB cosB costB sinB ; ( ) t = ( ( costA costB ) ( cosA cosB ) - ( sintA sintB ) ( sinA sinB ) ) ; c = a t ; ( ) ; a = c ; b = b d ; } result = a b ; return result ; }<CODESPLIT>Compute sine over the first quadrant ( 0 < x < pi / 2 ) . Use combination of table lookup and rational polynomial expansion .<CODESPLIT>1
public void setNumExecutors ( Nonnegative int n ) throws IOException, IllegalArgumentException { ( ) IllegalArgumentException (utors ) } (Exec ) this numExecutors = n ; update ( ; save ( ) ; } }<CODESPLIT>{ @inheritDoc } .<CODESPLIT>0
private static boolean classNameMatchesFileName ( ClassSymbol c, Env Attr env ) { returnCompatible ( (FileObject SOURCE }<CODESPLIT>Does class have the same name as the file it appears in?<CODESPLIT>1
@ ( namenextPageLinkProperty ( valuenextPageLinkProperty ( value next pagination link, position publicLinkDto getNextPageLink ( )<CODESPLIT>Returns the next pagination link .<CODESPLIT>1
@ Nonnull public static Homoglyph build ( @ Nonnull @ WillClose final Reader aReader ) throws IOException { ValueEnforcer notNull (Readerreader ) ; ( ( ) )CommonSet aList newArrayList ( ) ; s ; ( (BR ( ) ) ) sLine sLine trim ( ) ; ( ( ) ( ) ) ;Set aSet newSet ( s ( ) ) ; (lo ( ) ) ( s ) ; ( )Set add ( ) ; }List add (Set ) ; } return new Homog ( aList ) ; } }<CODESPLIT>Consumes the supplied Reader and uses it to construct a populated Homoglyph object .<CODESPLIT>1
private boolean hasNullifiedFK ( FieldDescriptor [ ] fkFieldDescriptors, Object [ ] fkValues ) { ; ( (Broker ( ) ( fkDescriptors fk ) ) result = false ; } } return ; }<CODESPLIT>to avoid creation of unmaterializable proxies<CODESPLIT>1
public HistoricDate getBeginOfYear ( HistoricEra era, int yearOfEra ) { new this getNew ( ) new ( era year ) ; ( this isValid ( ) ) Plain date this convert ( new ) ; this eraPreference getPre ( new date ) ; ( era ) year ( new ( ) new getYear ( ) ) ; new of ( new ( ) new getDayOfMonth ( ) ) ; } return newYear ; } IllegalArgumentException ( determine New ) ; } }<CODESPLIT>/ * [ deutsch ] <p > Determines the date of New Year . < / p ><CODESPLIT>1
protected static void checkNotNull ( Object [ ] array ) { checkNotNull ( checkNotNull ( } }<CODESPLIT>Validate the specified arguments .<CODESPLIT>1
private static String getExtentOfParticipationMention ( LinkedList Term > eventTermList, LinkedList Term > roleTermList, processNAFVariables vars ) {ListListByTermsFromList (List vars ) ;ListListByTermsFromList (List vars ) ; merged ( ; ( event ( ( ; ( ( ( ) ; LinkedList Wf > firstWL secondWL ; ( ) firstWL = eventWordList ; secondWL = roleWordList ; } firstWL = roleWordList ; secondWL = eventWordList ; } ( ) ( ( ) )List add ( ) ; } } ( ) ( ( ) )List add ( ) ; } } extent ( ) ; ( ) extent ( ( ) ) ; } extent toString ( ) ; return sExtent ( 0, sExtent length ( ) - 1 ) ; }<CODESPLIT>/ * similar to generateTheMIdAndSetID () but specific for ParticipationMention<CODESPLIT>1
public EnvironmentConfig setEnvMonitorTxnsExpirationTimeout ( final int timeout ) { ( timeout timeoutSetting (Transaction ) } setSetting ( ENV timeout ; ( timeout timeoutTxnsCheck ( ) setEnvTxnsCheck ( timeout ; } return this ; }<CODESPLIT>Sets the maximum size of page of B + Tree . Default value is { @code 128 } . Only sizes in the range [ 16 .. 1024 ] are accepted . <p > Mutable at runtime : yes<CODESPLIT>0
public static void addTypeMapper ( Class > clz, Class > mapper ) { synchronized (Mapper ) LinkedHashSet ( clz ; ( ) new LinkedHashSet ( ) ; ( ) ; } add ( mapper ) ; } }<CODESPLIT>Field type convertor for all classes<CODESPLIT>1
public static DocumentBuilder newDocumentBuilder ( final DocumentBuilderFactory factory ) { builder factory ( ; return builder ; } ( )Create ( ( ) ) } }<CODESPLIT>Parse the given XML string and return the root Element This uses the document builder associated with the current thread .<CODESPLIT>0
public synchronized void clear ( ) { ( ) ( ) } clear ( ; ( truncate ( force ( true ) ; close ( ) ; open ( ) ; } ( ) clear ) } }<CODESPLIT>Read value from file<CODESPLIT>0
void sendMigrationEvent ( final MigrationStatus status ) { ( ) ;Engine nodeEngineEngine ( ) ;Member nodeEngine getLocalMember ( ) ; Migration event new Migration (Member status ) ; event nodeEngine ( ) ; registrations eventRegistr ( SERVICEEVENT ) ; eventService publishEvent ( registrations event ) ; }<CODESPLIT>Sends a {<CODESPLIT>1
private void processConstraintViolation ( final Set ConstraintViolation Object > > violations, final CsvBindingErrors bindingErrors, final ValidationContext Object > validationContext ) { (Violation violations ) field violation ( ) toString ( ) ; violation ( ) ; determine ( ) ;Vars create ( ) ; ( ( validation ) ) Csv fieldErrors ( field ) ; (Failure ( ) ) } validation getBean ( ) ( field ) ( ) ; errorVars ( validationsv ( ) getLineNumber ( ) ) ; errorVars ( validationsv ( ) ( ) ) ; errorVars ( column getNumber ( ) ) ; errorVars (label column ( ) ) ; errorVars computeIfAbsent ( column getFormatter ( ) ) ; violationInvalid ( ) ; errorVars computeIfAbsent (valid ) ; default determine (Vars violation ) ; bindingErrors reject ( field column getField ( ) ( ) errorCodes errorVars default ) ; } bindingErrors reject ( errorCodes errorVars violation ( ) ) ; } } }<CODESPLIT>BeanValidationの検証結果をSheet用のエラーに変換する<CODESPLIT>1
public static void writeToFile ( NonNull File file, NonNull String content ) throws IOException { ( ( file ) ) ; writer write ( content ) ; writer flush ( ) ; } ( ) Log ) ) } writer close ( ) ; } ( ) Log ) ) } } }<CODESPLIT>Delete file .<CODESPLIT>0
public static String extractText ( String html ) { (RemoveAllTags ( unescapeHtml ( return html }<CODESPLIT>Extracts the title of the page .<CODESPLIT>0
public static Rule getRule ( String initySymbol, String field, String value ) { ( ( return LevelInequal getRule ( inequal, ) } ( ( return TimestampInequal getRule ( inequal, ) ; } returnequal ( inequal, field, ) ; } }<CODESPLIT>Create new instance from top two elements on stack .<CODESPLIT>0
public void createEquiAngle ( float radius, int numRotations, int numSamples, float jitter, Callback2d callback ) { spacing = radiusRot ; for ( sample sampleSamples sample ) angle = ( ) ( sampleRot )Samples ; = radius sample (Samples ) ( rndFloat ( ) ) spacing jitter ; = ( ) ( angle ( ) ) ; = ( ) ( angle ) ; callback onNewSample (, ) ; } }<CODESPLIT>Create <code > numSamples< / code > number of samples on a spiral with maximum radius <code > radius< / code > around the center using <code > numRotations< / code > number of rotations along the spiral and call the given <code > callback< / code > for each sample generated . <p > The generated sample points are distributed with equal angle differences around the spiral so they concentrate towards the center . <p > Additionally the radius of each sample point is jittered by the given <code > jitter< / code > factor .<CODESPLIT>1
private void readObject ( ObjectInputStream in ) throws IOException, ClassNotFoundException { defaultRead ( ; severity =_INFO ; summary ; ; in ( ; ( ( ) ) severity = FacesMessage_INFO ; } (WARN ( ) ) severity = FacesMessage_WARN ; } ( ( ) ) severity = FacesMessage_ERROR ; } (FATAL ( ) ) severity = FacesMessage_FATAL ; } summary ( readObject ( ; detail ( readObject ( ; rendered ( readObject ( ) ; }<CODESPLIT><p > Reconstruct {<CODESPLIT>1
public void waitForLogMessage ( final String logSearchString, int waitTime ) TimeoutException { WaitFor waitFor ; }<CODESPLIT>Stop and wait till given string will show in container output .<CODESPLIT>1
public Query from ( final Collection Expression fromColumns ) { ( return this ; } ( return this ; }<CODESPLIT>Adds the FROM columns .<CODESPLIT>1
public void getElementSettingsConfig ( String clientId, String containerId,_SimpleCallbackElementSettingsConfig callback ) {RpcActionElementSettingsConfig actionRpcActionElementSettingsConfig ( ) { Override public void execute ( ) { ( ( ( ( ( ( } Override protected void onResponse (ElementSettingsConfig result ) { ( execute ( } stop ( false } } ; execute ( }<CODESPLIT>Requests the element settings config data for a container element specified by the client id . The data will be provided to the given call - back function . <p ><CODESPLIT>1
protected synchronized void copy ( Writable other ) { ( ) ( ; write ( out ) ; in ( ; in reset ( out ( ) out ( ) ) ; readFields ( in ) ; } ( ) IllegalArgumentException (map copied ( ) ) ; } } IllegalArgumentException ( map ) ; } }<CODESPLIT>Used by child copy constructors .<CODESPLIT>1
public Cell, width ( Value, width ) { min width pref width width ; return }<CODESPLIT>Sets the minWidth prefWidth and maxWidth to the specified value .<CODESPLIT>0
public void createReference ( Reference reference ) throws GreenPepperServerException { start ( ) ; beginTransaction ( ) ; Repository repository loadRepository ( reference ( ) ( ) ( ) ) ; documentDao create ( reference ) ; commit ( ) ;Created ) ) ) ) ) } ( ) rollback ( ) ; handleException ( REFERENCECREATE ) } closeSession ( ) ; } }<CODESPLIT>{<CODESPLIT>0
public static Document buildPDFDocument ( com. snowtide. pdf. Document pdf, LucenePDFConfiguration config ) throws IOException { StringWriter new StringWriter ( ) ; pdf pipe ( new Output ( ) ) ; Document new Document ( ) ; addField ( config getBodyTextFieldName ( ) ( ) config storeBodyText ( ) config indexBodyText ( ) config tokenizeBodyText ( ) ) ; ( metadata pdf getAttributeMap ( ) ( ) ) metadata ( ) ; fieldName config ( ) ; ( fieldName ) ( config copyAllPDF ( ) ) fieldName = docPropName ; } } } value metadata ( ) ; value ; ( value ) (DEBUG ) (Null document value pdf ( ) ) ; } ( value String ) ( ( pdf ) ( pdf ) ) value DateTools dateToString ( PDFParser parseDateString ( ( ) value ) DateTools ) ; } ( ) (PDF date string parsed into javaDate instance ( ) ) ; valueStr = ( String ) value ; } } valueStr = ( String ) value ; } } ( value Number ) value value ( ) ; } (DEBUG ) ( document value value ( ) ( ) pdf ( ) ) ; } addField ( fieldName value config storeMetadata ( ) config indexMetadata ( ) config tokenizeMetadata ( ) ) ; } return doc ; }<CODESPLIT>Creates a new Lucene Document instance using the PDF text and metadata provided by the PDFxStream Document using a default {<CODESPLIT>0
protected void removeTargetListeners ( Component comp ) { comp remove ( ; comp removeMotion ( ) ; ( ) Container cont = ( Container ) comp ; remove (child ) ; ( ( ) ) removeListeners ( ( ) ) ; } } }<CODESPLIT>Check to see if we need to do component - level cursor setting and take care of it if needed .<CODESPLIT>0
public ObservableAssignment deleteByIdAsync ( String policyAssignmentId ) { return deleteByIdWithServiceResponseAsync ( map ( ServiceResponse ( ) Override publicAssignment ( ServiceResponseAssignment ) { return body ( ) } } }<CODESPLIT>Deletes a policy assignment by ID . When providing a scope for the assigment use / subscriptions / { subscription - id } / for subscriptions / subscriptions / { subscription - id } / resourceGroups / { resource - group - name } for resource groups and / subscriptions / { subscription - id } / resourceGroups / { resource - group - name } / providers / { resource - provider - namespace } / { resource - type } / { resource - name } for resources .<CODESPLIT>0
private void getFights ( Document doc, Event event ) { (Gettingights event{}]", event getSUrl ( ), event ( ) ) ;herBaseObject s = newherBaseObject ( ) ;Event setName ( event ( ) ) ;EventUrl ( eventherUrl ( ) ) ; Fights = new ( ) ; mainF doc select (contentevent ) ;ters mainF select ( a ) ;herBaseObject mainighter = newherBaseObject ( ) ; =ters ( ) ; mainUrl ( main (href ) ) ; main setName ( main (spanname ) html ( ) ) ;herBaseObject mainighter = newherBaseObject ( ) ; =ters ( ) ; mainUrl ( main (href ) ) ; main setName ( main (spanname ) html ( ) ) ; F main = new F ( ) ; main (Event ) ; main setF ( main ) ; main setF ( main ) ; main setResult ( ParserResult ( main ( ) ) ) ; main mainF select ( ) ; ( main ( ) ) main ( main ( ) html ( ) ( "" ) trim ( ) ) ; mainRound ( ( main ( ) html ( ) ( "" ) trim ( ) ) ) ; main ( main ( ) html ( ) ( "" ) trim ( ) ) ; } main setDate ( event ( ) ) ;ights add ( mainF ) ; ( added mainFight ) ; (ights,ights ( ) ) ; doc select (eventmatch table ) ;ights addAll ( parseEventFights (, event ) ) ; event setFights (ights ) ; }<CODESPLIT>parses an event from a jsoup document<CODESPLIT>0
public PropertyDescriptor [ ] getTeaBeanPropertyDescriptors ( Class < > beanClass ) { ( beanClass ) return NO_PROPERTIES ; } PropertyDescriptor properties ; PropertyDescriptor all ; all Bean getAllProperties ( new ( ) ) ; } ( ) return NO_PROPERTIES ; } PropertyDescriptor clean new PropertyDescriptor ( all ( ) ) ; allProps ( ) ( ) ; ( ( ) ) ( ) ; name ( ) ; desc ( ) ; ( ( ) ( ) ) } ( ) KeyedPropertyDescriptor keyed = ( KeyedPropertyDescriptor ) desc ; type keyed ( ) ( ) ( ) ; new Array ( type ) ; } ( ) } } ( beanClass isArray ( ) desc ( ) ) } cleanProps add ( desc ) ; } properties clean ( new PropertyDescriptor clean ( ) ) ; sortPropertyDescriptors ( properties ) ; return properties ; }<CODESPLIT>A function that returns an array of all the available properties on a given class . <p > <b > NOTE : < / b > If possible the results of this method should be cached by the caller .<CODESPLIT>1
@ Override public synchronized void serverStopping ( ) { ( TraceComponent ( ) tc ( ) ) ( tcStoppinggenerate in progress generate ) ; } serverStopping ; ( generate ) sleep ( ) ; } ( ) = ; } } ( TraceComponent ( ) tc ( ) ) ( tcserverStopping ) ; } }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
void flattenToSubMessageBuffer ( ByteBuffer buf ) throws IOException { (items ) ; assert (items ( ) ) ; buf ( VoltDbMessageAGMENT ) ; super flattenToBuffer ( buf ) ; short nInputDepIds = 0 ; short nOutputDepIds = 0 ; short nUnplanned = 0 ; ( Fragmentitems ) (input )Ids ; } (output )Ids ; } (fragment ) ; } } bufShort ( ( )items ( ) ) ; bufShort (Unanned ) ; buf (isFinal ( ) : ( ) ) ; buf (taskType ) ; buf (emptyForRestart ( ) : ( ) ) ; buf (execOnPreviousLeader ( ) : ( ) ) ; buf (OutputIds ( ) : ( ) ) ; buf (InputIds ( ) : ( ) ) ; (ToLoad ) bufShort ( ( )ToLoad ) ; buf (ToLoad ) ; } bufShort ( ( ) ) ; } buf (FragmentStatsRecording ( ) : ( ) ) ; buf (coordinatorTask ( ) : ( ) ) ; buf ( ( ) : ( ) ) ; bufLong (restartTimestamp ) ; bufLong (SpUniqueId ) ; ( Fragmentitems ) buf (Hash ) ; } ( Fragmentitems ) ( ) bufShort ( ( ) ) ; } assert ( Short ) ; bufShort ( ( ) ) ; buf ( ) ; } } ( Fragmentitems ) buf putInt (parameterSet ( ) ) ; buf (parameterSetReadOnlyBuffer ( ) ) ; } (OutputIds ) ( Fragmentitems ) buf putInt (output ) ; } } (InputIds ) ( Fragmentitems ) (input ) bufShort ( ( ) ) ; } bufShort ( ( ) ) ; buf putInt (input ) ; } } } (pro ) bufShort ( ( ) ) ; } assert (procedure Short ) ; bufShort ( ( )procedure ) ; buf (procedure ) ; } buf putInt (currentBatchIndex ) ; (batchTimeout BatchTimeoutOverrideTIMEOUT ) buf (TimeoutOverrideType NOOVERRIDEBATCHTIMEOUT ( ) ) ; } buf (TimeoutOverrideTypeOVERRIDEBATCHTIMEOUT ( ) ) ; buf putInt (batchTimeout ) ; } bufShort ( ( )Partitions ( ) ) ; (Partitions ) buf putInt ( pid ) ; } (initiateBuffer ) ByteBuffer dupinitiateTaskBuffer duplicate ( ) ; buf putInt ( dup ( ) ) ; buf ( dup ) ; } buf putInt ( ) ; } (items ( ) ) Fragmentitems ( index ) ; (fragment ) bufShort ( index ) ; buf putInt (fragment ) ; buf (fragment ) ; ( itemText ) ; buf putInt (Text ) ; buf (Text ) ; } } }<CODESPLIT>/ * Serialization Format [ description : type : byte count ]<CODESPLIT>0
public readRow ( BufferedReader bufferedReader, ParseError parseError ) ParseException, IOException { ; ( return null } return process (Reader parseError getLineNumber (Reader ) ) } }<CODESPLIT>Read in all of the entities in the reader passed in but without the header .<CODESPLIT>0
private int transformToRTF ( ElemTemplateElement templateParent, DTM dtmFrag ) throws TransformerException { XPathContext =_context ; Content ( ; ; SerializationHandler savedRTreeHandler = this_izationHandler ; ( ; ; ;_izationHandler = h ; SerializationHandler r =_izationHandler ; start ( ; flush ( ) ; executeTemplates ( template true ) ; flush ( ) ;Fragment ( ) ; } ( ) ; } } ( ) ( ) } this_izationHandler = savedRTreeHandler ; } returnFragment ; }<CODESPLIT>Take the contents of a template element process it and convert it to a string .<CODESPLIT>0
public static void encodeLength ( ByteArrayOutputStream out, int length ) { ( { out length } ) ; ; encoded ; do { encodedLength 8 ; ( ) ( ) ; length 7 ; byteCount } ( do {Byte ( ) ( ) ; encodedLength 8 ; ( byteCount ) encodedByte ( byte ) ; } out write (Byte ) ; } ( }<CODESPLIT>/ * Length - bytes are written out in order from most to least significant but are computed most efficiently ( using bit shifts ) from least to most significant . An integer serves as a temporary storage which is then written out in reversed order .<CODESPLIT>1
public static synchronized PingManager getInstanceFor ( XMPPConnection connection ) { ( ; ( ping ping Ping ( connection ; ( ping ; } return ping ; }<CODESPLIT>Gets the account registration info from the server . @throws XMPPErrorException @throws NoResponseException @throws NotConnectedException @throws InterruptedException<CODESPLIT>0
@ Override public List dynamicQuery (Query dynamicQuery ) { return findWith ( }<CODESPLIT>Returns the number of rows matching the dynamic query .<CODESPLIT>0
public void write ( String s, int off, int len ) throws IOException { ( ) write ( ; } ensureOpen ( ; ( ( ) ; } }<CODESPLIT>Write a portion of a String .<CODESPLIT>1
public void concat ( String trg, String src, boolean restricted ) { }<CODESPLIT>{<CODESPLIT>0
@ Override public ExecuteServiceAction executeServiceAction ( ExecuteProvisionedProductServiceAction request beforeClientExecutionProvisionedProductServiceAction ( request<CODESPLIT><p > Executes a self - service action against a provisioned product . < / p ><CODESPLIT>1
private T getWrappedPublisher ( Publisher flexiblePublisher, Class < T > type ) { ( (PublisherPublisher ) ) IllegalArgumentException ( ( ( ) ) ) ; } Conditional conditions ( ( ) ) ( ) ; ( Conditional condition conditions ) ( ( condition ( ) ) ) return type cast ( condition getPublish ( ) ) ; } } return null ; }<CODESPLIT>Gets the publisher wrapped by the specofoed FlexiblePublisher .<CODESPLIT>1
public IterableContact queryByUpdatedDate ( Object parent, java Date updatedDate ) { queryBy (Contact UPDATE ( }<CODESPLIT>query - by method for field updatedDate<CODESPLIT>1
static boolean isGetOrSetKey ( Node node ) { ( node ( ) ) GE return true ;PROP return node getBooleanProp (PROP ) node getBooleanProp (PROP ) ; default : ; } return false ; }<CODESPLIT>Determines whether a node represents an object literal get or set key ( e . g . key1 in { get key1 () {} set key2 ( a ) {} ) .<CODESPLIT>1
private boolean isCtFieldACollection (Field ctField ) { returnField getType ( ) ( ( Collection ( ) ) )Field getType ( ) ( ( ( ) ) )Field getType ( ) ( ( Set ( ) ) ) } ( return false } }<CODESPLIT>Add Method to ConstPool . If method was not in the ConstPool will add and return index otherwise will return index of already existing entry of constpool<CODESPLIT>0
public static void readable ( File path, String message ) IllegalArgumentException { ( ( ( ( ) } }<CODESPLIT>FIXME me animal sniffer this is 1 . 6 API only<CODESPLIT>0
@ Override publicEvent modifyEvent ( ModifyEvent request ) { beforeClientExecution execute ( request }<CODESPLIT><p > Modifies the replication instance to apply new settings . You can change one or more parameters by specifying these parameters and the new values in the request . < / p > <p > Some settings are applied during the maintenance window . < / p > <p / ><CODESPLIT>0
public java util List InventoryDeletionStatusItem getInDeletions ( ) { (Delet com amazonaws internal SdkInternalList ; } return inventoryDeletions ; }<CODESPLIT><p > A list of status items for deleted inventory . < / p ><CODESPLIT>0
public static boolean validateServiceName ( Configuration conf, String nameServiceId ) { Collection namesIds = DFSServiceIds ( conf ) ; ( namesIds namesIds ( ) ) ( name ) ( input names id ) ; return false ; } ( namesIds ( name ) ) ( names idServiceId ) ; return false ; } } ( name ) ( names idServiceId ) ; return false ; } return true ; }<CODESPLIT>Valide if the input service name is valid<CODESPLIT>1
@ Override public OUTPUT newInstance ( Map String INPUT > inputMap ) throws FAILURE { builder ( ( ( ( (new< unsupported ; ( builder ( ) ) ; }<CODESPLIT><p > <b > Unsupported< / b > . Override to provide an implementation . < / p ><CODESPLIT>1
long getProposedEpoch ( ) throws IOException { FileUtils readLongFromFile ( this ) ; return pEpoch ; } ( ) (File initialize acknowled epoch ) return - 1 ; } ( ) ( access acknowled epoch ) ; } }<CODESPLIT>Gets the last proposed epoch .<CODESPLIT>1
@ SuppressWarnings (WeAccess ) public ParameterizableRequest Map String, Object >, AuthenticationException > delegation ( ) { url parse (0 ( ( addPath ( build ( ) ; parameters newBuilder ( ( ( (JWT ( ; return factory rawPOST ( url, client, gson, authErrorBuilder ) addParameters ( parameters ) ; }<CODESPLIT>Performs a custom <a href = https : // auth0 . com / docs / api / authentication#delegation > delegation< / a > request that will yield a delegation token . Example usage : <pre > { @code client . delegation () . addParameter ( api_type firebase ) . start ( new BaseCallback<Map<String Object >> () { { @literal } Override public void onSuccess ( Map<String Object > payload ) {}<CODESPLIT>1
public void refreshToken ( ) throws OAuthSystemException, OAuthProblemException { cleanError ( ) ; ( accessToken refreshToken ) OAuth ( Refresh ) ; } httpClient new ( ) ; OAuth request OAuth ( settings getURL ( TOKENREFRESHURL ) ) buildBodyMessage ( ) ; headers new ( ) ; headers ( OAuth OAuth JSON ) ; headers (UserAgent this userAgent ) ; params new ( ) ; params (granttype REFRESH ) ; params (access accessToken ) ; params (refresh refreshToken ) ; body JSON buildJSON ( params ) ; request setBody ( body ) ; updateTokens ( httpClient request headers ) ; }<CODESPLIT>Refreshing tokens provides a new set of access and refresh tokens .<CODESPLIT>1
public void syncContactTypeToMain ( ) {Contact ( ) this getMainRecord ( ) getField (Detail ) ;Contact ( ) ; this syncToMain (Contact nullContact ) ; }<CODESPLIT>Read the current file in the header record given the current detail record .<CODESPLIT>0
@ Override ( ) public ChronoZonedDateTimeationalFixedDate zonedDateTime ( TemporalAccessor temporal ) { (Fixed ( temporal }<CODESPLIT>A property tied to the map updated when the idle state event is fired .<CODESPLIT>0
private ProtoNetwork stage1 ( final File [ ] networks ) { beginStage ( PHH NUMPH ) ; ; new ( ) ; (Mer ) ; ( ) ; ( network ) ; ( ) ( ) ; } stageOutput ( toString ( ) ) ; ( ) ;ArrayList ( ) ; ( networks ) root network ( ) ; as ( root PRO ) ; networkBin new ( ) ; add ( newProto ( networkBin ) ) ; }Network stageMerger ( ) ; new ( ( ) "/ ) mkdirs ( ) ; stageWriteEquivalentProtoNetwork ( ( )merged ) ; (Debug ( ) ) TextProtoNetworkExternal textExternal new TextProtoNetworkExternal ( ) ; textExternal writeProtoNetwork ( ( )merged ) ; } ( ) error ( write out equivalence proto network ) ; } } ( ) ; setLength ( ) ; mark ( ) ; markEndStage ( ) ; stageOutput ( toString ( ) ) ; return ret ; }<CODESPLIT>Stage one merger of networks returning the merged proto - network .<CODESPLIT>1
@ Override public EnableStreamingTaskResult enableHlsStreaming ( String spaceId, boolean secure ) throws ContentStoreException {StreamingStreaming ( ; spaceId ; ; returnStreaming deserialize ( content perform ( ENH,Params serialize ( ) ) ) ; }<CODESPLIT>{<CODESPLIT>1
public static Map Entry String, Map String, getSystemBarsCommand ( ) { returnMap ( GETBAR ( }<CODESPLIT>This method forms a { @link Map } of parameters for the getting of a network connection value .<CODESPLIT>0
public Response postQuery ( final String system, final InputStream input, final String resource, final HttpHeaders httpHeaders ) { ( system ; (post check ( ; getParameters ( ; path ( resource param ; return createResponse ( impl, path ) ; }<CODESPLIT>This method will be called when a HTTP client sends a POST request to an existing resource with application / query + xml as Content - Type .<CODESPLIT>1
public boolean hasValue ( int index ) { ( return index ( ( )Collection ) ( ) ; } ( return index ( ( SortedMap, )Collection ) ( ) ; } return false ; }<CODESPLIT>Prepares this widget dialog parameter to be committed . <p ><CODESPLIT>0
public void marshall ( DescribeDirectConnectGatewayAssociationsRequest describeDirectConnectGatewayAssociationsRequest, ProtocolMarshaller protocolMarshaller ) { (DirectConnectGatewayAssociations ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( describeDirectConnectGatewayAssociations ( )BINDING ) ; protocolMarshaller marshall (DirectConnectGateway (BINDING ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociations getDirect ( ) DIRECTCONNECTWAYBINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociations getMaxResults ( )BINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociations getNextToken ( ) NEXTTOKENBINDING ) ; protocolMarshaller marshall (DirectConnectGateway (BINDING ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT><p > The sources for the applications ( up to 10 ) . If you specify scaling plan names you cannot specify application sources . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setApplicationSources ( java . util . Collection ) } or { @link #withApplicationSources ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
public Object execEval ( String arg ) { return scriptEngine eval (eval arg ) ; } ( ) ( evaluating script ) } }<CODESPLIT>Returns the JSON object from a string<CODESPLIT>0
@ Override public Map ServerGroup, EVCacheServerGroupConfig > discoverInstances ( String appName ) throws IOException { propertyName appName ;StringCache ( )ynamicString ( propertyName ) ( ) ; ( ( ) ) ( Nodes ) ( ( ) ) return bootstrapFromSystem ( ) ( ) return bootstrapFrom ( ) return ServerGroup,CacheServerGroupConfig emptyMap ( ) ; }<CODESPLIT>Netflix specific impl so we can load from eureka .<CODESPLIT>0
private boolean distinguEquals ( String dsn1, String dsn2 ) ( dsn ( ( dsn }<CODESPLIT>Compare two DSN<CODESPLIT>1
public static BloomKFilter deserialize ( InputStream in ) throws IOException { ( ) ( stream ) ; } data ( in ) ;Hash data readByte ( ) ;Array data readInt ( ) ; data newArray ; ( bitset ) data dataInputStream ( ) ; } return new BKFilter ( data, numHashFunc ) ; } ( ) new ( to deserializeFilter ) ; ( ) ; ; } }<CODESPLIT>Deserialize a bloom filter Read a byte stream which was written by { @linkplain #serialize ( OutputStream BloomKFilter ) } into a { @code BloomKFilter }<CODESPLIT>1
public void setRestoreLastValid ( boolean restoreLastValid ) { ( ( restore this restoreLastValid = restoreLastValid ; ( restore ( restoreFocus restoreFocusFocus ( addListener ( restoreFocus ; } removeListener ( restoreFocus ; } }<CODESPLIT>Adds vertical or horizontal {<CODESPLIT>0
public static Long decrementExact ( ObservableLongValue a ) createLong ( (Exact ( ( }<CODESPLIT>Binding for { @link java . lang . Math#decrementExact ( long ) }<CODESPLIT>1
public static String dgHex ( InputStream is, Digest digest ) IOException { checkNotNull returnEncoding base16 ( ) encode (Bytes ) }<CODESPLIT>Calculates digest and returns the value as a hex string .<CODESPLIT>1
private void write ( TargetType theTarget, ValueSetTm theValueSetTm, File theOutputDirectory, String thePackageBase ) throws IOException { (OutputDirectory ( ) )OutputDirectory mkdirs ( ) ; } (OutputDirectory isDirectory ( ) ) (Output ) ; } value theSet ( ) ; prefixPrefix ; suffixSuffix ; ( ) ( suffix ( ) )java ; } } fileName prefix value suffix ; ( theOutputDirectory fileName ) ; ( FileOutputStream ( ) ) ;Log (Writing file ( ) ) ; Velocity ctx Velocity ( ) ; InputStream template ; ctx (valueSetSet ) ; ctx (packageBasePackageBase ) ; ctx ( ( ) ) ; Velocity Velocity configureVelocity (TemplateFileVelocityVelocityProperties ) ; ( ) template FileInputStream (Template ) ; } templateNameTemplate ; ( ) templateName =valueset ; } template this ( ) getResourceAsStream ( templateName ) ; } template ( template ) ; evaluate ( ctx templateReader ) ; close ( ) ; }<CODESPLIT>}<CODESPLIT>1
@ Override public void store ( Issue issue ) { ( issue ( ) ( ) ) default (Input issue primary ( ( ; (Storage ( default ) ) return ; } default ; }Issues initAddIssue ( issue ; }<CODESPLIT>Thread safe assuming that each issues for each file are only written once .<CODESPLIT>1
@ Deprecated public Class < > getClassFromCollection ( final String collection ) { mappedClassesByCollection ( collection ) ; ( ( ) ) MappingException ( ( collection mapped java collection ) ) ; } ( ( ) ) ( isInfoEnabled ( ) ) ( ( collection collection ) ) } } return mcs. iterator ( ). next ( ). getClazz ( ) ; }<CODESPLIT>Converts a DBObject back to a type - safe java object ( POJO )<CODESPLIT>0
private Token eventuallyMatch ( Token Kind kind ) { checkNot ( ( ( return null ; } index index ; return token ; } }<CODESPLIT>Match a given sequence of tokens whilst moving passed any whitespace encountered inbetween . In the case that meet the end of the stream or we don t match the expected tokens in the expected order then an error is thrown .<CODESPLIT>0
public statichrun of ( CurrencyUnit currencyUnit ) { ( return (h currency } return ( currency getCurrency ( ) ) } }<CODESPLIT>Gibt die entsprechende Currency als Waehrung zurueck .<CODESPLIT>1
private Content processParamTags ( boolean isNonTypeParams, ParamTag [ ] paramTags, Map String, String > rankMap, TagletWriter writer, Set String > alreadyDocumented ) { Content writer getOutput ( ) ; (Tags ) (Tags ) ParamTag = paramTags ;Non ( ) "<" ( ) ; ( ( ( ) ) ) writer ( ) warning ( position ( )NonParamsdocletParameters :docletParameters paramName ) ; } rank rank ( ( ) ) ; ( ( ) ) writer ( ) warning ( position ( )NonParamsdocletParametersdup :docletParametersdup paramName ) ; } addContent ( process (NonParams writer parameterName ( )Document ( ) ) ) ;Document add ( rank ) ; } } return result ; }<CODESPLIT>Checks the current system time against the time limit throwing an InterruptedException if the time is up .<CODESPLIT>0
public void setVersions ( java util Collection String versions ) { ( ; return ; } versions com amazonaws internal SdkInternalList ( versions ; }<CODESPLIT><p > The version numbers of one or more launch template versions to delete . < / p ><CODESPLIT>0
private static ScriptRunner getRunner ( ) throws IOException { ( shared ( ) )Runner runnerRunner createRunner ( ) ; runner loadScript ( (dump ) ) ; runner loadScript ( ( ) ) ; runner loadScript ( (formats ) ) ; runner loadScript ( (load ) ) ; } ( Script ) ( javascript file ) ; } ( runner ) ; } return sharedRunner get ( ) ; }<CODESPLIT>Calculates a list of available citation locales<CODESPLIT>0
public AbstractPrintQuery addMsgPhrase ( final SelectBuilder _selectBldr, final UUID... _msgPhrase ) throws EFapsException { ( ; ( ( ( } return addPhrase (selectB, msg toArray ( MsgPhrase msg ( ) ) ) ; }<CODESPLIT>Adds the msg phrase .<CODESPLIT>1
private String extractAttributes ( SoyMsg msg ) { attributes ( ; ( getDesc ( ; ( ( attributes ( ( ) ; } return attributes toString ( ) ; }<CODESPLIT>Extracts message attributes from the message description . Returns an empty {<CODESPLIT>1
VoltTable [ ] executeSlowHomogeneousBatch ( final List < QueuedSQL > batch, final boolean finalTask ) { MpTransactionState txnState = ( MpTransactionState )_txnState ; ( txnState ) ;State state newState ( batch ( ) txnStatesite getCor ( )procedureForFragmentTasksCallStatsStmt ( ) ) ; ( batch ( ) ) QueSQL queuedSQL batch ( ) ; ( queuedSQL ) ; collectorOutputState getNextDependency ( ) ; state._ToResume = collectorOutputDepId ; ByteBuffer param ; param ( queuedSQL paramsSerialized ( ) ) ; queuedSQL params flattenToBuffer ( param ) ; } ( ) ( serial parameters SQL statement stmt ( ) params paramsString ( ) ) ; } ( param ) ; param flip ( ) ; state ( queuedSQL stmt param ) ; } setupProcedureResume ( statedepsResume ) ; ( statedeps ) (depsForLocal ) } statelocal setInput ( statedepsLocal ) ; }txnState createLocalFragmentWork ( statelocalTask statelocalFragsNonTransactionTask ) ; (distributed ( ) ) statedis (batch ) ;txnState createAllFragmentWork ( statedisTask ) ; } VoltTable mapResultssite recursRun (State ) ; ( mapResults ) ; ( statedepsResume ) ; assert ( statedepsToResume batch ( ) ) ; ( batch ( ) ) VoltTable matchingTablesFor mapResults ( statedepsResume ) ; ( matchingTablesFor null ) ; assert ( matchingTablesFor ( ) ) ; stateresultsTables ( ) ; } return state. m_results ; }<CODESPLIT>/ * Execute a batch of homogeneous queries i . e . all reads or all writes .<CODESPLIT>1
public GrpcServer start ( ) throws IOException { Retry (Starting gRPC server ( ( ( 500 ) ;Started ; return this ; }<CODESPLIT>Start serving .<CODESPLIT>1
public Chunk new_close ( ) { compress ( ; ( Append ( ( Append close ( return chk ; }<CODESPLIT>Slow - path append data<CODESPLIT>0
public static, V Predicate Map, V anyEntry ( Predicate Map Entry, V p ) { returnEntries (, any ( ) ) ; }<CODESPLIT>Returns a predicate that evaluates to {<CODESPLIT>0
public static, BiPredicate, biPredicate ( CheckedBiPredicate, predicate ) { biPredicate ( THUNTIMEEXCEPTION }<CODESPLIT>Wrap a {<CODESPLIT>0
private int calcFuByJanto ( ) {toTile comp getJto ( ) getTile ( ) ; = ; (to general ( ) ) += ; } (to personal ( ) ) += ; } (to ( ) ) += ; } return tmp ; }<CODESPLIT>待ちの種類による可符<CODESPLIT>0
@ Override publicRoleDBInstance addRoleDBInstance (RoleDBInstance request ) { beforeClientExecution execute ( request }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public static Object getValue ( Name name, int index ) { notNull ( name null ) ; Ldap ldap returnOrConstructLdapFromName ( name ) ; ldap ( index ) ; ( ( ) ) warn ( position index dn name multivalue value to trusted namebased method instead ) ; } return r getValue ( ) ; }<CODESPLIT>Get the value of the Rdn with the requested key in the supplied Name as a String .<CODESPLIT>0
