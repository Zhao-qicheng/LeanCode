public InputStream getResourceAsStream ( String resourceName ) { InputStream null ; = getRealResourcePath ( resourceName ) ; ( isFileSystem ( resourceName ) ) = new FileInputStream ( ) ; } ( ) ( resource realPath has ) ; } } ( ) super getResourceAsStream ( realPath ) ; } return is ; }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>0
public static void register ( Binder binder, Class clazz, Class Annotation annotation ) { register ( binder ( clazz ; }<CODESPLIT>Registers a class / annotation combination to instantiate eagerly . Classes mentioned here will be pulled out of the injector with an injector . getInstance () call when the lifecycle is created .<CODESPLIT>1
public static br_restoreconfig [ ] restoreconfig ( nitro_service client, br_restoreconfig [ ] resources ) throws Exception { ( resources ) ( ) ( resources ) return ( (restore ) resources (restore ) ) return ( (restoreconfig ) performoperationbulkrequest ( client, resources,restoreconfig ) ) ; }<CODESPLIT><pre > Use this operation to restore config from file on Repeater Instances . < / pre ><CODESPLIT>0
public Page findPageParameter ( Object paramObj ) { page ; ( ) page = ( Page ) paramObj ; } ( param Map ) Map = ( Map ) paramObj ; ( ( ) ) ( ) page = ( Page ) o ; } } } ( )LOCAL ( ) ; } return page ; }<CODESPLIT>从传递的参数中找Page对象，并返回<CODESPLIT>1
public static InputStream getResourceAsStream ( Class > clazz, String fn ) throws IOException { InputStream stream clazz getResourceAsStream ( ) ; ( ) (resource relative ) ; } return unpackStream ( stream, fn ) ; }<CODESPLIT>Get an input stream to read the raw contents of the given resource remember to close it : )<CODESPLIT>1
public static T, R > Supplier R > compose ( Function T, R > f, Supplier T > g ) { ( supplier with a function ; ( function with a supplier ; return ( ) f apply ( g get ( ) ) ; }<CODESPLIT>Composes a function with a ternary function .<CODESPLIT>0
public void getChars ( int srcBegin, int srcEnd, char dst [ ], int dstBegin ) { dest = dstBegin ; for ( ) dst destIndex ( ) ; } }<CODESPLIT>Copies characters from this string into the destination character array .<CODESPLIT>1
public getRedirectURL ( context, String viewId, Map String, List String parameters, boolean includeViewParams ) ( }<CODESPLIT><p class = changed_added_2_0 > Return a JSF action URL derived from the <code > viewId< / code > argument that is suitable to be used by the { @link NavigationHandler } to issue a redirect request to the URL using a NonFaces request . Compliant implementations must implement this method as specified in section JSF . 7 . 6 . 2 . The default implementation simply calls through to { @link #getActionURL } passing the arguments <code > context< / code > and <code > viewId< / code > . < / p ><CODESPLIT>1
@ Override public EClass getServerInfo ( ) { ( serverEClass )EClass ( EClass EPackage ( Store ) getEClassifiers ( ) ( 45 ) ; } return serverInfoEClass ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>0
public void addMaybeStartHandler ( Handler handler, Stage stage ) throws Exception { ( handlers ) ( started ( ) ) ( ( ) ) handler start ( ) ; } } handlers ( stage ( ; } }<CODESPLIT>This will materialize the entire sequence in memory . Use at your own risk .<CODESPLIT>0
@ SuppressWarnings ( {unusedWeakerAccess } ) public static CleverTapAPI instanceWithConfig ( Context context, @ NonNull CleverTapInstanceConfig config ) { ( ) (CleConfig null ) return null ; } ( instances ) instances new ( ) ; } Cle instance instances ( config ( ; ( instance ) instance newTap ( context config ) ; instances ( config ( instance ; } return instance ; }<CODESPLIT>Lifecycle<CODESPLIT>0
public ElemTemplate getCurrentTemplate ( ) {Template elem getCurrent ( ) ; ( ( ) ( ( )TEMPLATE ) ) elem elem getParent ( ) ; } return (Template ) elem ; }<CODESPLIT>This method retrieves the xsl : template that is in effect which may be a matched template or a named template .<CODESPLIT>1
public static boolean normalize ( IAtomContainer ac, Document doc ) throws InvalidSmilesException, CDKException { NodeList nl doc (replaceset ) ; SmilesParser sp = new SmilesParser ( ac getBuilder ( ) ) ; change = false ; for ( ( ) ) child ( ) nl item ( ) ; NodeList replaces child (replace ) ; NodeList replacement child (replacement ) ; replacementstring = replacement item ( ) getFirstChild ( ) getNodeValue ( ) ; ( replacementstring ( ) replacementstring ( ) ) replacementstring replacement item ( ) getFirstChild ( ) getNextSibling ( ) ( ) ; } replacementStructure sp parseSmiles ( replacementstring ) ; for ( replaces ( ) ) replace ( ) replaces item ( ) ; replaces = replace getFirstChild ( ) getNodeValue ( ) ; ( replaces ( ) replaces ( ) ) replacestring replace getFirstChild ( ) getNextSibling ( ) ( ) ; } replaceStructure sp parseSmiles ( replacestring ) ; RMap = null ; Universal universal = new Universal ( ) ; while ( (IsMap ( replace ) ) ) RMap = universal makeMapBondsMap ( ac replaceStructure ) ; RMap bond ( ) ; while ( ( ) ) RMap rmap bond next ( ) ; acbond ac ( rmap getId ( ) ) ; replacebond = replacementStructure ( rmap getId ( ) ) ; setOrder ( replace getOrder ( ) ) ; change = ; } RMap atom = ( ) ; while ( ( ) ) RMap rmap = atom next ( ) ; acatom = ac ( rmap getId ( ) ) ; replaceatom = replacementStructure ( rmap getId ( ) ) ;atom setCharge ( replaceatom getFormCharge ( ) ) ; change = ; } } } } return ( change ) ; }<CODESPLIT>The method takes an XML files like the following : <br > &lt ; replace - set&gt ; <br > &lt ; replace&gt ; O = N = O&lt ; / replace&gt ; <br > &lt ; replacement&gt ; [ O - ] [ N + ] = O&lt ; / replacement&gt ; <br > &lt ; / replace - set&gt ; <br > All parts in ac which are the same as replace will be changed according to replacement . Currently the following changes are done : BondOrder FormalCharge . For detection of fragments like replace we rely on UniversalIsomorphismTester . doc may contain several replace - sets and a replace - set may contain several replace fragments which will all be normalized according to replacement .<CODESPLIT>1
protected void writeTraceeContextToMessage ( Message message ) throws JMSException { ( backend ( ) backend getConfiguration ( ) should ( AsyncDispatch ) ) filtered backend ( ) filterDenied ( backend copy ( ) AsyncDispatch ) ; contextAsStringHeaderSerialization render ( filtered ) ; message setString ( Trace contextAsString ) ; } }<CODESPLIT>Writes the current TraceeContext to the given javaee message . This method is idempotent .<CODESPLIT>1
public void product ( IntLongVector other ) { for ( ) { elements start *= other. ( ) ; } }<CODESPLIT>/ * This method is used to get PHSFellowshipSupplemental12 XMLObject and set the data to it from DevelopmentProposal data .<CODESPLIT>0
public static SignatureValidationFilter buildSignatureValidationFilter ( final Resource signatureResourceLocation ) throws Exception { (Exist ( ) ). (Resource cannot be located signatureResourceLocation ) ; return null ; } val keyList ( ) ; keyList ( RSA ( ) ) ; keyList ( ( ) ) ; keyList ( ( ) ) ; keyList ( Inline ( ) ) ;. debug ( to resolve credentials from signatureResourceLocation ) ; val buildCredentialForMetadataSignatureValidation (Resource ) ;. info ( resolved credentials from signatureResourceLocation ) ;. debug (Configuring credential resolver for key signature trust engine @ credential ( ) ( ) ) ; val Static ( ) ; val key ( keyList ) ; valEngineEngine ( key ) ; (Adding validation filter based on configured engine ) ; val signatureValidationValidation (Engine ) ; signatureValidation setDefaultCriteria (ValidationCriteriaSetFactory ( ) getObject ( ) ) ;. debug (Added metadata SignatureValidationFilter with signature from signatureResourceLocation ) ; return signatureValidationFilter ; }<CODESPLIT>Build signature validation filter if needed .<CODESPLIT>1
public static URL makeURL ( String specification ) throws MalformedURLException {retrie URL specification specification ) ; ( (classpath ) )URLclasspath ) return new URL ( null, specification, new ClassPathURLStreamHandler ( ) ) ; } (URL ) return new URL ( specification ) ; }<CODESPLIT>Returns an URL object for the given URL specification .<CODESPLIT>1
public final void debug ( Object message, Throwable t ) { ( (DEBUG ) ) (DEBUG message t ) } }<CODESPLIT><p > Log a message with debug log level . < / p ><CODESPLIT>1
protected final String toLocaleStr ( Locale locale ) { ( locale Locale ROOT ) return "" ; } language = locale getLanguage ( ) ; country = locale getCountry ( ) ; variant = localeVariant ( ) ; ( language variant ) return "" ; } sb = new ( ) ; ( variant ) ( language ) ( ) ( ) ( ) ( ) ; } ( "" ) ( language ) ( ) ( ) ; } ( language ) ; } return sb. toString ( ) ; }<CODESPLIT>Convert locale to string with language_country [ _variant ]<CODESPLIT>1
public ListFacetAttributesResult withAttributes ( FacetAttribute... attributes ) { ( attributes ) setAttributes ( java ( attributes ) ; } ( attributes ) this attributes add ( ) ; } return this ; }<CODESPLIT><p > Associates an Identity and Access Management ( IAM ) role from an Neptune DB cluster . < / p ><CODESPLIT>0
public AutofHelper addOnTextSizeChangeListener ( OnTextSizeChangeListener listener ) { (ListenersChangeListener ( ; }Listeners add ( listener ; return this ; }<CODESPLIT>Adds an {<CODESPLIT>1
public void mergeVertices ( Set < VertexType > vertexSet, GraphType g, VertexCombinator < VertexType > combinator, GraphToolkit < GraphType, EdgeType, VertexType > toolkit ) { ( vertexSet ( ) ) return ; } TreeSet edgeSet = new TreeSet ( ) ; ( ( ) ( ) )Type ( ) ; ( vertexSet ( ( ) ) vertexSet ( ( ) ) )Set add ( ) ; } }Type composite combinator combineVertices ( vertexSet ) ; ( )Type source vertexSet contains ( getSource ( ) ) composite : getSource ( ) ;Type target vertexSet contains ( getTarget ( ) ) composite : getTarget ( ) ; ( source composite composite ( ) ( ) ) } ( lookupEdge ( source target ) ) }Type compositeEdge g createEdge ( source, target ) ; tool copyEdge (, compositeEdge ) ; } ( ) g remove ( aSet ) ; } }<CODESPLIT>Resolve an annotation into AnnotationValues representing any type qualifier ( s ) the annotation resolves to . Detects annotations which are directly marked as TypeQualifier annotations and also resolves the use of TypeQualifierNickname annotations .<CODESPLIT>0
@ Override public void visit ( Node node ) throws ELException { ( nodeFunction ) AstFunction funcNode = ( AstFunction ) node ; = null ; ( this fnMapper ) m fnMapper resolveFunction ( func getPrefix ( ), funcNode getLocalName ( ) ) ; } ( this varMapper func getPrefix ( ) ( ) ) this varMapper resolveVariable ( funcNode getLocalName ( ) ) ; return ; } ( this fnMapper ) EL (Factory get (fnMapper ) ) ; } ( ) EL (Factory get (fnMappermethod funcNode ( ) ) ) ; } methodParameter = getParameterTypes ( ) length ; inputParameter = node jjGetChild ( ) jjGetChildren ( ) ; (VarArgs ( ) inputParameter methodParameterVarArgs ( ) inputParameter methodParameter ) EL (Factory get (fnMapperparamcount funcNode ( ) methodCountGetChild ( )GetNumChildren ( ) ) ) ; } } ( nodeIdentifier this varMapper ) variable = ( ( AstIdentifier ) node ) getImage ( ) ; this varMapper resolveVariable ( variable ) ; } }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public Observable Job getJobDetailsAsync ( String teamName, String jobId ) { return getJobDetailsWithServiceResponseAsync ( ) map ( ServiceResponse ( ) Override public Job ( ServiceResponse Job ) { return body ( ) } } }<CODESPLIT>Get the Job Details for a Job Id .<CODESPLIT>0
private void checkIndices ( int row, int col ) { ( row row rows ) ArrayIndexOutOfBoundsException (row row ) ; ( col cols ) ArrayIndexOutOfBoundsException (column col ) ; }<CODESPLIT>Check that the indices of a requested cell are within bounds .<CODESPLIT>1
private void createParentChildRelationships ( Database db, HashMap < String, Account > descriptionMap, HashMap < String, ArrayList < String > > seqMap ) throws Exception { ArrayList parentIdStack = new ArrayList ( ) ; ( seqMap ( ROOTURI ) ) Exception (File contain root account ROOTURI ) ; parentIdStack add ( Account ROOTURI ) ; while ( parentIdStack ( ) ) parentId = parentIdStack ( ) ; Account parent = descriptionMap ( ) ; parentIdStack remove ( ) ; ( parentId compareTo ( ROOTURI ) ) ( parentAccount ) ( db findAccountById ( parentId ) ) Account parentParentAccount = db findParent ( parentAccount ) ; ( parentParentAccount ). (Node parent dropped ) ; parentAccount = null ; } } }. (Node matching RDFDescription node dropped ) ; } } parentAccount = db getRootAccount ( ) ; } ( parentAccount ) for ( seqMap. ( ) ) Account child = descriptionMap ( child ) ; ( childAccount ) ( parentAccount hasChild ( childAccount ) ) parentAccount getChildren ( ) add ( childAccount ) ; ( seqMap ( childAccount getId ( ) ) ) parentIdStack add ( childId ) ; childAccountFolder ( ) ; } }. (Duplicate child child parent parentAccount. ( ) ) ; } }. ( find RDFDescription child dropped ) ; } } } } }<CODESPLIT><p > Specifies the type of the array components so that the adequate array functions can be offered . < / p ><CODESPLIT>0
private DecimalFormat getNumberFormatter ( TransformerImpl transformer, int contextNode ) throws TransformerException { locale ( ) getLocale ( transformer, contextNode ) clone ( ) ; DecimalFormat formatter = null ; digitGroup = ( null mgroupingSeparatorav ) mgroupingSeparatorav evaluate ( transformerPath ( ) context this ) null ; ( ( digitGroup ) (groupingSeparatoravSimple ( ) ) ( digitGroup ( ) ) ) transformer ( ) ( this XSLTErrorResources WGLEG new { Constants.NAME_NAME m_Separator_avt. ( ) } ) ; }Group = ( null mgroupingav ) mgroupingav evaluate ( transformerPathContext ( ) context this ) null ; ( ( digitGroup ) (DigitsGroup ) ( digitGroup ( ) ) ) formatter ( DecimalFormat ) NumberFormat getNumberInstance ( locale ) ; formatter setGroupingSize ( (Group ) ( ) ) ; = formatterDecimalFormat ( ) ; setGroupingSeparator ( digitGroup ( ) ) ; formatter set ( ) ; formatter setGroupingUsed ( ) ; } ( ) formatter setGroupingUsed ( false ) ; } } return formatter ; }<CODESPLIT>Get the number formatter to be used the format the numbers<CODESPLIT>1
public static ListNotificationTemplate > toModels (NotificationTemplateSoap [ ] soapModels ) { (Models ) return null ; } models ( soapModels ) ; (SoapModels ) models add (Model ( ) ) ; } return models ; }<CODESPLIT>Converts the soap model instances into normal model instances .<CODESPLIT>1
public static Double toNullableDouble ( Object value ) { ( ) return ( Date ) return ( ) ( ( Date ) ) ( ) ( ) return ( ) ( ( ) ) ( ) ( Duration ) return ( ) ( ( Duration ) ) ( ) ( Boolean ) return ( boolean ) ( ) return ( ) ( ( ) ) ; ( ) return ( ) ( ( ) ) ; ( ) return ( ) ( ( ) ) ; ( ) return ( ) ( ( ) ) ; ( ) return ( ) ; ( String ) try return Double. parseDouble ( ( String ) value ) ; } ( ) return null ; } return null ; }<CODESPLIT>Converts value into doubles or returns default value when conversion is not possible .<CODESPLIT>0
@ Override public HttpCommandProcessor getCommandProcessor ( Protocol protocol ) { command = commandNames ( protocol ) ; ( command ) PanicIn ( HTTP Command configured protocol protocol ) ; }CommandProcessor commandProcessor ( HttpCommandProcessor ) applicationContext getBean ( commandProcessorName ) ; ( command ) PanicIn ( HTTP Command configured name commandProcessor ) ; } return commandProcessor ; }<CODESPLIT>Returns the command processor assocated with the supplied protocol<CODESPLIT>1
public String getGeneratorParameters ( ) { result = this getCommonConstructorParameters ( ) ; += "," ; +=this this ( )From ; += "," ; +=this this ( ) ; += "," ; += this ( ) getFClassName ( ) "." this ( )In ; += "," ; += this future ( ) ; += "," ; += thisInclusive ( ) ; += "," ; += this ( ) getFClassName ( ) "." this ( )Default ; += "," ; += thisProcessing ( ) ; += "," ; += thisNull ( ) ; return result ; }<CODESPLIT>/ * String attributeName String dataClassName String busClassName boolean isNullable boolean hasBusDate RelatedFinder relatedFinder Map<String Object > properties boolean transactional boolean isOptimistic<CODESPLIT>1
@ Override public boolean setActive ( ) { activated isActive ( ) ; ( activated ) locator new ( ( ) getContainer ( ) ) setEl ( getTitle ( ) ) ; title locator ( ( ) ( ) Tab ) ; activated title click ( ) ; } ( activated ) info (setActive : ( ) ) ; } return activated ; }<CODESPLIT>example new DataField () . setDate ( 19 05 2013 )<CODESPLIT>0
@ Override public StringConverter findConverter ( Class cls ) { ( return ByteArrayStringConverter INSTANCE ; } return null ; }<CODESPLIT>Creates a new conversion manager including the extended standard set of converters . <p > The returned converter is a new instance that includes additional converters : <ul > <li > JDK converters <li > { @link NumericArrayStringConverterFactory } <li > { @link NumericObjectArrayStringConverterFactory } <li > { @link CharObjectArrayStringConverterFactory } <li > { @link ByteObjectArrayStringConverterFactory } <li > { @link BooleanArrayStringConverterFactory } <li > { @link BooleanObjectArrayStringConverterFactory } < / ul > <p > The convert instance is mutable in a thread - safe manner . Converters may be altered at any time including the JDK converters . It is strongly recommended to only alter the converters before performing actual conversions .<CODESPLIT>0
@ Override public DisassociateSResources disSResources ( DisassociateSResources request ) { beforeClientExecution request executeDisResources ( request }<CODESPLIT><p > Removes specified S3 resources from being monitored by Amazon Macie . If memberAccountId isn t specified the action removes specified S3 resources from Macie for the current master account . If memberAccountId is specified the action removes specified S3 resources from Macie for the specified member account . < / p ><CODESPLIT>1
public static double cdf ( double val, double k, double lambda, double theta ) { return ( ) ( FastMath exp ( FastMath pow ( ( ) /, ) ) ) val val ; }<CODESPLIT>CDF of Weibull distribution<CODESPLIT>1
public static void equalizeLocalCol ( GrayU16 input, int radius, int startX, GrayU16 output, IWorkArrays workArrays ) { width = radius ; area = width width ; maxValue = workArrays length ( ) ; histogram = workArrays pop ( ) ; transform = workArrays pop ( ) ; hist0 = startX ; hist = startX width ; ( hist input ) hist1 = input. width ; hist0 = hist1 - width ; } localHistogram ( input, hist0,, hist, width, histogram ) ; sum = ; for ( histogram ) transform = sum += histogram ; } indexIn = input radius input startX ; indexOut = output radius output startX ; for ( ) inputValue = input data indexIn ++ ; output data indexOut = ( short ) ( ( transform inputValue maxValue ) area ) ; } for ( input. height ) indexIn = input. startIndex ( y - radius - 1 ) * input. stride ; for ( hist hist ) histogram input dataInxFFFF -- ; }In += input ; for ( hist hist ) histogram input dataInxFFFF ++ ; } sum = 0 ; for ( histogram. ) transform = sum += histogram ; } indexIn = input. startIndex y * input. stride startX ; indexOut = output. startIndex y * output. stride startX ; for ( ) inputValue = input data indexIn ++ ; output data indexOut = ( short ) ( ( transform inputValue maxValue ) area ) ; } } workArrays recycle ( histogram ) ; workArrays recycle ( transform ) ; }<CODESPLIT>Local equalization along a row . Image must be at least the histogram s width ( 2 * r + 1 ) in width and height .<CODESPLIT>0
public static int validArrayIndex ( int index, int arrayLength, final String message ) { ( ( ) } return index ; }<CODESPLIT>Throws an { @link IndexOutOfBoundsException } if { @code sliceFrom } or { @code sliceLength } is negative or the sum of both is greater than { @code arrayLength } . Note that this means that a slice of length zero starting at array length is a valid slice .<CODESPLIT>0
public static QConnectorSync create ( String host, int port ) { create ( }<CODESPLIT>ファイルが1904年始まりの設定かどうか。<CODESPLIT>0
private T INode > T addNode ( String src, T child, long childDiskspace, boolean inheritPermission ) throws Quota { componentsComponents ( src ) ; byte path = components components length - ; path ; ( ) ; in components ; ( ) ; ( components ; return addChild ( in, in length - 1, child, childDiskspace, inheritPermission ) ; } writeUnlock ( ) ; } }<CODESPLIT>Add a node child to the namespace . The full path name of the node is src . childDiskspace should be - 1 if unknown . QuotaExceededException is thrown if it violates quota limit<CODESPLIT>1
public Vector4 add ( float x, float y, float z, float w ) { add ( ( }<CODESPLIT>Increment the components of this vector by the given values .<CODESPLIT>1
public final DetectLanguageResponse detectLanguage ( String parent, String model, String mimeType ) { ( ( ) ) validate ( parentdetect ) ; } DetectRequest request DetectRequest newBuilder setParent setModel model mimeType ) build ) ; return detectLanguage ( request ) ; }<CODESPLIT>Formats a string containing the fully - qualified path to represent a location resource .<CODESPLIT>0
protected void commonSetup ( ZMatrixRMaj A ) { setExpectedMaxSize ( ; QR ; }<CODESPLIT><p > Computes the householder vector u for the first column of submatrix j . Note this is a specialized householder for this problem . There is some protection against overflow and underflow . < / p > <p > Q = I - &gamma ; uu<sup > H< / sup > < / p > <p > This function finds the values of u and &gamma ; . < / p ><CODESPLIT>0
@ Override public EsaResourceWritable parseFileToResource ( File assetFile, File metadataFile, String contentUrl ) throws RepositoryException {MetadataMetadata explodeArtifact ( assetFile, metadataFile ) ; ProvisioningFeatureDefinition feature ; featureSubsystemFeatureImpl constructInstance ( assetFile ) ; } ( ) RepositoryArchiveIOException ( ( ) assetFile ) ; }ResourceWritable resourceResourceFactory createEs ( null ) ; symbolic = feature ( ) ; version = feature getVersion ( ) toString ( ) ; subsystem = feature getHeader (Subsystem ) ; shortName = featurebm ( ) ; metadata = artifactMetadata null artifactMetadata ( ) null ; name ; ( metadata metadata ( ) ) name = metadataName ; } ( ( ) ) name = subsystemName ; } ( ( ) ) name = shortName ; } name = symbolicName ; } setName ( name ) ; shortDescription = null ; overriddenPolicy = null ; ( artifactMetadata ) shortDescriptionMetadata getShortDescription ( ) ; setDescription (MetadataDescription ( ) ) ;URL (Metadata (URL ) ) ; overriddenDisplayPolicyMetadata getProperty ( ) ; } (Description ) shortDescription feature getHeader (SubsystemDescription, ) ; }ShortDescription (Description ) ; setVersion ( ) ; processIcons ( assetFile, feature, resource ) ; provider = feature getHeader (SubsystemVendor ) ; ( provider provider ( ) )ProviderName ( provider ) ; (IB ( provider ) )ProviderUrl ( ) ; } } (Vendor set manifest headers ) ; }Provide ( symbolic ) ; ( artifactMetadata artifactMetadata (IBApplies ) )Applies (Metadata (Applies ) ) ; }Applies ( feature (Applies ) ) ; } Visibility visibility ; DisplayPolicy displayPolicy ; DisplayPolicy webDisplayPolicy ; ( ibm feature PUBLIC ( featureVisibility ( ) ) ) visibility = Visibility. PUBLIC ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. VISIBLE ; } ( ibm feature ( featureVisibility ( ) ) ) visibility = Visibility. PROTECTED ; displayPolicy = DisplayPolicy. HIDDEN ; webDisplayPolicy = DisplayPolicy. HIDDEN ; } ( ibm featureALL ( featureVisibility ( ) ) ) visibility = Visibility. INSTALL ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. HIDDEN ; } visibility = Visibility. PRIVATE ; displayPolicy = DisplayPolicy. HIDDEN ; webDisplayPolicy = DisplayPolicy. HIDDEN ; } setVisibility ( visibility ) ; ( feature isAutoFeature ( ) )Provision ( feature (Provision ) ) ; IBInstallPolicy = feature getHeader (InstallPolicy ) ; InstallPolicy installPolicy ; ( IB (whensat ( IB ) ) ) installPolicy = InstallPolicy. WHEN_SATISED ; } installPolicy = InstallPolicy. MANUAL ; displayPolicy = DisplayPolicy. VISIBLE ; webDisplayPolicy = DisplayPolicy. VISIBLE ; }Policy (Policy ) ; } ( isBeta ( resourceApplies ( ) ) )WebPolicy (Policy HIDDEN ) ; } resourceWebPolicy ( webPolicy ) ; } ( overriddenDisplay ) displayPolicyPolicy ( overriddenDisplayPolicy ) ; } resourcePolicy ( displayPolicy ) ; required = feature getHeader ( ) ; ( required required ( ) ) fixes = required split ( "," ) ; ( fixes ) fix fix trim ( ) ; ( fix ( ) ) resource addRequireFix ( fix ) ; } } } resourceShortName ( shortName ) ; CollectionResource requiredFeatures = featureCon (ContentType FEATURE ) ; ( Feature requiredFeatures ) tolates = featureResourceates ( ) ; required = featureResource ( ) ; resource addRequireFeatureWithTolates ( requiredFeature, tolates ) ; } superdedBy = feature getSuperdedBy ( ) ; ( superBy superBy ( ) ( ) ) superdedByArray = superdedBy split ( "," ) ; (Array ) ( ( "[" ) ) f f (, f ( ) ) ; resource addSuperdedByOptional ( f ) ; } resource addSuperdedBy ( f ) ; } } } ( artifactMetadata ) attachLicenseData (Metadata, resource ) ; } setJavaRequirements ( assetFile, resource ) ; attachment = symbolic ; addContent ( resource, assetFile, attachment,Metadata, contentUrl ) ; processLA ( assetFile, resource, feature ) ; } ( ) RepositoryArchiveIOException ( ( ) assetFile ) ; } resourceLicense ( feature (SubsystemLicense ) ) ; resource ( ( feature ( ) ) ) ; resource ( feature ( ) ) ; return resource ; }<CODESPLIT>Look in the esa for bundles with particular java version requirements . Create an aggregate requirement of the esa as a whole and write the data into the supplied resource<CODESPLIT>0
public static T invokeMethod ( final Object obj, Method method, Object... args ) { return ( ) method invoke (, args ) ; } ( ( ) } }<CODESPLIT>调用构造函数 .<CODESPLIT>0
public SSLEngine addCommonConfigs ( SSLEngine engine ) { ( sslSuites ( ) sslSuites ( ) ) engine setEnabledCipherSuites ( sslSuites ( ) ) ; } ( sslProtocols ( ) sslEnableProtocols ( ) ) engine setEnabledProtocols ( sslEnableProtocols ( ) ) ; } engineEnableCreation ( sslEnableCreation ( ) ) ; return engine ; }<CODESPLIT>Add common configs for both client and server ssl engines .<CODESPLIT>1
public static InternalKBaseKBase ( String kbaseId,BaseConfiguration conf ) { returnBase ( (Base conf }<CODESPLIT>TODO : FIXME : make it consistent with above<CODESPLIT>0
private < ItemT > void addInternal ( @ Nonnull Iterable < ItemT > items ) { ( items iterator ( ) hasNext ( ) ) return ; }BuildNumber getNextBuildNumber ( items ( ) ( ) ) ; ( newerThan olderThan )T items ( ) ; while ( ( ) ) add ( ( ) ) ; ( isFull ( ) ) } } hasDownPage hasNext ( ) ; } ( newerThan ) toFill = getF ( ) ; (Fill ) LinkedList itemsToAdd = new LinkedList ( ) ;T items ( ) ; while ( ( ) )T item ( ) ; ( History getEntry ( item ) newerThan ) itemsToAdd addLast ( item ) ; ( itemsToAdd ( ) toFill ) itemsToAdd removeFirst ( ) ;Up = ; } } } } ( itemsToAdd ( ) )Down = ; } ( itemsToAdd ( ) toFill )T skipped items ( ) ; Iterators skip ( skipped, itemsToAdd size ( ) ) ; for ( itemsToAdd ( ) skipped ( ) )T item skipped ( ) ; itemsToAdd addLast ( item ) ; } } hasDownPage hasNext ( ) ; for ( itemsToAdd ) add ( item ) ; } } } } ( olderThan )T items ( ) ; while ( ( ) ) item = next ( ) ; ( History getEntry ( item ) olderThan )Up = ; } add ( item ) ; ( isFull ( ) ) hasDownPage hasNext ( ) ; } } } } }<CODESPLIT>Add run items and queued items to the History page .<CODESPLIT>0
private Set < Artifact > getProjectDependencyManagement ( ) { result new LinkedHashSet ( ) ; getProject ( ) ( ) ; (Management ) (Management getDependencies ( ) ) add ( to ( dependency ) ) ; } } return result ; }<CODESPLIT>Returns all dependency artifacts in all modules excluding all reactor artifacts ( including attached ) .<CODESPLIT>0
public void add ( Rec fieldList ) throws DBException { Record record = ( Record ) fieldList ; ( ( ( this getRecord ( ) ( ) DBConstants OPENREFLOCK ) DBConstants OPENREFLOCK ) ( recordRefresh ( ) ) ) this restoreMainRecord ( record true ) ; super add ( record ) ; }<CODESPLIT>Add this record ( Always called from the record class ) .<CODESPLIT>1
protected void setException ( Throwable t ) { (Int ( this NEW ) ) outcome = t ;OrderedInt ( this ) ; finishCompletion ( ) ; } }<CODESPLIT>Sets the result of this future to the given value unless this future has already been set or has been cancelled .<CODESPLIT>0
@ Pure public static URL getResource ( ClassLoader classLoader, String path ) { ( }<CODESPLIT>Replies the input stream of a resource .<CODESPLIT>0
@ SuppressWarnings (unchecked ) static K, V > Map K, V > dynamicallyCastMap ( Map, > map, Class K > keyType, Class V > valueType ) { ( ) return null ; } assert checkCollectionMembers ( ( ) ) contains keys type ( ) ; assert checkCollectionMembers ( values ( ) ) contains values type ( ) ; return ( Map, ) map ; }<CODESPLIT>=====<CODESPLIT>0
@ Override public java util List com liferay product model getCPDefinitionsByUuidAndCompanyId ( String uuid, long companyId ) { returnOptionValueRelLocalService getCOptionValueRelByUuid ( uuid, ) }<CODESPLIT>Returns a range of cp definition option value rels matching the UUID and company .<CODESPLIT>0
public void setComplianceStatus ( java util Collection StringFilter > complianceStatus ) { ( compliance ) this compliance ; return ; } this compliance javaFilter ( compliance ) ; }<CODESPLIT><p > The details of a resource that does not have a specific sub - field for the resource type defined . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setResourceDetailsOther ( java . util . Collection ) } or { @link #withResourceDetailsOther ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
public static void callMethod ( final Object obj, final String methodName, final boolean includePrivateMehtods, final Object... args ) throws InvocationTargetException {ArgsClass = initParamsClasses ( args ) ; current = obj ( ) ; method = null ; ( Object ) method getDeclaredMethod ( methodName,ArgsClass ) ; } ( ) getSuperclass ( ) ; } } ( method ) NoSuchMethodException (Me current ) ; } method setAccessible ( ) ; method invoke ( obj, args ) ; } ( ) ( ( ) ) ; } ( ) ( ) ; } }<CODESPLIT>Checks if is class avilable in class path .<CODESPLIT>0
@ Override public boolean canParse ( File file ) { ; returnIgnoreCase (, ) ; }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public final ListProductSetsPag listProductSets ( LocationName parent ) {Sets requestSets newBuilder ( setParent ( ( build ( ; return listProductSets ( request ) ; }<CODESPLIT>Lists ProductSets in an unspecified order .<CODESPLIT>1
public Matrix solve ( Matrix B ) { if ( B. getRowDimension ( ) n ) { throw IllegalArgumentException (Matrix row dimensions ag." ) ; } if ( issp ) { throw (Matrix symmetric positiveite." ) ; } double X = B. ( ) ; = B. getColumnDimension ( ) ; for ( ) { for ( ) { for ( ) { X [ k [ j -= X [ i [ j * L [ k [ i ; } X [ k [ j /= L [ k [ k ; } } for ( ) { for ( ) { for ( ) { X [ k [ j -= X [ i [ j * L [ i [ k ; } X [ k [ j /= L [ k [ k ; } } return new Matrix ( X, n, nx ) ; }<CODESPLIT>Solve A * X = B<CODESPLIT>1
public java util List RecordPatch > getRecordPatches ( ) { (Patches ) record com amazonaws internal SdkInternalList ( ; } return recordPatches ; }<CODESPLIT>A list of patch operations .<CODESPLIT>1
private void processFields ( ) { fieldsFields ( embeddable ) ; ( Field fields ) ( field ( Embedded ) ) processEmbedded ( field ) ; } processSimple ( field ) ; } } }<CODESPLIT>Processes the given simple ( or primitive ) field and updates the metadata .<CODESPLIT>0
public Observable updateExplicitListItemAsync ( UUID, String, UUID entityId, long itemId, UpdateExplicitListItemOptionalParameter updateExplicitListItemOptionalParameter ) { return updateWithServiceResponseAsync (, updateOptionalParameter ) map ( ServiceResponse, ( ) Override public ( ServiceResponse ) { return body ( ) } } ; }<CODESPLIT>Updates an explicit list item for a Pattern . Any entity .<CODESPLIT>1
public void register ( DiagnosticsPlugin plugin ) { checkNotNull ( plugin, null ) ; ( enabled ) return ; } period = plugin getPer ( ) ; ( period ) IllegalArgumentException ( plugin return period ) ; }. ( plugin. ( ). ( ) ( period DISdisabledenabled ) ) ; ( period DIS ) return ; } pluginsMap put ( plugin getClass ( ), plugin ) ; plugin onStart ( ) ; ( period ) scheduler scheduleFixedRate ( new WritePluginTask ( plugin ) period ) ; } addStaticPlugin ( plugin ) ; } }<CODESPLIT>Registers a { @link DiagnosticsPlugin } . <p > This method is thread - safe . <p > There is no checking for duplicate registration . <p > If the { @link Diagnostics } is disabled the call is ignored .<CODESPLIT>1
public CacheManagerTask cleanAreaAsync ( Context ctx, BoundingBox bb, int zoomMin, int zoomMax ) { task ( this ( bb zoom zoom ; addCallback (Dialog ( ) ) ; return execute ( task ) ; }<CODESPLIT>Remove all cached tiles in the specified area .<CODESPLIT>1
public static List ExternalGraphic > externalGraphicsFromGraphic ( Graphic graphic ) {List ( ) ; ( graphic ( ) ) ( ( ) ( ) ) ExternalGraphic externalGraphic = ( ExternalGraphic ) gs ;List add ( external ) ; } } return gList ; }<CODESPLIT>Creates a default { @link Style } for a featurecollection .<CODESPLIT>0
public ArrayClassInfo getArrayClassInfo ( String typeClassName, Type arrayType ) { ( ( return Array ( typeClassName, elementClassInfo ) ; }<CODESPLIT>For array types the previous implementation used the element name .<CODESPLIT>0
public void free ( ) { panel ( )Base getSub ( this ) ; ( panel ) panel free ( ) super free ( ) ; }<CODESPLIT>Free the sub = components .<CODESPLIT>1
public final void ruleXMemberFeatureCall ( ) throws RecognitionException { stack ( ) ; { { ( ) before (MemberFeatureCallAccess ( ) ( ) ) ; } { ( ) ; rule__MemberFeatureCall__Group__0 ( ) ; ; ( ) return } ( ) after (MemberFeatureCallAccess ( ) ( ) ) ; } } } } ( RecognitionException ) ( ) ; ( input re ) ; } restore ( ) ; } return ; }<CODESPLIT>InternalXbase . g : 633 : 1 : entryRuleXMemberFeatureCall : ruleXMemberFeatureCall EOF ;<CODESPLIT>0
protected String signAndBase64Encode ( byte [ ] data, String key, SigningAlgorithm algorithm ) throws SdkClientException { sign ( data ( ) algorithm ) ; return Base64 encodeAsString ( signature ) ; } ( ) SdkClientException ( calculate ( ) ) ; } }<CODESPLIT>Computes an RFC 2104 - compliant HMAC signature for an array of bytes and returns the result as a Base64 encoded string .<CODESPLIT>1
private void ProcessNextStep ( ) { (SelectionStep ) SELECTCAT SELECTCAT ( CatalogToSelect ( ) ) fMain show ( ) ; return ; } SELECTSTSCHEMA SELECTSCHEMA (ToSelect ( ) ) fMain show ( ) ; return ; } SELECT (Transfer TRFTRANS ) bStart setLabel (Start Transfer ) ; } (Transfer TRUMP ) bStart setLabel (Start Dump ) ; } (Transfer TRRESTORE ) bStart setLabel (Start Restore ) ; } bStart invalidate ( ) ; bStart setEnabled ( false ) ; lTable setMultiple ( false ) ; RefreshMainDisplay ( ) ; default : ; } }<CODESPLIT>Method declaration<CODESPLIT>0
JsonRepresentation asEventRepr ( EventMetadata metadata, final JsonRepresentation payloadRepr ) { eventRe newMap ( ) ; metadataRe newMap ( ) ; eventRe mapPut (metadata metadataRe ) ; metadataRe mapPut ( metadata ( ) ) ; metadataRe mapPut ( metadata ( ) ) ; metadataRe mapPut ( metadata getSequence ( ) ) ; metadataRe mapPut (event metadata ( ) ) ; metadataRe mapPut ( metadata ( ) ) ; metadataRe mapPut ( metadata ( ) ) ; eventRe mapPut (payload payloadRe ) ; return eventRe ; }<CODESPLIT>Set up the screen fields ( default = set them all up for the current record ) .<CODESPLIT>0
public float dot ( IntFloatVector y ) { ( y IntFloatSortedVector ) IntFloatSortedVector other = ( ( IntFloatSortedVector ) y ) ; dot = ; oc = ; for ( used ) { while ( other used ) { ( other indices oc < indices ) ++ ; } if ( indices == other indices oc ) dot += values * other values ; ; } ; } } } return dot ; } dot = ; for ( used ) { dot += this values * ( indices ) ; } return dot ; } }<CODESPLIT>Computes the dot product of this vector with the other vector .<CODESPLIT>1
protected final PrcRefreshCatalog lazyGetPrcRefreshCatalog ( final Map < String, Object > pAddParam ) throws Exception { beanName PrcRefresh ( ) ; PrcRefreshCatalog ( PrcRefreshCatalog ) this processors ( ) ; ( ) new PrcRefresh ( ) ;Listeners ( ) add ( thisPublicTradeProcessorsPrcWeb ( pAddParam ) ) ; this processorsMap ( ) ; this info ( nullTradeProcessors created ) ; } return proc ; }<CODESPLIT><p > Lazy get PrcRefreshCatalog . < / p ><CODESPLIT>1
private static String buildMessage ( String id ) { ( return NULL } return format (F, id ) }<CODESPLIT>Build the exception s message using the <tt > id< / tt > value .<CODESPLIT>1
public double [ ] getMeynessAsOffsets ( ) { ( ( ( mapToDouble ( ; ( moneyness moneyness map ( new DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return ; } } ) ; } ( moneyness moneyness map ( new DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return -0001 ; } } ) ; } moneyness moneyness map ( new DoubleUnaryOperator ( ) { Override public double applyAsDouble ( double x ) { return0001 ; } } ) ; } returnness toArray ( ) ; }<CODESPLIT>Return all valid maturities for a given moneyness . Uses the fixing times of the fix schedule to determine fractions .<CODESPLIT>0
public Frustum setToProjection ( double left, double right, double bottom, double top, double near, double far, IVector3 nearFarNormal, boolean ortho, boolean mirrored ) { n = nearFarNormal. x ( ), n = nearFarNormal. ( ), nz = nearFarNormal. z ( ) ; ( ) doublez = - 1f / nz ; double = nx * left *z = nx * right *z ; double yb = ny * bottom *z yt = ny * top *z ; _vertices 0 set ( left bottom + - near ) ; _vertices m set ( right bottom xr + - near ) ; _vertices set ( right top xr + - near ) ; _vertices m set ( left top + - near ) ; _vertices set ( left bottom + - far ) ; _vertices m set ( right bottom xr + - far ) ; _vertices set ( right top xr + - far ) ; _vertices m set ( left top + - far ) ; } double = 1f / near ; doublen = left * rrn = right * ; double brn = bottom * trn = top * ; double = near * nz ; z0 = / ( n n br nz ) ; _vertices 0 set ( - z lr - z br z ) ; z1 = / ( n rr n br nz ) ; _vertices m set ( - z rr - z br z ) ; z2 = / ( n rr n tr nz ) ; _vertices set ( - z rr - z tr z ) ; z3 = / ( n n tr nz ) ; _vertices m set ( - z3 lr - z3 tr z3 ) ; double fz = far * nz ; z4 = fz / ( n n br nz ) ; _vertices set ( - z4 lr - z4 br z4 ) ; z5 = fz / ( n rr n br nz ) ; _vertices m set ( - z rr, - z br, z ) ; z6 = fz / ( n rr n tr nz ) ; _vertices set ( - z rr, - z tr, z ) ; z = fz / ( n n tr nz ) ; _vertices m set ( - z7 lr, - z7 tr, z7 ) ; } updateDerivedState ( ) ; return this ; }<CODESPLIT>Sets this frustum to an orthographic one pointing in the Z - direction with the specified parameters determining its size ( see the OpenGL documentation for <code > glOrtho< / code > ) .<CODESPLIT>0
private String parameterToString ( Object param ) { ( ) return "" ; } ( ) return formatDate ( ( Date ) param ) ; } ( Collection ) new ( ) ; ( ( Collection ) ) ( ( ) ) ( "," ) ; } ( ( ) ) ; } return b toString ( ) ; } return String valueOf ( param ) ; } }<CODESPLIT>Reads a buffer .<CODESPLIT>0
public static T T validateNotNull ( T value, String errorMsgTemplate, Object... params ) Validate { ( ( ( ) } return ; }<CODESPLIT>检查指定值是否为<code > null< / code ><CODESPLIT>0
public final void setCommitTrigger ( CommitTrigger commitTrigger ) { ( commit commit ) return ; } ( commit ) this commitTrigger removeCommitTrigger ( commitTrigger ) ; this commit ; } ( commit ) ( commit ) this commit Commit ( ; } this commitTrigger = commitTrigger ; this commitTrigger addCommitTrigger ( commitTrigger ) ; } }<CODESPLIT>Sets the <code > CommitTrigger< / code > that triggers the commit and flush events .<CODESPLIT>1
public static String getRelativeSubPath ( String base, String path ) { result null ; base CmsStringUtil joinPaths ( base ) ; path CmsStringUtil joinPaths ( path ) ; ( path ( base ) ) path ( base ( ) ) ; } ( ) ( ( ) ) ( ( ) ) ; } ( ( ) ) result = "/" result ; } } return result ; }<CODESPLIT>Returns <code > true< / code > if the provided Objects are either both <code > null< / code > or equal according to { @link Object#equals ( Object ) } . <p ><CODESPLIT>0
private void readMoreBytesFromStream ( ) throws IOException { (StreamMore ) return ; } bufferAvailable buffer bytesBuffer ; ( bufferSpaceAvailable ) return ; } stream read ( buffer bytesBuffer bufferAvailable ) ; ( ) innerStreamHasMoreData = false ; } ; } }<CODESPLIT>Fill the buffer with more data from the InputStream if there is any .<CODESPLIT>1
@ Override publicPlan getP (PlanRequest request ) { request beforeClientExecution request executeGet ( request }<CODESPLIT><p > Retrieves a specified security configuration . < / p ><CODESPLIT>0
public void println ( final String str ) throws IOException { writer ( ) writer ( ) ; this writer flush ( ) ; }<CODESPLIT>{<CODESPLIT>0
@ Generated ( value {reeringspresentsGenDObjectTask } ) public void setPeerService ( PeerMarshaller value ) { PeerMarshaller ovalue this peerService ; request this peerService value ; }<CODESPLIT>Requests that the <code > bootStamp< / code > field be set to the specified value . The local value will be updated immediately and an event will be propagated through the system to notify all listeners that the attribute did change . Proxied copies of this object ( on clients ) will apply the value change when they received the attribute changed notification .<CODESPLIT>0
public String replaceDocRootDir ( String htmlstr ) { index = html (@" ) ; ( index ) return htmlstr ; } docroot docrootPattern ( html ) ; ( docroot ( ) ) return htmlstr ; } buf = new ( ) ; = ; do { match = docroot ( ) ; buf ( html (End, ) ) ;End docroot end ( ) ; ( configuration docrootparent ( ) html (End ) ) buf ( configuration docrootparent ) ; += ; } buf ( pathToRoot ( ) "." : pathToRoot getPath ( ) ) ; } (End html ( ) html (End ) ) buf ( ) ; } } ( ( ) ) buf ( html (End ) ) ; return buf. toString ( ) ; }<CODESPLIT>Programmatic interface .<CODESPLIT>0
public static List String > getPropertyNames ( Object obj ) { propertyNames new ( ) ; ( ) return propertyNames ; }Detect new ( ) ; performGetPropertyNames ( obj null propertyNames cycleDetect ) ; return propertyNames ; } }<CODESPLIT>Recursively gets names of all properties implemented in specified object and its subobjects .<CODESPLIT>1
public boolean checkLocks ( boolean exclusive, int depth ) { (Parents ( ( return true } return false }<CODESPLIT>checks if a lock of the given exclusivity can be placed only considering children up to depth<CODESPLIT>1
private static void createFactoryInstance ( ) { Class cls = Class forName ( MPSELECTOREVALUFACTORY ) ; instance = ( MPSelectorEvaluatorFactory ) cls newInstance ( ) ; } ( ) (,MPSelectorEvaluatorFactorycreateFactoryInstance, ) ; ( ) ; } }<CODESPLIT>Create the singleton Factory instance .<CODESPLIT>1
public NotificationChain basicSetUniformDistribution ( UniformDistributionTypeUniformDistribution, NotificationChain msgs ) { return ( (Map ( ) basicAdd (ROOTUNIFORMUniform msgs ) }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>1
private EntityManager getEntityManager ( ) { EntityManager em ; ( ( ) ) em ( ) transactionSynchronization ( ) ; ( ) em createEntityManager ( ) ; transaction register ( TxSynchronization ( em ) ) ; transactionSynchronization ( em ) ; } validateCompatibleSyncTypes ( em ) ; } } em nonEm getEntityManager ( ) ; ( ) em createEntityManager ( ) ; nonEm ( ) ; } } return em ; }<CODESPLIT>Subscribes to an event dispatcher and starts a watch for a given key .<CODESPLIT>0
public FSArray getItemList ( ) { ( List featOkTst ( ( List ) jcasType ) casFeat ) jcasType jcas throwFeatMissing ( ) return (Array ) ( jcasType llcas llgetForRef ( jcasType ll_cas ll_get ( addr, ( ( List_Type ) jcasType ) casFeatCode_itemList ) ) ) ; }<CODESPLIT>setter for itemList - sets contains items of the level 1 . The items of the level 1 could contain further items of next level and so on in order to represent an iterative structure of list items .<CODESPLIT>0
public PushRules createPushRules ( Object projectIdOrPath, PushRules pushRule ) throws GitLabApiException { GitLabForm formData = new GitLabForm ( ) (dendeletetag pushRuleDelete ( ) ) (membercheck pushRule getMemberCheck ( ) ) (secret pushRule getPreSecrets ( ) ) (commitmessageregex pushRuleCommitMessageRegex ( ) ) (branchregex pushRule getBranchRegex ( ) ) (emailregex pushRuleAuthorEmailRegex ( ) ) (fileregex pushRule getFileNameRegex ( ) ) (filesize pushRule getMaxFileSize ( ) ) ; response post ( CREATED, formData,, getProjectIdOrPath ( projectIdOrPath ),push ) ; return (. readEntity ( PushRules. ) ) ; }<CODESPLIT>Adds a push rule to a specified project .<CODESPLIT>1
public static IsoRecurrence DateInterval of ( int count, PlainDate start, Duration IsoDateUnit duration ) { check ( ( ( ) } returncurrentDateIntervals ( count,STARTDURATION, start, duration ) ; }<CODESPLIT>/ * [ deutsch ] <p > Erzeugt eine Sequenz von wiederkehrenden Datumsintervallen mit der angegebenen Dauer . < / p ><CODESPLIT>1
private static String upperCaseHex ( String s ) { char chars [ ] = s. toCharArray ( ) ; int length = s. length ( ) ; for ( length ) { switch ( chars [ i ] ) { chars [ = ; ; chars [ = ; ; case chars [ = ; ; case chars [ = ; ; case chars [ = ; ; case chars [ = ; ; } } return new String ( chars ) ; }<CODESPLIT>/ * Efficiently converts a string containing a hexadecimal number from lower case to upper case<CODESPLIT>1
static ImmutableList < NameValuePair > buildParameters ( String analyticsId, String clientId, String virtualPageName, String virtualPageTitle, String eventType, String eventName, boolean isUserSignedIn, boolean isUserInternal, Optional < Boolean > isUserTrialEligible, Optional < String > projectNumberHash, Optional < String > billingIdHash, Optional < String > clientHostname, Random random ) { checkNotNull ( analytics ) ; checkNotNull ( clientId ) ; checkNotNull ( virtualTitle ) ; checkNotNull ( virtual ) ; checkNotNull ( eventType ) ; checkNotNull ( eventName ) ; checkNotNull ( projectNumberHash ) ; checkNotNull ( billingHash ) ; checkNotNull ( clientHostname ) ; checkNotNull ( random ) ; list new ( ) ; list add ( new (PROTOCOL ) ) ; list add ( new (ID analytics ) ) ; list add ( new ( VALUEVIEW ) ) ; list add ( new (NONINTERACTIVE VALUEFALSE ) ) ; list add ( new (CACHEBUSTER toString ( randomLong ( ) ) ) ) ; list add ( new (EVENT eventType ) ) ; list add ( new (EVENT eventName ) ) ; (Hostname ( )Hostname ( ) ( ) ) list add ( new ( client ( ) ) ) ; } list add ( new (CLIENTID clientId ) ) ; ( projectHash ( ) projectHash ( ) ( ) ) list add ( new (NUMHASH projectNumberHash ( ) ) ) ; } (Hash ( )Hash ( ) ( ) ) list add ( new (ILLIDHASH billingHash ( ) ) ) ; } list add ( new (USERSIGNED to ( isUserSignedIn ) ) ) ; list add ( new (USER to ( isUserInternal ) ) ) ; ( isUserEligible ( ) ) list add ( new (USERTRILE to ( isUserTriEligible ( ) ) ) ) ; } list add ( new (VIRTUAL VALUETRUE ) ) ; list add ( new ( virtual ) ) ; (Title ( ) ) list add ( new (TITLE virtualTitle ) ) ; } return listBuilder. build ( ) ; }<CODESPLIT>Adds more data providers to the validator .<CODESPLIT>0
@ Override public void insert ( CharSequence text ) throws IOException { = text length ( ) ; ( ln ) return ; } ( ln ( end cursor ) ) IOException ( text buffer ) ; } ( cursor end ) makeRoom ( ) ; } for ( ln ) set ( ( cursor ), text ( ) ) ; } += ; }<CODESPLIT>Inserts text at cursor position<CODESPLIT>1
public void onNewTab ( final AjaxRequestTarget target, final T tab, final int index ) { ( ( ( ( ( ) ) IndexOutOfBoundsException ( ) }abs ( add ( ; setSelected ( ; add ( this ; }<CODESPLIT>On new tab .<CODESPLIT>1
public static void outputImage ( int w, int h, OutputStream os, String code ) throws IOException { verify = code length ( ) ; BufferedImage image = new BufferedImage ( w BufferedImage TYPEINTRGB ) ; Random rand = new Random ( ) ; g = image createGraphics ( ) ; g set ( ) ; Color colors = new Color ; Color colorSpaces = new Color { Color. WHITE Color. CYAN Color. GRAY Color. L_GRAY Color. MAGENTA Color. ORANGE Color. PINK Color. YELLOW } ; fraction = new colors length ; for ( colors ) colors = color rand. nextInt ( color. length ) ; fractions = rand nextFloat ( ) ; } Arrays sort ( fractions ) ; g setColor (RAY ) ; g fillRect (,, w, h ) ; Color = getRColor ( 200, ) ; g setColor ( c ) ; g fillRect (,, w, h ) ; Random random = new Random ( ) ; g setColor ( getRColor ( 200 ) ) ; for ( 20 ) = random nextInt ( w ) ; = random nextInt ( ) ; = random nextInt ( ) ; = random nextInt ( ) ; g drawLine ( x,, x xl 40, 20 ) ; }Rate = ; area = ( ) (Rate w ) ; for ( area ) = random nextInt ( w ) ; = random nextInt ( ) ; = getRandomIntColor ( ) ; image setRGB ( ) ; } shear ( g, w, h, ) ; g setColor ( getRColor ( 100 ) ) ; = ; font = new (Alian fontSize ) ; g setFont ( font ) ; chars = code toCharArray ( ) ; for ( verify ) AffTransform affine = new AffTransform ( ) ; setToRotation ( / rand nextDouble ( ) ( rand nextBoolean ( ) ) ( w / verifySize ) / / ) ; g setTransform ( ) ; g drawChars ( chars,,, ( ( w 10 ) verifySize ) 5, h fontSize 10 ) ; } g dispose ( ) ; ImageIO write ( image,jpg, os ) ; }<CODESPLIT>生成指定验证码图像文件<CODESPLIT>0
public Object findClosestObject ( int x, int y, int [ ] distance ) { ( _size ) return null ; } sr = binarySearch ( ) = sr ;ist = min = ; for ( boolean expanded true expanded ) expanded = false ; ( _size ) Record rec = _records sr ; ( x x mind ) = distance ( ) ; ( mind ) min = sr ; mindist = dist ; } += ; expanded = true ; } } ( ) Record rec = _records sl ; ( x x mind ) = distance ( rec ) ; ( mind ) min = sl ; mindist = dist ; } sl -= 1 ; expanded = true ; } } } ( min ) (Prox algorithm ) ; } ( distance null distance ) distance 0 = mindist ; } return _records [ minidx ]. object ; }<CODESPLIT>Removes from the tracker the object that is equal to ( <code > o1 . equals ( object ) < / code > ) the specified object .<CODESPLIT>0
public void setGoldenGrammarErrors ( FSArray v ) { ( GSentence featOkTst ( ( GSentence ) jcasType ) casFeatGrammarErrors ) jcasType jcas throwFeatMissing (oldGrammarErrorsimaoldSentence ) ; jcasType llcas llset ( addr, ( ( GoldSentenceType ) jcasType ) casFeatCodeoldGrammarErrors, jcasType llcas llgetFSRef ( v ) ) ; }<CODESPLIT>setter for goldenGrammarErrors - sets<CODESPLIT>1
Map < CmsPrincipalBean, String > getResponsibles ( CmsObject cms, CmsResource res ) { MapPrincipalBean result = newPrincipalBean ( ) ; parentResources = new ArrayList ( ) ; parentResources cms readPath ( res, CmsResourceFilterEXPI ) ; } ( ). (. ( ) ) ; } for ( resource parentResources ) stored = cms ( ) getSiteRoot ( ) ; sitePath = cms ( ) remove ( resource getRootPath ( ) ) ; ( ) ( "/" ) ;AccessControl entries = cmsAccessControlEntries ( resource getRootPath ( ) false ) ; for (AccessControl entries ) (Res ( ) )Principal principal cms lookupPrincipal ( ace getPrincipal ( ) ) ; ( principal )PrincipalBeanBean = newPrincipalBean ( principal ( ) principal getDescription ( ) principalGroup ( ) ) ; ( resource ( ) ( ( ) ) ) ( resource ( ) ( ) ) result put ( prBean, sitePath ) ; } result put ( prBean, resource getRootPath ( ) ) ; } } result put ( prBean, null ) ; } } } } } ( ). ( reading responsible users resource. ( ). ( ) ) ; } ( ) ( ) ; } } return result ; }<CODESPLIT>Returns the responsibles . <p ><CODESPLIT>1
public static Router post ( String uriTemplate,Handler handler ) { ( post ( handler }<CODESPLIT>Performs mapping for all routers .<CODESPLIT>0
public static void descendingOrder ( DMatrixRMaj U, boolean tranU, DMatrixRMaj W, DMatrixRMaj V, boolean tranV ) {Singular = ( W W ) ; checkSMatrixSize ( U, tranU, W, V, tranV ) ; for ( ) double bigValue = - 1 ; big = ; for ( ) = ( ) ; ( v bigValue ) bigValue = v ; bigIndex = j ; } } ( big ) ; ( big ) } = W ( ) ; set ( ) ; set (IndexIndex ) ; ( V ) swapRowOr ( V, tranV,, bigIndex ) ; } ( U ) swapRowOr ( U, tranU,, bigIndex ) ; } } }<CODESPLIT>Computes the SVD and sorts singular values in descending order . While easier to use this can reduce performance when performed on small matrices numerous times .<CODESPLIT>0
public ApiSuccessResponse stopMonitoring ( StopMonitoringData stopMonitoringData ) ApiException { ApiResponse stopMonitoringWithHttpInfo stopMonitoring ( }<CODESPLIT>Start recording a call Start recording the specified call . Recording stops when the call is completed or you send [ / voice / calls / { id } / stop - recording ] ( / reference / workspace / Voice / index . html#stopRecording ) on either the call or the DN .<CODESPLIT>0
public String getAttributeString ( String attName ) { attributes ( ; ( ) return null ; } return ( ) ; } }<CODESPLIT>Get the value for a given attribute .<CODESPLIT>1
public static List findByGroupId ( long groupId, int start, int end ) { return ( findBy ( }<CODESPLIT>Returns a range of all the cp option values where groupId = &#63 ; .<CODESPLIT>1
private static void handleSingletonClass ( String key, String value ) throws Exception { object handle ( ) ; ( ( "," ) ) interfaces ( ) ; ( ) serviceMap (Interface object ) ; } } serviceMap ( object ) ; } }<CODESPLIT>Send email with a string content and attachment<CODESPLIT>0
public static String [ ] split ( final String string, final char separator, final boolean ignoreQuotes ) { ( string ( ( ) ; return strtok getTokenArray ( ) ; }<CODESPLIT>Normalize and collapse whitespaces from string buffer .<CODESPLIT>0
public ComparisonExpression getLtFilterFromPrefixLike ( ) { ExpressionType rangeComparator ExpressionTypeSTHAN ; comLike ; return rangeFilterFromPrefixLike ( rangeComparator com ) }<CODESPLIT>/ Construct the upper bound comparison filter implied by a prefix LIKE comparison .<CODESPLIT>1
public void showForgotPasswordView ( String authToken ) { CmsTokenValidator validator = new CmsTokenValidator ( ) ; validationResult = validator validateToken ( AUI getCmsObject ( ) authToken OpenCms getLoginManager ( ) getTokenLifetime ( ) ) ; ( validationResult ) user = validator getUser ( ) ; ( userManaged ( ) ) CmsSetPasswordDialog = new CmsSetPasswordDialog ( madmin user getLocale ( ) ) ; AUI ( ) setContentDialog ( ( ) ( AUI ( ) ( ) ) key (PWCHANGEHEADER ) user ( ) dlg ) ; } Notification show ( CmsVaadinText (USERNOTMAN, user getName ( ) ), ERRORMESSAGE ) ; } } AUI ( ) setError ( ( ) ( AUI ( ) ( ) ) key (PWCHANGEINVALIDTOKEN ) ) ;. info (Invalid authorization token authToken validationResult ) ; } } ( ). (. ( ) ) ; } }<CODESPLIT>Initializes the login view . <p ><CODESPLIT>0
@ WithBridgeMethods ( value SQLServerQuery class, castRequired ) public C tableHints ( SQLServerTableHints... tableHints ) { ( ) hintsGrammar (Hints ; addJoin ( ; } return ( ) this ; }<CODESPLIT>Set the table hints<CODESPLIT>1
private void populate ( Field field, Object target, String stringValue ) { field setAccessible ( ) ; fieldType field ( ) ; value convert ( ) to ( fieldType ) ; field ( target value ) ; } ( ) ( populate field field ) ; } }<CODESPLIT>Populates the specified field on the target with the value from the given option .<CODESPLIT>1
public Object getParameter ( String name ) { qname =FromString ( name ) ; (userParams ) return ; = muserParams ( ) ; for ( ) Arg arg ( Arg ) muserParams ( ) ; ( arg ( ) ( qname ) ) return arg. getVal ( ). object ( ) ; } } return null ; } ( java ) return null ; } }<CODESPLIT>Reset parameters that the user specified for the transformation . Called during transformer . reset () after we have cleared the variable stack . We need to make sure that user params are reset so that the transformer object can be reused .<CODESPLIT>0
private MultipartContent createContent ( final ProblemInput input, final File output, final File source ) throws IOException {MediaType type newMediaType ( MEDIA ) ; type setParameter ( BOUND createBoundary ( ) ) ; sourceFilePath new ( PATH ) ( source ( ) ) toString ( ) ; MultipartContent content new MultipartContent ( ) setMediaType ( type ) add (Executor buildData ( CSRFPARAMETER values getToken ( ) ) ) add (Executor buildFile ( APARAMETER output ) ) add (Executor buildFile ( SOURCEFILEPARAMETER source ) ) add (Executor buildData ( SOURCEFILEPARAMETER sourceFilePath ) ) add (Executor buildData ( COMMANDPARAMETER SUBCOMMAND ) ) add (Executor buildData ( PROPARAMETER input getPro ( ) ( ) ) ) add (Executor buildData ( INPUTIDPARAMETER ( input getNumber ( ) ) ) ) add (Executor buildData (SOURCEFILEPARAMETER DEFAULTNUMSOURCEFILE ) ) add (Executor buildData ( APARAMETER DEFAULTAGENT ) ) ; return content ; }<CODESPLIT><p > Created and returns a valid { @link MultipartContent } instance that contains data required for submission . < / p ><CODESPLIT>1
@ SuppressWarnings (unchecked ) public boolean push ( E e ) { ( ) buckets ( ( ) ) ;InBucket = ; } buckets. getLast ( )InBucket = e ; size ; return true ; }<CODESPLIT>This method verifies that this GO has no PCI representation or that the PCI representation is not dirty or new . Otherwise it will throw an exception in order to prevent the dirty state of the GO and the PC to result in conflicting updates in the database .<CODESPLIT>0
static ResultDescriptor resultDescriptor ( ResultDescriptorDTO rDescriptorDTO ) { = new (DTO ( ) ) ; (DTODTO getDatasources ( ) ) (Heartbeat ( ) ) datasource ( ds ( ) ds getSource ( ) dsHeartbeat ( ) ds getFunction ( ) ) ; } datasource ( ds getLabel ( ), ds getSource ( ), ds getFunction ( ) ) ; } } (DTO ExpressionDTOExpressions ( ) ) expression ( expr getLabel ( ), expr getExpression ( ) ) ; } export (Exports ( ) ) ; return rDescriptor ; }<CODESPLIT>Visits all nodes in the resource tree bellow the given resource using depth - first search .<CODESPLIT>0
public boolean handleRemoteCriteria ( StringBuffer strFilter, boolean bIncludeFileName, Vector BaseField > vParamList ) {ListenerListener this getNextEnabledListener ( ) ; ( ) return ( (Listener )Listener )RemoteCriteria (Filter ) return thisRemoteCriteria (Filter ) }<CODESPLIT>Check to see if this record should be skipped . Generally you use a remote criteria .<CODESPLIT>0
@ POST ( MediaType_JSON ) Produces ( MediaType_JSON ) public Response registerWindowsVariant ( WindowsVariant windowsVariant, (pushAppID ) String pushApplicationID, Context UriInfo uriInfo ) { Push push getSearch ( ) findByPushFor ( push ) ; ( push ) return status ( NOT ) entity ( not find PushApplicationEntity ) build ( ) ; } validateClass ( windowsVariant ) ; } ( ) create )BadRequest ( ( ; return builder build ( ) ; }Register Application pushApplicationID ) ; addVariant ( windowsVariant ) ; push addVariant ( push windowsVariant ) ; return created ( uriInfo getAbsolutePathBuilder ( ) path ( String valueOf ( windowsVariant getVariantID ( ) ) ) build ( ) ) entity ( windowsVariant ) build ( ) ; }<CODESPLIT>Get a global integer property . This method will first try to get the value from an environment variable and if that does not exist it will look up a system property .<CODESPLIT>0
public static Iterable Reference getReferences ( String referenceSetId, OfflineAuth auth ) throws IOException { gen ( build ( ( return Paginatorferences create ( gen ) search ( SearchReferencesRequest ( ) setReferenceSetId ( referenceSetId ) ) ; }<CODESPLIT>Gets VariantSetIds from a given datasetId using the Genomics API .<CODESPLIT>0
public void put ( String localFile, String remoteTargetDirectory ) IOException { { } remoteTargetDirectory ; }<CODESPLIT>Copy a local file to a remote directory uses mode 0600 when creating the file on the remote side .<CODESPLIT>1
public synchronized void throttle ( final int bulkMutationRpcTargetMs ) { (Thrott ) return ; } (Initializing BulkMutation throttlingOnce parallelism reduced bulkMutationRpc ) ; ( ) ( bulk ) ; low ( ) ( bulk ) ; setCurrentInFlightMaxR ( getCurrentInFlightMaxR ( ) ) ; Runnable r new Runnable ( ) { @ Override public void run ( ) { meanLatency getMe ( statsTimer ( ) ) ; ( meanLatency bulkMutationTarget ) reduceParallelism ( meanLatency, absoluteMaxInFlightR ) ; } ( meanLatencyTarget ) reduceParallelism ( meanLatency, absoluteMaxInFlightR ) ; } ( getMe (ThrottTimer ( ) ) ) ( meanLatencyTarget ) increaseParallelism ( meanLatency, absoluteMaxInFlightR 20 ) ; } (InFlightMax absoluteMaxInFlight meanLatency ( bulkMutationTarget ) ) increaseParallelism ( meanLatency, absoluteMaxInFlightR 50 ) ; } } } private long getMeanMs ( Timer timer ) { return. NANOSECONDS. toMillis ( ( long ) timer. getSnapshot ( ). getMean ( ) ) ; } private void reduceParallelism ( long meanLatencyNanos, int step ) { minimum (MaxIn ) ; newValue ( currentInMax step minimum ) ; setParallelism ( meanLatencyNanos,Redu, newValue ) ; } private void increaseParallelism ( long meanLatencyNanos, int incrementStep ) { newValue ( currentInMax incrementMaxIn ) ; setParallelism ( meanLatencyNanos,Incre, newValue ) ; } private void setParallelism ( long meanLatencyNanos, String type, int newValue ) { currentValue getCurrentInMax ( ) ; ( newValue currentValue ) setCurrentInFlightMaxR ( newValue ) ; (Latency fromSECONDS ( meanLatencyNanos ) newValue ) ; } } } ; BigtableSessionSharedThreadPools ( ) getRetryExecutor ( ) scheduleFixedRate (, 20, 20, SECONDS ) ; ; }<CODESPLIT>Enable an experimental feature that will throttle requests made from {<CODESPLIT>1
public static UncheckedBinary fromBase64 ( String base64 ) { StringBuilder normalizedBase64 = new StringBuilder ( base64 length ( ) ) ; for ( base64 ( ) ) c = base64 ( ) ; ( ) ; ( ) ; ( ) ; normalizedBase64 ( c ) ; } while (Base ( ) % ) normalizedBase64 ( ) ; } bytes = DatatypeConverter parseBase64Binary ( normalizedBase64 toString ( ) ) ; return Binary. from ( bytes ) ; }<CODESPLIT>Reads standard and URL / filename - safe Base 64 dialects as described in RFC 4686 . Additionally it accepts not Base 64 encoded strings without padding or allows to use dot character ( . ) as padding character .<CODESPLIT>1
boolean isMatch ( Class beanType, Object id ) { return beanType ( beanType ) ( ) }<CODESPLIT>Checks that the supplied parameter is not null . Throws a {<CODESPLIT>0
private String formatPriority ( Priority value ) { ; ( ) priorityTypes getStringArray (localeTYPES ) ; priority value ( ) ; ( priority Priority ) priority = Priority. LO ; } ( priority Priority ) priority = Priority. DO_NOT_LEVEL ; } } priority /= 100 ; result = priorityTypes priority - 1 ; } return ( result ) ; }<CODESPLIT>This method is called to format a task type .<CODESPLIT>0
public static int cuMempyPeer ( CUdeviceptr dstDevice, CU dst, CUdeviceptr srcDevice, CU src, long ByteCount ) { return cuNative ( }<CODESPLIT>Copies device memory between two contexts .<CODESPLIT>1
private GraphCentricQueryBuilder has ( String key, TanPredicate predicate, Object condition ) { checkNotNull ( ; checkNotNull ( predicate ; ( predicate isValidCondition ( condition condition condition ; constraints ( Predicate ( predicate condition ; return this ; }<CODESPLIT>/ * --------------------------------------------------------------- Query Execution ---------------------------------------------------------------<CODESPLIT>0
private void changeReplicas ( PrimaryTerm term ) { threadContext execute ( ( ) { ( ( ) ( ) ) this term = term ; consumer register ( primary ( ( ) ; } } ) ; }<CODESPLIT>Handles a replica change event .<CODESPLIT>1
public void translate ( Vector3D <, > translation ) {03 translation ( ) ; translation ( ) ; this translation getZ ( ) ; }<CODESPLIT>Translate the position .<CODESPLIT>1
public static float getFloat ( float value, float minValue, float maxValue ) { return min ( ( minValue }<CODESPLIT>Return a float value within the range . <p > This is just a wrapper for Math . min () and Math . max () . This may be useful if you feel it confusing ( Which is min and which is max? ) . < / p ><CODESPLIT>1
@ Destroy ( priority AutActionPriority MIN_PRIORITY ) public void savePreferences ( ) {Set Preferences preferencesFlushSetsSet ( ) ; ( preferences ) Preferences preferences names ( preference key ) ; preferencesToFlush add ( preferencesFile ) ; preference value save ( preference key preferencesFile ) ; } ( preferences preferencesFlush ) preferencesFile flush ( ) ; } }<CODESPLIT>Saves all current preferences . This is a reasonably heavy operation as it flushes all preferences files - by default this is done once before the application is closed .<CODESPLIT>1
public void unsubscribe ( final Subscription < T > subscription ) { token subscription getToken ( ) ; ( FINERRemoteManager} token {1}" new { this. name token } ) ; ( ) this transport registerErrorHandler ( null ) ; } ( Tuple ) this tupleToHandlerMap remove ( token ) ; } ( Class ) thisTypeToHandlerMap remove ( token ) ; } ( subscription subscription ( ) ( ) ) ; } }<CODESPLIT>Unsubscribes a handler .<CODESPLIT>1
public static SymbolList toDSymbolList ( Sequence sequence )Symbol { checkNotNull ( return createDN ( sequence ( ) (, "" ) ) ; }<CODESPLIT>Convert the specified HML Sequence element into a DNA symbol list .<CODESPLIT>1
private boolean processArguments ( String [ ] args ) { ( args ) System. err. println ( messages. (argument ) ) ; return false ; } setCustomMessageFileFromEnvironment ( ) ; Pattern argPattern = Pattern. compile (? ) ; for ( args. ) argMatch = argPattern. ( args ) ; ( argMatch matches ( ) ) ( argMatch group ( ) ) { "v ( args length ) ; ( args ( ) args ( ) ) version = EPUBVersion. VERSION_2 ; } ( args ( ) args ( ) ) version = EPUBVersion. VERSION_3 ; } outWriter. println ( messages. (help ) ) ; ( InvalidVersionException ( InvalidVersionException. UNS ) ) ; } } outWriter. println ( messages. (help ) ) ; ( messages. get (versionargument ) ) ; } " " ( args length ) mode = args ; expanded = mode. equals (exp ) ; } outWriter. println ( messages. (help ) ) ; ( messages. get (argument ) ) ; } "p "profile ( args length ) profileStr = args ++ ; { profile = EPUBProfile. valueOf ( profileStr. toUpperCase (. ROOT ) ) ; } ( ) System. err. println ( messages. (modeversionignored profile ) ) ; profile = EPUBProfile. DEFAULT ; } } outWriter. println ( messages. (help ) ) ; ( messages. get (profileargument ) ) ; } " "save true ; " " ( ( args length ( ) )! ( args ( ) ) ) fileOut = new File ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ++ ; } File pathFile = new File ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new File ( pathFile getAbsoluteFile ( ) getParentFile ( ), pathFile ( )checkxml ) ; } fileOut = new File ( pathcheckxml ) ; } } xmlOutput = true ; " "json ( ( args length ( ) )! ( args ( ) ) ) fileOut = new File ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ++ ; } File pathFile = new File ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new File ( pathFile getAbsoluteFile ( ) getParentFile ( ), pathFile ( )checkjson ) ; } fileOut = new File ( pathcheckjson ) ; } } jsonOutput = true ; " "mp ( ( args length ( ) )! ( args ( ) ) ) fileOut = new File ( args ++ ) ; } ( ( args ( ) ) ( args ( "-" ) ) ) fileOut = null ; ++ ; } File pathFile = new File ( path ) ; ( pathFile isDirectory ( ) ) fileOut = new File ( pathFile getAbsoluteFile ( ) getParentFile ( ), pathFile. ( )checkmp ) ; } fileOut = new File ( pathcheckmp ) ; } }mpOutput = true ; " "info reportingLevel ReportLevel Info ; " "fatal reportingLevel ReportLevel Fatal ; " "error reportingLevel ReportLevel Error ; " "warn reportingLevel ReportLevel Warning ; " "usage reportingLevel ReportLevel Usage ; " "quiet outWriter setQuiet ( true ) ; "failwarnings fw args (failwarnings length ( ) ) ; failOnWarnings = (. compareTo ( "-" ) ) ; " " ( args length ) fileOut = new File ( args ++ ) ; } " "Messages ( args length ) fileName = args ; (none compareTo ( fileName toLowerCase ( Locale ROOT ) ) ) customMessageFile = null ; useCustomMessageFile = false ; ; } ( fileName ( "-" ) ) customMessageFile = new File ( fileName ) ; useCustomMessageFile = true ; ; } System. err. println (. ( messages. (messagefilename ) fileName ) ) ; displayHelp ( ) ; return false ; } } " "list ( args length ) ( args ( "-" ) ) listChecksOut = new File ( args ++ ) ; } listChecksOut = null ; } } listChecks = true ; " ( args length ) ( args ( "-" ) ) System. err. println (. ( messages. (in ) args ) ) ; displayHelp ( ) ; return false ; } langTag = args ++ ; this. locale =. forLanguageTag ( langTag ) ; this. messages =. getInstance ( this. locale ) ; } } System. err. println (. ( messages. ( ) ) ) ; displayHelp ( ) ; return false ; } " "?" "help displayHelp ( ) ; "version display ( ) ; default System. err. println (. ( messages. (unargument ) args ) ) ; displayHelp ( ) ; return false ; } } ( path null ) path = args ; } System. err. println (. ( messages. (unargument ) args ) ) ; displayHelp ( ) ; return false ; } } } ( ( xmlOutput xmpOutput ) ( xmlOutput jsonOutput ) ( xmpOutput jsonOutput ) ) System. err. println ( messages. (outputtype ) ) ; return false ; } ( path null ) StringBuilder sb = new StringBuilder ( ) ; for ( path. ( ) ) ( path ( ) ) sb. ( ) ; } sb. ( path. ( ) ) ; } } path = sb. toString ( ) ; } ( path null ) ( listChecks ) return true ; } System. err. println ( messages. (filespecified ) ) ; return false ; } } ( path matches (EUuB]" ) ) ( mode null versionPUBVersion ) System. err. println ( messages. (modeversionignored ) ) ; mode = null ; } } ( mode null profile null ) outWriter. println ( messages. (moderequired ) ) ; return false ; } return true ; }<CODESPLIT>recursively get the values stored for the given {<CODESPLIT>0
public FieldList move ( int iRelPosition ) throws DBException { m_iLogicalFilePosition = UNKNOWN_POSITION ; FieldList record this getNextTable ( ) move (RelPosition ) ;Current =PhysicalFile ; (RelPosition DBConstants FIRST )Position ; (RelPosition DBConstants LAST ) (EndOfFile UNKNOWN )CurrentPosition = UNKNOWN_POSITION ; }PositionEndOfFile ; }PositionRelPosition ; m_iPhysicalFilePosition =CurrentPosition ; ( ( record ) ( (RelPosition DBConstants FIRST ) (RelPosition DBConstants NEXT ) ) )EndOfFilePosition ; (Position ) this addReference (Position ) ; m_iLogicalFilePosition =CurrentPosition ; } return record ; }<CODESPLIT>Find this bookmark in one of the lists .<CODESPLIT>0
public void registerIndexQuery ( long index, Runnable query ) { queries thisQueries compute ( ( ; queries add ( query ) ; }<CODESPLIT>Registers a causal session query .<CODESPLIT>0
public static T populateCommand ( T command, String... args ) {CommandLine (Factory ( ; parse ( return command ; }<CODESPLIT><p > Convenience method that initializes the specified annotated object from the specified command line arguments . < / p > <p > This is equivalent to < / p > <pre > CommandLine cli = new CommandLine ( command ) ; cli . parse ( args ) ; return command ; < / pre ><CODESPLIT>1
public LogEvent [ ] getLogEvents ( ) { (Events ) return new LogEvent 0 ; } Log events Log ( ) ; return ( LogEvent )LogEvents toArray ( events ) ; } }<CODESPLIT>Finds a template based on the given URI . If path ends in a slash revert to loading default template . If default not found or not specified return null .<CODESPLIT>0
@ Requires ( {bytecodecontract ) @ Ensures (result null ) protected byte [ ] instrumentWithContracts ( byte [ ] bytecode, ContractAnalyzer contracts ) { reader new ( bytecode ) ; writer newLoading ( reader | ) ; SpecificationAdapter adapter new SpecificationAdapter ( writer contracts ) ; reader accept ( adapterReader EXPAND ) ; return writer. toByteArray ( ) ; }<CODESPLIT>Processes the specified reader and returns extracted contracts .<CODESPLIT>0
@ Override final public void dissociateConnections ( ) throws ResourceException { ( TraceComponent isAnyTracingEnabled ( ) TRACE ( ) ) SibTr ( TRACEissociConnections ) ; } ( _sessions ( ) ( ) ) object iterator ( ) ; ( object ) ( (SessionImpl ) object ) disoci ( ) ; remove ( ) ; } } ( TraceComponent isAnyTracingEnabled ( ) TRACE ( ) ) SibTr exit ( this TRACEissociConnections ) ; } }<CODESPLIT>Returns the current global or container local transaction if any for this managed connection . If there is currently no transaction associated with this managed connection calls <code > lazyEnlist< / code > to ensure that one has not been started .<CODESPLIT>0
public com google api ads v201809 cm StringStringMapEntry [ ] getDisplayValue ( ) { return }<CODESPLIT>Gets the parentDimensionValue value for this ProductBiddingCategoryData .<CODESPLIT>0
@ SuppressWarnings (WeAccess ) public ApiFuture Void > deleteInstanceAsync ( String instanceId ) { instanceName ( projectId instanceId ) ; Delete request Delete newBuilder ) setName instanceName ) build ( ) ; return ApiFutures transform ( stub deleteInstanceCallable ( ) futureCall ( request ), new ApiFunction Empty, Void ( ) Override public Void apply ( Empty input ) { return null ; } } directExecutor ( ) ) ; }<CODESPLIT>Asynchronously lists all of the instances in the current project .<CODESPLIT>0
boolean contains ( String normalizedPath ) { ( ) return ( ( ) ( ) ) return return normalizedPath regionMatches (, normalizedRoot,, normalizedRoot ( ) ) ; }<CODESPLIT>Check if the provided path is contained within this root s hierarchy .<CODESPLIT>1
private static boolean checkValidity (Socket client, byte from, State expected ) { from ( }<CODESPLIT>Check if the client is in a valid state .<CODESPLIT>1
@ Override public Request EnableVpcClassicLinkRequest > getDryRunRequest ( ) { RequestRequest requestRequest ( ( this ) ; request addParameter (DryRun ( true ) ) ; return request ; }<CODESPLIT><p > One or more filters to limit the type of sessions returned by the request . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setFilters ( java . util . Collection ) } or { @link #withFilters ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
private String generateMethodKey ( CtMethod method ) throws NotFoundException {QualifiedName method ( ( ; methodSimple method ( ; ( method ) ; return TestMethod generateMethodKey (QualifiedName, methodSimple, argClassQualifiedNames ) ; }<CODESPLIT>( for example when class of method argument type has not been loaded by class loader )<CODESPLIT>0
public static void info ( String format, Object... arguments ) { Log indirectGet }<CODESPLIT>Info等级日志，小于Warn<br > 由于动态获取Log，效率较低，建议在非频繁调用的情况下使用！！<CODESPLIT>1
private static CommandLineArgument findCommandLineOption ( String arg ) { ( commandLine ( ( commandLine ( return commandLineArgument ; } } return null ; }<CODESPLIT>Not needed until workers support dynamic removal ( currently reload required )<CODESPLIT>0
@ Override public void addInheritedSummaryLabel ( TypeElement typeElement, Content inheritedTree ) { ContentLink writer getPreQualifiedClassLink ( MEM typeElement false ) ; Content ( ( typeElement ) configuration (docletInheritedFrom ) configuration (docletInheritedFrom ) ) ; Content labelHeading HtmlTree HEAD ( HtmlConstants INHERITHEAD label ) ; labelHeading addContent ( Contents SPACE ) ; labelHeading addContent (Link ) ;Tree addContent ( labelHeading ) ; }<CODESPLIT>{<CODESPLIT>0
public static String makeDeepLink ( String link ) { (RemoteConnectionLink ( )Remote ( ) ) ( ( "?" ) "&" "?" ) PARAMREMOTECONNECTIONRemoteConnectionLink ( ) ; } return link ; }<CODESPLIT>Adds remote connection parameter to link GET query if parameter yet not present in this link .<CODESPLIT>1
public static Object convert ( String propertyName, String s, Class t, Class propertyEditorClass ) throws JspCoreException { ( s ) ( ( Boolean ) ( Boolean ) ) sfalse ; return ; } ( propertyEditorClass ) return getValueFromBeanInfoPropertyEditor ( t, propertyName, s, propertyEditorClass ) ; } ( ( Boolean ) ( Boolean ) ) ( s ( ) s (true ) ) strue ; sfalse ; return new Boolean ( s ) ; } ( ( Byte ) ( Byte ) ) return new Byte ( s ) ; } ( ( Character ) ( Character ) ) return s. length ( ) 0 new Character ( s. charAt ( 0 ) ) : null ; } ( ( Short ) ( Short ) ) return new Short ( s ) ; } ( ( Integer ) ( Integer ) ) return new Integer ( s ) ; } ( ( Float ) ( Float ) ) return new Float ( s ) ; } ( ( Long ) ( Long ) ) return new Long ( s ) ; } ( t ( Double ) t ( Double ) ) return new Double ( s ) ; } ( t ( String ) ) return s ; } ( t ( java File ) ) return new java. io. File ( s ) ; } ( t ( ) (Object ) ) return new Object [ ] { s } ; } return getValueFromPropertyEditorManager ( t, propertyName, s ) ; } } ( ) Jsp ( ) ; } }<CODESPLIT>{<CODESPLIT>0
public boolean isGeneralInstance ( ) { ; ( this general ) = this. generalInstance ; } ( getParent ( ) ) getParent ( )General ( ) ; } return ; }<CODESPLIT>Getter method for the instance variable { @link #generalInstance } .<CODESPLIT>1
public List < CmsPropertyConfig > getPropertyConfiguration ( ) {ConfigData parentData parent ( ) ; parentProperties ; ( ( parent )DiscardInheritedProperties ( ) ) parentProperties parentDataConfiguration ( ) ; } parentProperties emptyList ( ) ; } combineElements ( parentPropertiesdataOwnPropertyConfigurations ( ) ) ; return result ; }<CODESPLIT>Gets the configuration for the available properties . <p ><CODESPLIT>1
public static void removeConsecutiveSeparators ( JPopupMenu popupMenu ) { ( popupMenu getComponent ( ) ) (PopupSeparator ( popup ( ) ) ) (PopupSeparator ( popup ( ) ) ) popupMenu remove ( ) ; ; } } } }<CODESPLIT>Removes all top separators from the given pop up menu . <p > For example calling the method on the given menu : <pre > Separator Separator Menu Entry Separator Menu Entry Separator Menu Entry < / pre > would result in : <pre > Menu Entry Separator Menu Entry Separator Menu Entry < / pre ><CODESPLIT>0
protected void writeListNumbers ( final OutputStream result ) throws IOException { ( ) write ( Rtf LIST ; write (ByteArray ( list ) ) ; } }<CODESPLIT>Write the indentation values for this <code > RtfList< / code > .<CODESPLIT>0
private String buildInternalForm ( ) { StringBuffer result = new StringBuffer ( 128 ) ; CmsResource resource = null ; internal = false ; resource = getCms ( ) readResource ( getParamResource ( ), CmsResourceFilter ALL ) ; internal = resource isInternal ( ) ; } ( ). (. ( ) ) ; } ( ( resource null ) ( resource isFile ( ) ) ) result (form action ) ( getDialogUri ( ) ) ( methodpost nameinternal ) ; result (table border0 width ) ; result ( ) ; result (<dialogpermissioncell ) ( key (PERMISSIONINTERNAL0 ) ) ; result (input typecheckbox name ) ; result ( PARAMINTERNAL ) ; result ( valuetrue ) ; ( internal ) result ( checkedchecked ) ; } (Editable ( ) ) result ( disableddisabled ) ; } result ( ) ; (Editable ( ) ) result (input typesubmitdialogbutton value ) ( key (LABELSET0 ) ) ( ) ; } result ( ) ; result ( ) ; result. (table ) ; setParamAction (ALOGINTERNALUSE ) ; setParamType ( null ) ; setParamName ( null ) ; result. ( paramsAsHidden ( ) ) ; result. (form ) ; } return result. toString ( ) ; }<CODESPLIT>Builds a String with HTML code to display the form to add a new access control entry for the current resource . <p ><CODESPLIT>1
public withIntegrationResponses ( java util Map String,ResponseResponses ) { setResponsesResponses return }<CODESPLIT><p > Specifies the integration s responses . < / p > <div class = remarks > <p / > <h4 > Example : Get integration responses of a method< / h4 > <h5 > Request< / h5 > <p / ><CODESPLIT>1
public static String getStateStyle ( CmsResourceState state ) { ; ( ( ( ) stateStyle = OpenCmsThemeDELETED ; } ( ( ) ) stateStyle = OpenCmsThemeNEW ; } (Changed ( ) ) stateStyle = OpenCmsThemeCHANGED ; } } return stateStyle ; }<CODESPLIT>Gets the CSS style name for the given resource state . <p ><CODESPLIT>1
public CloseableResource BlockMasterClient acquireBlockMasterClientResource ( ) { returnResourceMaster (Master acquire ( ) ) Override public void close ( ) { release ( ( } } ; }<CODESPLIT>Releases a block worker client to the client pools .<CODESPLIT>0
public void setRecommendations ( java util Collection ReservationPurchaseRecomm > recommendations ) { ( ) this recommend ; return ; } this recommend java ReservationPurchaseRecomm ( recommend ) ; }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public static Point findImage ( BufferedImage image, BufferedImage findme, double tolerance ) { ( ; findme findme ( ; ( ( ; findme findme ( ; ( return findImage ( getRGB ( image ), imageWidth, imageHeight, getRGB ( findme ), findmeWidth, findmeHeight, tolerance ) ; } } return null ; }<CODESPLIT>Gets the RGB pixels for the given image into a new array .<CODESPLIT>0
@ SuppressWarnings (unchecked" ) protected void fireEntryRemoved ( K key, V value ) { ( this listeners ) for (Map this listenersListeners (Map ) ) listenerRemoved ( key, value ) ; } } }<CODESPLIT>Fire the removal event .<CODESPLIT>1
public void setWelcomeFiles ( String [ ] welcomeFiles ) { ( welcome welcomeFiles ( welcomeFiles welcomeFiles } }<CODESPLIT>CHECKSTYLE : OFF<CODESPLIT>0
public static void setDebugConfigs ( OneProperties debugConfigsObj, String debugConfigAbsoluteClassPath ) { (Configs ) ConfigsConfigs =ConfigsObj ; } (ClassPath ) ConfigsConfigAbsoluteClassPath =ConfigAbsoluteClassPath ;Configs initConfigs (AbsoluteClassPath ) ; } (Configs )Configs initConfigs (AbsoluteClassPath ) ; } }<CODESPLIT><p > Set self define debug configs . < / p > Can use self debug configs path or self class extends { @link OneProperties } .<CODESPLIT>1
public final Optional Style getStyle ( final String styleName ) { style this ( styleName ; ( return this styleParser loadStyle ( this, thisHttpRequestFactory, style ) ; } return Optional empty ( ) ; } }<CODESPLIT>Retrieve the configuration of the named template .<CODESPLIT>0
@ Override public ListUsageLicense listUsageLicenseConfiguration ( ListUsageLicenseConfigurationRequest request ) beforeClientExecution executeListUsageFor ( request }<CODESPLIT><p > Modifies the attributes of an existing license configuration object . A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager . Components include specifications for the license type ( Instances cores sockets VCPUs ) tenancy ( shared or Dedicated Host ) host affinity ( how long a VM is associated with a host ) the number of licenses purchased and used . < / p ><CODESPLIT>0
public EventConsumerGroup createEventConsumerGroup ( String, String resourceName, String eventEndpointName, String name ) { return createEventWithServiceResponseAsync ( toBlocking ( ) ( ) body ( ) }<CODESPLIT>Add a consumer group to an Event Hub - compatible endpoint in an IoT hub . Add a consumer group to an Event Hub - compatible endpoint in an IoT hub .<CODESPLIT>1
public ConstantInfo addConstant ( ConstantInfo constant ) { Constant = ( Constant ) ( constant ) ; ( info ) return info ; } = constant getEntry ( ) ; (IndexedPreserveOrder ) =Indexed ( ) ;Indexed setSize (Count ) ;Indexed ( ) ; } put ( constant, constant ) ;Entries +=Count ; return constant ; }<CODESPLIT>Perform an HTTP GET at the given path returning the results of the response .<CODESPLIT>0
@ Override public void visit ( Column column ) { column ( ) ; ( (true ) stringValue (false ) ) setValue ( Boolean ( ) BOOLEAN ) ; } }<CODESPLIT>Booleans are not recognized by the parser but are seen as column names .<CODESPLIT>1
private HodSearchResult addDomain ( final Iterable < > indexIdentifiers, final HodSearchResult document ) { document ( ) ; ; (Identifiers ) ( (Identifier ( ) ) ) domain indexIdentifier ( ) ; } } ( ) domainNAMES contains ( index ) : getDomain ( ) ; } return document. toBuilder ( ). domain ( domain ). build ( ) ; }<CODESPLIT>Add a domain to a FindDocument given the collection of indexes which were queried against to return it from HOD<CODESPLIT>1
private URI initiateResumableUpload ( URI batchJobUploadUrl ) throws BatchJobException { HttpRequestFactory requestFactory = httpTransport.Factory ( req { headers createHttpHeaders ( ) ; headers setContent ( ) ; headers (resstart ) ; setHeaders ( headers ) ;Logging ( ) ; } ) ; httpRequest requestFactory buildPostRequest ( newUrl ( batchUploadUrl ) new Empty ( ) ) ; httpRequest execute ( ) ; ( getHeaders ( ) getHeaders ( ) ( ) ) (Initiate upload Res upload URI ) ; } return URI. create (. getHeaders ( ). getLocation ( ) ) ; } ( ) ( initiate upload ) ; } }<CODESPLIT>Post - processes the request content to conform to the requirements of Google Cloud Storage .<CODESPLIT>0
protected String getSelectedValue ( CmsObject cms, List CmsSelectWidgetOption > selectOptions, String currentValue ) { currentValue ; ( ( ) )SelectSelect getDefault ( selectOptions ; ( ) ( ) ; } } return paramValue ; }<CODESPLIT>Returns the currently selected value of the select widget . <p ><CODESPLIT>1
public void marshall ( ListBootstrapActionsRequest listBootstrapActionsRequest, ProtocolMarshaller protocolMarshaller ) { ( listBootstrapActions ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( listBootstrapActionsRequest getCluster ( ),BINDING ) ; protocolMarshaller marshall ( listBootstrapActionsRequest getMark ( ),BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public static LicenseApi licenseApiFactory ( String pathToLicense ) { ( ( return LicenseApi ( ) Override public boolean initializeFromFile ( File license ) { return true ; } Override public boolean isAnyKindOfTrial ( ) { return false ; } Override public boolean isProTrial ( ) { return false ; } Override public boolean isEnterpriseTrial ( ) { return false ; } Override public int maxHostcount ( ) { return Integer ; } Override public Calendar expires ( ) { ( ; add ( 20 ; return ; } Override public boolean verify ( ) { return true ; } Override public boolean isDrReplicationAllowed ( ) { return false ; } Override public boolean isDrActiveActiveAllowed ( ) { return false ; } Override public boolean isCommandLoggingAllowed ( ) { return false ; } Override public boolean isAWSMarketplace ( ) { return false ; } Override public boolean isEnterprise ( ) { return false ; } Override public boolean isPro ( ) { return false ; } Override public String licensee ( ) { returnVoltDB Comm User ; } Override public Calendar issued ( ) { ( ; return ; } Override public String note ( ) { return "" ; } Override public boolean hardExpiration ( ) { return false ; } Override public boolean secondaryInitialization ( ) { return true ; } } ; } Pro loadsetLog )Log ) ) ( return null ; } ( ; ( ( return null ; }Log VoltDB ) ( initializeFromFile (Log load ) return null ; } ( verify (Log load verify ) return null ; } } ( License lex )Log ) ) return null ; } return licenseApi ; }<CODESPLIT>Simple code to copy a file from one place to another ... Java should have this built in ... stupid java ...<CODESPLIT>0
@ Override publicInstanceEventStartTime modifyInstanceEventStartTime (InstanceEventStartTime request ) { beforeClientExecution executeStartTime ( request }<CODESPLIT><p > Modifies the placement attributes for a specified instance . You can do the following : < / p > <ul > <li > <p > Modify the affinity between an instance and a <a href = https : // docs . aws . amazon . com / AWSEC2 / latest / UserGuide / dedicated - hosts - overview . html > Dedicated Host< / a > . When affinity is set to <code > host< / code > and the instance is not associated with a specific Dedicated Host the next time the instance is launched it is automatically associated with the host on which it lands . If the instance is restarted or rebooted this relationship persists . < / p > < / li > <li > <p > Change the Dedicated Host with which an instance is associated . < / p > < / li > <li > <p > Change the instance tenancy of an instance from <code > host< / code > to <code > dedicated< / code > or from <code > dedicated< / code > to <code > host< / code > . < / p > < / li > <li > <p > Move an instance to or from a <a href = https : // docs . aws . amazon . com / AWSEC2 / latest / UserGuide / placement - groups . html > placement group< / a > . < / p > < / li > < / ul > <p > At least one attribute for affinity host ID tenancy or placement group name must be specified in the request . Affinity and tenancy can be modified in the same request . < / p > <p > To modify the host ID tenancy placement group or partition for an instance the instance must be in the <code > stopped< / code > state . < / p ><CODESPLIT>0
@ Nonnull public static1,2bjIntObjPredicateBuilder1,2 objIntObjPredicate ( ConsumerbjIntObjPredicate1,2 consumer ) {IntPredicate ( consumer }<CODESPLIT>One of ways of creating builder . This might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .<CODESPLIT>1
public InterceptorsType < EjbJarDescriptor > getOrCreateInterceptors ( ) { node model getOrCreate (interceptors ) ; InterJar interceptors new InterJar ( thisintercept model node ) ; return interceptors ; }<CODESPLIT>If not already created a new <code > interceptors< / code > element with the given value will be created . Otherwise the existing <code > interceptors< / code > element will be returned .<CODESPLIT>1
protected static Action findAction ( EObject grammarComponent, String assignmentName ) { (Actions ( grammar ) ) ( ( action ) ) ( ( action ( ) ) ) return action ; } } } return null ; }<CODESPLIT>Replies the assignment component with the given nazme in the given grammar component .<CODESPLIT>1
public int getUnsignedMediumInt ( ) { getUnsigned ( ) ; getUnsigned ( ) ; getUnsigned ( ) ; (is ) return ( 16 ) ( b 8 ) b ; } return ( b 16 ) ( b 8 ) b ; } }<CODESPLIT>Returns an unsigned three - byte medium int from the buffer at the current position<CODESPLIT>1
public void rollback ( ) { (Rolling back modifyAttributes operation ) ldapOperations modifyAttributes ( dn compModifications ) ; } ( ) ( rollback ModifyAttributes operation dn dn ) ; } }<CODESPLIT>/ *<CODESPLIT>1
staticName formProperty ( String uri, String localName ) { form ( create ( localName }<CODESPLIT>TODO : marked deprecated by original implementor<CODESPLIT>0
@ Override public synchronized void beginTransaction ( ) throws DatabaseEngineRuntimeException { getConnection ( ) ; ( conn getAutoCommit ( ) ) ( transaction active ) ; return ; } connCommit ( false ) ; } ( )Engine ( starting transaction ) ; } }<CODESPLIT>Closes a { @link MappedEntity } logging a warning if an { @link Exception } is thrown . <p > It flushes before closing the { @link MappedEntity } .<CODESPLIT>0
@ SuppressWarnings (unchecked" ) public List < io.oo. models. Job > getAllJobs ( ) throws MangooSchedulerException { Objects requireNonNull ( this quScheduler, RequiredUL toString ( ) ) ; models Job jobs = new ( ) ; for ( job getAllKeys ( ) ) Trigger triggers = ( Trigger ) this quartzSchedulerTriggers ( job ) ; Trigger trigger = ( ) ; Trigger trigger = quSchedulerTrigger ( trigger ( ) ) ; active = ( TriggerState triggerState ) ; jobs add ( new models Job ( active job ( ) trigger getDescription ( ) trigger getNext ( ) trigger getPrevious ( ) ) ) ; } } ( )Scheduler ( ) ; } return jobs ; }<CODESPLIT>Pauses a job by a given name @param name The name of the job to pause<CODESPLIT>0
public void flush ( ) { ArrayList Batch batches this incomplete all ( ) ;OutRecords = ; for ( batch batches ) += batchRecords ( ) size ( ) ; } (Flush called batches with {} records, batches size ( ),OutRecords ) ; for ( batch batches ) batch await ( ) ; } } ( ) ( flushing batches ) ; } }<CODESPLIT>This will block until all the incomplete batches are acknowledged<CODESPLIT>1
static double computeAngularSimilarity ( DoubleTuple t0, DoubleTuple t1 ) { return ( computeSimilar ( ) ) / }<CODESPLIT>Get the keysize . If no key size specified this will return the default key size .<CODESPLIT>0
public static boolean xor ( boolean... array ) { ( ArrayUtil ( array ) ) IllegalArgumentException ( Array ) ; } ; ( array ) result element ; } return result ; }<CODESPLIT>对Boolean数组取或<CODESPLIT>0
@ ( ) public static ISharedContext IUser getUserContext ( ) { return (SharedUser ) getInstance ( ) getShared ( getName ( ) ) ; }<CODESPLIT>Returns the managed user context .<CODESPLIT>1
public void copySeleniumCookies ( Set Cookie > browserCookies, CookieStore cookieStore ) { ( ) convert ( browser ; add ( ) ; } }<CODESPLIT>Converts Selenium cookie to Apache http client .<CODESPLIT>0
private Block wrapInMacroMarker ( MacroBlock macroBlockToWrap, List BlockBlocks ) { returnMarker (To ( )To getParameters ( ),To getContent ( ),,To isIn ( ) ) }<CODESPLIT>TODO : support more than strings<CODESPLIT>0
public void abort ( final Executor exec ) throws SQLException { ( ) SQLException ( executor ) } ( ) return ; } this closed ; }<CODESPLIT>アノテーションを元にフォーマッタを作成する。<CODESPLIT>0
public JsonValue generalJsonValueProducer ( InjectionPoint ip ) { ( ) ; ( ) ; wrap ( ) ; return jsonValue ; }<CODESPLIT>Return the indicated claim value as a JsonValue<CODESPLIT>1
@ Override public int get ( TemporalField field ) { ( field Chrono ) ( ( ) field ) INTemporal (Seconds method getLong ) ; OFFSET return ( )Seconds ( ) ; } return dateTime. get ( field ) ; } return Temporal. super. get ( field ) ; }<CODESPLIT>Gets the value of the specified field from this date - time as an { @code int } . <p > This queries this date - time for the value of the specified field . The returned value will always be within the valid range of values for the field . If it is not possible to return the value because the field is not supported or for some other reason an exception is thrown . <p > If the field is a { @link ChronoField } then the query is implemented here . The { @link #isSupported ( TemporalField ) supported fields } will return valid values based on this date - time except { @code NANO_OF_DAY } { @code MICRO_OF_DAY } { @code EPOCH_DAY } { @code PROLEPTIC_MONTH } and { @code INSTANT_SECONDS } which are too large to fit in an { @code int } and throw a { @code DateTimeException } . All other { @code ChronoField } instances will throw an { @code UnsupportedTemporalTypeException } . <p > If the field is not a { @code ChronoField } then the result of this method is obtained by invoking { @code TemporalField . getFrom ( TemporalAccessor ) } passing { @code this } as the argument . Whether the value can be obtained and what the value represents is determined by the field .<CODESPLIT>1
@ Override public void relocate ( ) { w = 200 = ; = ( this ( ) w ) ; = ( this ( ) h ) ; enableSQLConnection setLocation ( x ) ; sqlHostLabel setLocation ( x ) ; sqlHostField setLocation ( x ) ; sqlLabel setLocation ( x ) ; sqlField setLocation ( x ) ; sqlUserLabel setLocation ( x 100 ) ; sqlUserField setLocation ( x 100 ) ; sqlPasswordLabel setLocation ( x30 ) ; sqlPasswordField setLocation ( x30 ) ; enableZipEncodingCheckBox setLocation ( x ) ; }<CODESPLIT>A call of this method should validate the positions of the panels components .<CODESPLIT>1
public void fixateDistorted ( ) { for ( ) for ( ) Cache cache getGrid ( row, ) ; computeAverageQ ( cache ) ; model computeDeformed ( cache,, row ) ; } } }<CODESPLIT>Precompute the portion of the equation which only concerns the undistorted location of each point on the grid even the current undistorted location of each control point .<CODESPLIT>0
publicPatchSchedule get ( String, String name ) { return getWithServiceResponseAsync ( toBlocking ( ( body ( ) }<CODESPLIT>Create or replace the patching schedule for Redis cache ( requires Premium SKU ) .<CODESPLIT>0
@ Override public void eUnset ( int featureID ) { ( featureID ) { AfplibPackageRG__LID setid (LIDEDEFAULT ) ; return ; AfplibPackageRG__ setSectid (EDEFAULT ) ; return ; AfplibPackageRG__NAME setName (NAMEEDEFAULT ) ; return ; AfplibPackageCFRG__CPNAME setCPName (NAMEEDEFAULT ) ; return ; AfplibPackageCFRG__FCNAME setFCName (CSNAMEEDEFAULT ) ; return ; AfplibPackageCFRG__CHAR setRot ( CHAREDEFAULT ) ; return ; } super. eUnset ( featureID ) ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>0
@ Override public void convertOperationParameter ( PathAddress address, attributeName, ModelNode attributeValue, ModelNode operation, context ) }<CODESPLIT>{<CODESPLIT>1
public IfClassAvailable Exclude T > > getOrCreateIfClassAvailable ( ) { childNode (available ) ; ( ( ) ) return new IfClassAvailableImpl Exclude ( this,classavailable, childNode, nodeList get ( 0 ) ) ; } return createIfClassAvailable ( ) ; }<CODESPLIT>If not already created a new <code > if - class - available< / code > element will be created and returned . Otherwise the first existing <code > if - class - available< / code > element will be returned .<CODESPLIT>1
public static void setThreadPool ( ThreadPoolExecutor pool ) { ( shutdown ConcurrencyTools pool pool ; } }<CODESPLIT>Sets thread pool to given size .<CODESPLIT>0
public ThymEngineConfigBuilder setMessageResolver ( IMessageResolver messageResolver ) {Resolvers ( clear (Resolvers ( ( return this ; }<CODESPLIT><p > Sets a single message resolver for this template engine . < / p > <p > Calling this method is equivalent to calling { @link #setMessageResolvers ( Set ) } passing a Set with only one message resolver . < / p > <p > This operation can only be executed before processing templates for the first time . Once a template is processed the template engine is considered to be <i > initialized< / i > and from then on any attempt to change its configuration will result in an exception . < / p ><CODESPLIT>1
public static GrayU8 labelToBinary ( GrayS32 labelImage, GrayU8 binaryImage, int numLabels, int... selected ) {BlobLabels ; ( selectedBlob selected ; } return labelToBinary ( labelImage, binaryImage, selectedBlob ) ; }<CODESPLIT>Scans through the labeled image and adds the coordinate of each pixel that has been labeled to a list specific to its label .<CODESPLIT>0
public EClass getIfcFacetedBrep ( ) { ( ifcFacetEClass ) ifcrepEClass = ( EClass ) EPackage ( Ifc ) getEClassifiers ( ) ( 225 ) ; } return ifcFacetedBrepEClass ; }<CODESPLIT><! -- begin - user - doc -- > <! -- end - user - doc -- ><CODESPLIT>1
public void marshall ( DescribeDominantLanguageDetectionJobRequest describeDominantLanguageDetectionJobRequest, ProtocolMarshaller protocolMarshaller ) { ( describeDetectionJobRequest ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( describeLanguageDetectionJobRequest getJobId ( ), JOBBINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public String getFileLink ( ) { ( ) return AJspValueWrapper substituteLink (, getSitePath (resource ) ) ; } return "" ; } }<CODESPLIT>Gets a lazy map which maps locales to attachment beans for that locale . <p ><CODESPLIT>0
private List < Map < StreamStateHandle, OperatorStateHandle > > repartition ( GroupByStateNameResults nameToStateByMode, int newParallelism ) { StreamStateHandleStateHandle mergeMapList = new ( newParallelism ) ; for (Parallelism ) mergeMapList add ( new ( ) ) ; } StreamStateHandleStateHandle State nameDisState = nameStateBy getBy (StateHandle SPLDIBUTE ) ;State ( nameDisState newParallelism mergeMapList ) ; StreamStateHandleStateHandle State nameUnionState = nameToStateBy getBy (StateHandle UNION ) ; repUnionState ( nameToUnionState, mergeMapList ) ; StreamStateHandleStateHandle State nameToBroadcastState = nameToStateBy getBy (StateHandle BCAST ) ; repBroadcastState ( nameToBroadcastState, mergeMapList ) ; return mergeMapList ; }<CODESPLIT>Repartition SPLIT_DISTRIBUTE state .<CODESPLIT>0
private String normalizeParameters ( MultiValueMap < String, String > collectedParameters ) { MultiValueMap sortedEncodedParameters = new TreeMultiValueMap ( ) ; for ( collectedParameters. ( ). ( ). ( ) ), List = next ( ) ; collected = ( ) ; List collectedValues = getValue ( ) ; List encodedValues = new ArrayList ( collectedValues ( ) ) ; sortedEncodedParameters put ( oauthEncode ( collectedName ), encodedValues ) ; for ( value collectedValues. ( ) value. ( ) ) value = valueIt next ( ) ; encodedValues add ( value null oauth ( value ) "" ) ; } sort ( encodedValues ) ; } StringBuilder paramsBuilder = new StringBuilder ( ) ; for ( sortedParameters. ( ). ( ). ( ) ), List = next ( ) ; name = ( ) ; List values = getValue ( ) ; for ( value values. ( ) value. ( ) ) value = valueIt next ( ) ; paramsBuilder ( name ) ( ) ( value ) ; ( value hasNext ( ) ) paramsBuilder ( "&" ) ; } } ( hasNext ( ) ) paramsBuilder ( "&" ) ; } } return paramsBuilder. toString ( ) ; }<CODESPLIT>internal helpers<CODESPLIT>1
public void removePort ( TCPPort endPoint ) { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tcremovePort endPoint getServerSocket ( ) ) ; } synchronized ( ) accept endPoint ( endPoint ) ; ( accept ) (100 acceptExceptions ) ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr event ( tcIgnoring removePort call on fatal selectorexit path ) ; } ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr exit ( tcremovePort ) ; } return ; }Action work newAction ( REMOVE endPoint workSync ) ; synchronized (Sync ) ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr. event ( this tcPassing remove to selector endPoint getServerSocket ( ) ) ; } accept addWork ( work ) ; workSync wait ( ) ; } ( ) } } ( accept sharedAccept acceptUsage ( ) ) sharedAccept null ; } } new (TCP to removed not registered ) ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr event ( tcThrow ) ; } (removePort, this ) ; ; } } ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr exit ( tc,removePort ) ; } }<CODESPLIT>Removes an end point from the set of end points that we are accepting connections on . This has the effect of removing the server socket from the selector and closing it .<CODESPLIT>1
public Observable ExtendedServerBlobAudit createOrUpdateAsync ( String, String, ExtendedServerBlobAudit parameters ) { return createOrUpdateWithServiceResponseAsync (,, parameters ) map ( ServiceResponseBlobAudit,BlobAudit ( ) Override public ExtendedServerBlobAudit ( ServiceResponse ExtendedServerBlobAudit ) { return body ( ) } } ; }<CODESPLIT>Creates or updates an extended server s blob auditing policy .<CODESPLIT>0
public Map String, String > getHeadersToMap ( Map String, String > map ) { ( map ) map LinkedHashMap ( ) map map ; forEach ( ( ) map0 ( ) ) ; return map0 ; }<CODESPLIT>获取指定的header值 没有返回默认值<CODESPLIT>0
public Artifact createArtifact ( String groupId, String artifactId ) { return repositorySystem create (RELEASEjar ) }<CODESPLIT>Replies the dependencies for the given artifact .<CODESPLIT>0
@ org eclipse xtext service SingletonBinding ( eager ) public Class org eclipse xtext generator parser antlr debug validation SimpleAntlrJavaValidator bindSimpleAntlrJavaValidator ( ) { returntext generator parser an debug validation SimpleAntlrJavaValidator ; }<CODESPLIT>contributed by org . eclipse . xtext . generator . validation . JavaValidatorFragment<CODESPLIT>1
public void marshall ( CreateDeploymentGroupRequest createDeploymentGroupRequest, ProtocolMarshaller protocolMarshaller ) { ( createDeploymentGroupRequest ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( createDeploymentGroupRequest getApplication ( ),BINDING ) ; protocolMarshaller marshall ( createGroupRequestGroupName ( )GROUPBINDING ) ; protocolMarshaller marshall ( createGroupRequestConfig ( )CONFIGBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequestTagFilters ( ),FILTERBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getOnInstanceTagFilters ( ), ONPREFILTERBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getAutoScalingGroups ( ), AUTOGROUPSBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getService ( ), SERVBINDING ) ; protocolMarshaller marshall ( createGroupRequestTriggerConfigurations ( )BINDING ) ; protocolMarshaller marshall ( createGroupRequestAlarm ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getAutoRollbackConfiguration ( ), ABACKBINDING ) ; protocolMarshaller marshall ( createGroupRequestStyle ( )BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getBlueGreenDeploymentConfiguration ( ), BLGREENBINDING ) ; protocolMarshaller marshall ( createGroupRequestLoadBalancer ( )INFOBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequestTagSet ( ),SETBINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getEServices ( ),BINDING ) ; protocolMarshaller marshall ( createDeploymentGroupRequest getOnTagSet ( ), ONPRESTSETBINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
public void prependHandler ( @ Nonnull final EJSEvent eJSEvent, @ Nonnull final IHasJSCode aNewHandler ) { ValueEnforcer notNull (JJ ) ; ValueEnforcer notNull (NewHandlerNewHandler ) ; CollectCodeProviderCodeEvents ( ) ; ( ) a newJS ( ) ;Events (JCode ) ; }Code prepend (NewHandler ) ; }<CODESPLIT>Add an additional handler for the given JS event . If an existing handler is present the new handler is appended at front .<CODESPLIT>1
public static Nullable Pair Integer, Integer > decodeDimensions ( InputStream is ) { checkNotNull ( ) ; byteBuffer DE acquire ( ) ; ( byteBuffer ) byteBuffer allocate ( DE ) ; } BitmapFactory options BitmapFactory ( ) ; options in ; options inStorage byteBuffer array ( ) ; decodeStream ( null options ) ; return ( options outWidth - 1 || options outHeight - 1 ) null new ( options outWidth, options outHeight ) ; } DE release ( byteBuffer ) ; } }<CODESPLIT>Decodes the bounds of an image and returns its width and height or null if the size can t be determined<CODESPLIT>1
public static HttpResponse execute ( HttpRequestBase request ) throws IOException { notNull ( request request ; client create (Redirect (Redirect ( build ( ; return client execute ( request ) ; }<CODESPLIT>Execute http response .<CODESPLIT>1
private static void sort ( byte [ ] byteArray, int start, int end, boolean descending ) { ( ) return ; } ( ) ; Merge sort ( byteArray start descending ) ; Merge sort ( byteArray descending ) ; ( ) Merge mergeending ( byteArray start ) ; } Merge merge ( byteArray start end ) ; } }<CODESPLIT>Merge two sorted arrays into a bigger array in ascending order . This routine runs in O ( n ) time .<CODESPLIT>0
public void writeThrowable ( OutputStream out, Throwable value ) throws IOException { ( out ) ; writeSerialized ( out ) ; ( ) ; printStackTrace ( ( ) ) ; writeString ( outTRACE ( ) ) ; ( out ) ; }<CODESPLIT>Encode a Throwable instance as JSON : { throwable : Base64 stackTrace : String }<CODESPLIT>1
protected String renderRadio ( FacesContext facesContext, UIInput uiComponent, String value, boolean disabled, boolean checked, boolean renderId, Integer itemNum ) throws IOException { clientId getClientId ( facesContext ) ; ( item null ) null clientId facesContext getNChar ( ) item ; ResponseWriter writer facesContext getResponseWriter ( ) ; writer startElement ( HTMLComponent ) ; ( itemId ) writer writeAttribute ( HTML ID itemId null ) ; } ( render ) writer writeAttribute ( HTML ID clientId null ) ; } writer writeAttribute ( HTML TYPE HTMLRADIO null ) ; writer writeAttribute ( HTML clientId null ) ; ( disabled ) writer writeAttribute ( HTML DIS HTML DIS null ) ; } ( checked ) writer writeAttribute ( HTML CHECK HTML CHECK null ) ; } ( value ) writer writeAttribute ( HTML VALUE value null ) ; } writer writeAttribute ( HTML VALUE "" null ) ; } ClientBehavior behaviors null ; ( ui ClientBehaviorHolder ) ( (BehaviorHolder )Component ) getClientBehaviors ( ) ;Properties ; (CommonPropertiesOptim ( ) ) commonPropertiesProperty getCommonProperties (Component ) ; } ( behaviors ( )CommonPropertiesOptim ( ) )Property renderChangeEventProperty ( writer, commonProperties,Component ) ;Property renderEventProperties ( writer, commonProperties,Component ) ;Property renderFieldEventPropertiesWithoutOnchange ( writer, commonProperties,Component ) ; } renderBehaviorOnchangeEventHandler ( facesContext, writer,Component, ) ; (CommonEventsOptim ( ) ) commonEventsEvent getCommonEvents (Component ) ;Event renderBehaviorEventHandlers ( facesContext, writer, commonProperties, commonEvents,Component, ) ;Event renderBehaviorFieldEventHandlersWithoutOnchange ( facesContext, writer, commonProperties, commonEvents,Component, ) ; } renderBehaviorEventHandlers ( facesContext, writer,Component, ) ; renderBehaviorFieldEventHandlersWithoutOnchange ( facesContext, writer,Component, ) ; } } renderHTMLAttributes ( writer,Component, HTMLHUGHATTRIBUTESOUTDISABLEDANDSTYLEANDEVENTS ) ; } renderHTMLAttributes ( writer,Component, HTMLHUGHATTRIBUTESOUTDISABLEDANDSTYLE ) ; } ( isDisabled ( ui ) ) writer writeAttribute (faces shared render html HTML DIS, Boolean TRUE, null ) ; } writer endElement ( HTML ) ; return itemId ; }<CODESPLIT>Renders the given SelectItem ( Group )<CODESPLIT>0
public DataSource getDataSource ( String dataSourceName ) throws ServiceLocatorException { dataSource ; dataSource ( ) ic lookup ( dataSource ) ; } ( ) ( ) ; } ( ) ( ) ; } return dataSource ; }<CODESPLIT>This method obtains the topc itself for a caller<CODESPLIT>0
private void buildHosts ( Map externalProperties, List < Server > servers, String persistenceUnit, final KunderaMetadata kunderaMetadata ) { persistenceMetadata kunderaMetadataMetadata ( )Metadata ( persistence ) ; Properties props persistenceMetadata getProperties ( ) ; this. externalProperties = externalProperties ; hosts null ; portAsString null ; ( externalProperties ) hosts ( )Properties (PropertiesNODE ) ;AsString ( )Properties (Properties ) ; } ( hosts ) hosts ( ) props (PropertiesNODE ) ; } (AsString )AsString ( ) props (Properties ) ; } ( hostsAsString ) buildHosts ( hosts, portAsString, this hostsList ) ; } ( servers servers ( ) ) buildHosts ( servers, this hostsList ) ; } }<CODESPLIT>Build host array .<CODESPLIT>1
public String getPresentationML ( ) throws IllegalStateException { ( message ) ( messageMLparse ) ; } ByteArrayOutputStream bout new ByteArrayOutputStream ( ) ; Xml out new Xml ( bout ) ; outNo ( ) ; outNo ( ) ; messageMLPresentML ( out ) ; out close ( ) ; return bout. toString ( ) ; }<CODESPLIT>Parse a Markdown message into its MessageMLV2 representation . Generates document tree structures for serialization into output formats with the respective get () methods .<CODESPLIT>0
private void showFacebookAppError ( ) { To makeText ( getString ( string wfacebook__errorfacebook ) ToSHORT ) show ( ) ; }<CODESPLIT>Links an account .<CODESPLIT>0
public static GPX read ( InputStream input ) IOException { return reader ( ST ) read ( ) }<CODESPLIT>Read an GPX object from the given { @code input } stream .<CODESPLIT>0
@ Override protected void i_addRow ( Connection conn, String table, String [ ] columns, String [ ] values, boolean [ ] numeric ) throws SQLException { StringBuilder sql = new StringBuilder ( 128 ) ; sql (INSERT INTO ) ( table ) ( ) ; for ( columns. ) ( ) sql ( ", ) ; } sql ( columns ) ; } sql ( VALUES ) ; for ( columns. ) ( ) sql ( ", ) ; } ( values null ) sql (NULL ) ; } sql ( ) ; } } sql ( ) ; ( ( ) ) logger. (About execute {}", sql toString ( ) ) ; } PreparedStatement stmt = conn. prepareStatement ( sql. toString ( ) ) ; var = ; for ( values. ) ( values null ) var ++ ; ( numeric null numeric ) setNumeric ( stmt, varIndex, columns, values ) ; } stmt setString ( varIndex values ) ; } } } stmt. executeUpdate ( ) ; } closeStatement ( stmt ) ; } }<CODESPLIT>Get a long string which could be a TEXT or CLOB type . ( CLOBs require special handling -- this method normalizes the reading of them )<CODESPLIT>0
int getNextSentencePosition ( int numberOfParagraph, int startOfSentencePosition ) { ( CacheEntry entries ) (ParagraphParagraph ) return anEntry. nextSentencePosition ; } } return - 1 ; }<CODESPLIT>get Proofreading errors of sentence out of paragraph matches from cache<CODESPLIT>0
private void asyncRefresh ( ) { ( asyncRefresh ( false ) ) executor submit ( new Runnable ( ) { Override public void run ( ) { refresh ( ) ; } asyncRefresh ; } } } ) ; } ( ) asyncRefresh ; } } }<CODESPLIT>Invokes the callback to get a new value .<CODESPLIT>0
@ Override public ScheduleExpression getSchedule ( ) { TraceComponent isAnyTracingEnabled ( ) ; ( tc ( ) ) Tr ( tcgetSchedule this ) ; checkTimerAccess ( ) ; PersistentTimerTaskHandler taskHandlerTaskHandler (TGET ) ;ScheduleExpression parsedSchedule taskHandler getParsedSchedule ( ) ; ( parsedSchedule ) new (Timer not a calendarbased timer toString ( ) ) ; ( tc ( ) ) Tr ( tcgetSchedule ) ; ; } ScheduleExpression scheduleJS getDefault ( ) ivObjectCop copy ( parsedSchedule getSchedule ( ) ) ; ( tc ( ) ) Tr ( tcgetSchedule schedule ) ; return schedule ; }<CODESPLIT>Query whether this timer has persistent semantics .<CODESPLIT>0
public void marshall ( OperatingSystem operatingSystem, ProtocolMarshaller protocolMarshaller ) { (System ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( operatingSystem ( )BINDING ) ; protocolMarshaller marshall ( operatingSystem ( ) IDBINDING ) ; protocolMarshaller marshall ( operatingSystem getType ( ) TYPEBINDING ) ; protocolMarshaller marshall ( operatingSystem getConfigurationManagers ( ) CONFIGURATIONBINDING ) ; protocolMarshaller marshall ( operatingSystem getRe ( )BINDING ) ; protocolMarshaller marshall ( operatingSystem getReVersion ( )BINDING ) ; protocolMarshaller marshall ( operatingSystem getSupported ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
private static void resolveServerConfig ( ServerConfig serverConfig ) { bound serverConfig getBound ( ) ; ( ) host serverConfig ( ) ; ( isBlank ( ) )Info getLocal ( ) ; serverConfig ( ) ; boundHost = SystemInfo. isWindows ( ) host : NetUtils. ANYHOST ; } boundHost = host ; } serverConfig ( ) ; } ( serverConfig ( ) )Port serverConfig ( ) ; port Net getAvailablePort ( boundPortConfigs (Options SERVEREND ) ) ; ( ) ( isInfoEnabled ( ) ). info (Changed port from {} to {} because the config port is disabledPort port ) ; } serverConfigPort ( ) ; } } }<CODESPLIT>初始化Server实例<CODESPLIT>0
public static String blur ( int radius, int sigma ) { ( radius ) IllegalArgumentException (Radius ) ; } ( radius 150 ) IllegalArgumentException (Radius ) ; } ( sigma < ) IllegalArgumentException (Sigma ) ; } return FILTER_BLUR + "(" + radius + "," + sigma + ")" ; }<CODESPLIT>This filter uses a 9 - patch to overlay the image .<CODESPLIT>0
@ Override public void send ( Nonnull String data ) IllegalStateException { checkConnected ( send ( }<CODESPLIT>{<CODESPLIT>0
public void throttle ( boolean verbose ) { ( System ( ) this LastCheck 5000 ) ( this End getExecutionCount ( ) this Start getExecutionCount ( ) ) observedLatency = ( ) ( this End getTotalExecutionDuration ( ) this Start getTotalExecutionDuration ( ) ) / ( ) ( this End getExecutionCount ( ) this Start getExecutionCount ( ) ) ; double tuningLatency = observedLatency ; el = this EndLatencyBuckets ( ) ; sl = this StartLatencyBuckets ( ) ; ec = this End getExecutionCount ( ) this Start getExecutionCount ( ) ; elsum = ; for ( )sum += ; } slsum = ; for ( )sum += ; } ( ( ( double ) ( el ) / ( double ) ec ) ) outExecutionDuration = ; outExecutionCount = ; for ( ) outCount += ( ) ; ( 100 ) outExecutionDuration += ( el ) ; outExecutionDuration += ( el ) ; } tuningLatency = ( ) ( this End getTotalExecutionDuration ( ) this Start. getTotalExecutionDuration ( ) outlierExecutionDuration ) / ( ) ( this. End. getExecutionCount ( ) this. Start. getExecutionCount ( ) outlierExecutionCount ) ; } oldRate = this Rate ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate01 ) ; ( tuningLatency this TargetLatency ) this Rate ( long ) ( this Rate ) ; ( verbose oldRate this Rate ) System out printf ( Adjust toPS Recent Latency this DateFormat format ( Date ( round ( ( System ( ) this StartTime ) / ) ) ) ( oldRate this Rate UPDOWN ) ( double ) this Rate tuningLatency ) ; } this. Start = ( PerCounter ) this. End. clone ( ) ; this. End = ClientConnectionPool.Statistics ( this. Connection ). ( this. ) ; this. LastCheck = System. ( ) ; } this. L. throttle ( this. Rate ) ; }<CODESPLIT>Throttle the execution process and re - adjust the rate requirement on the fly . The limiter will automatically re - adjust the rate internally by using a basic { @link RateLimiter } after analysis of the latency data gathered from the performance tracking .<CODESPLIT>1
private PrintStream createOutputStream ( ) { ( output ) FileOutputStream new FileOutputStream ( outputLog ) ; bos new ( ) ; ( ) return new PrintStream ( bos, false, encoding ) ; } return new PrintStream ( bos, false ) ; } } ( ) IllegalArgumentException (String ( ) ) ; } }System ; ( ) return new PrintStream ( System out, false, encoding ) ; } ( ) } } return System out ; }<CODESPLIT>Utility method to skip a given amount of bytes from the input stream . This will return the index after the skip ( which may or may not be able to skip the entire requested amount ) .<CODESPLIT>0
public static boolean areNotEmpty ( String... values ) { ; ( values values ) result = false ; } ( values ) ( value ) ; } } return result ; }<CODESPLIT>检查指定的字符串列表是否不为空。<CODESPLIT>1
public static String getEncodedServletURI ( HttpServletRequest request ) { servlet request getServlet ( ) ; contextPath request getContextPath ( ) ; ( ( ) ) return contextPath + servletPath ; } contextPath contextPath ( ) ; request request getRequest ( ) ; requestUri request toCharArray ( ) ; servlet new ( contextPath ) ; requestUriChar contextPath ; ( toCharArray ( ) ) ( ) requestUriChar copyPathFragment ( requestUriChars requestUriChar servletURI ) ; servletURI ( ) ; ; } } requestUriCharIndex copyPathFragment ( requestUriChars requestUriCharIndex servletURI ) ; return servletURI. toString ( ) ; }<CODESPLIT>Get request s servlet URI encoded based on results from { @link HttpServletRequest#getContextPath () } and { @link HttpServletRequest#getRequestURI () } which are both encoded URI / path and { @link HttpServletRequest#getServletPath () } which is DECODED path . We cannot just concatenate context path and servlet path to get the proper result because of these encoding / decoding differences especially if the Servlet path contains encoded characters . @param request @return servlet URI ( meant to be equivalent to contextPath + URLEncoded ( servletPath ))<CODESPLIT>1
public void setMode ( finalMode mode ) { this mode mode ; ( HTML ( this caseSensitive = false ; } }<CODESPLIT>This method will try to avoid creating new strings for each structure name ( element / attribute )<CODESPLIT>0
private void createReportMap ( ) {. entering ( ) ; Map Sumized subReportMap = new LinkedHashMap Sumized ( ) ; subReportMap put (Fulluite Summary,Suites ) ; subReportMap put (Test Summary,Tests ) ; subReportMap put (Class Summary,Classes ) ; subReportMap put (Group Summary,Groups ) ; ReportMap Sumized testSummaryReport = new ReportMap Sumized ( ReportSheetNames TESTSUMMARYREPORT ( ) subReportMap ) ; fullReportMap add ( testSummaryReport ) ; Sumized groupsClone = new ArrayList SumizedData (Groups ) ; SumizedData classData ; SumizedDataGroupData = new SumizedData ( ) ;Group (CaseResult ) ; groupsClone add ( naGroupData ) ; subReportMap = new LinkedHashMap SumizedData ( ) ; for ( SumData group groups ) sGroupName = group gets ( ) ; classData = new ArrayList SumizedData ( ) ; for (GroupGroupClassData ( ) ) ( sGroupClassName ( sGroupName ( ) ) ( sGroupName ) )Data add ( mpGroupClassData ( sGroupClassName ) ) ; } } subReportMap put ( sGroupName,Data ) ; } ReportMap SumizedData secondReport = new ReportMap SumizedData ( ReportSheetNames GROUPSUMMARYREPORT ( ) subReportMap ) ; fullReportMap add ( secondReport ) ; Map subDetailReportMap = new LinkedHashMap ( ) ; subDetailReportMap put (Passed List, tcPassedData ) ; subDetailReportMap put (Failed List, tcFailedData ) ; subDetailReportMap put (Skipped List, tcSkippedData ) ; ReportMap thirdReport = new ReportMap ( ReportSheetNames TESTCAEPORT ( ) subDetailReportMap ) ; fullReportMap add ( thirdReport ) ; MapReports = new LinkedHashMap ( ) ; lstDefReports put (Def Summary, tcDefData ) ; ReportMapReport = new ReportMap ( ReportSheetNames DEFREPORT ( )Reports ) ; fullReportMap add (Report ) ; BaseReport b = ( BaseReport ) fullReportMap ( fullReportMap ( ) )GeneratedReport ( ) ( ) next ( ) ;Titles = (Class NameMethodTestcase idTest DescriptionGroup]"Time takenOutputErrorError Details ) ; b setTitles (Titles ) ; Map fTestOutputSubReportMap = new LinkedHashMap ( ) ; fTestOutputSubReportMap put (Test Output, tcOutputData ) ; ReportMap fReportSheet = new ReportMap ( ReportSheetNames TESTOUTPUTETAILSREPORT ( ) fTestOutputSubReportMap ) ; fullReportMap add ( fReportSheet ) ;. exiting ( ) ; }<CODESPLIT>Generates all summarized counts for various reports<CODESPLIT>0
@ Override public ExtensionProcessor createExtensionProcessor ( IServletContext servletContext ) throws Exception {ModuleMetaData moduleMetaData ( ( WebAppConfigExtended ) ( servletContext getWebAppConfig ( ) ) ) getMetaData ( ) ; JaxModuleMetaDataModuleMetaData JaxMetaData getJModuleMetaData ( moduleMetaData ) ; (MetaData ) return null ; }PersistentCache overlayCache servletContext getModuleContainer ( ) adapt (PersistentCache ) ; JaxModuleInfoModuleInfo ( JaxModuleInfo ) overlayCache getFromCache ( JaxModuleInfo ) ; ( endpoint ( ) ) ( tc ( ) ) Tr ( tc,No JAX service in the web module create web service processor ) ; } return null ; } publisherModuleContainer servletContext getModuleContainer ( ) ; Jax publisher = new JaxPublisher ( jaxModuleMetaData publisherModule Jax getWebModule ( publisherModule ) ) ; publisher setAttribute ( Jax SERCONTEXT servletContext ) ; publisher setAttribute ( JaxINFOBUCONTEXT new ( servletContext getModule ( ) adapt (Annotations class ) getInfo ( ) servletContext getModule ( ) ) ) ; WebApp webApp = ( WebApp ) servletContext ; publisher setAttribute ( Jax webAppCollab ( ) getWebCollab ( ) ) ;Publisher endpointPublisher endpointPublisherSR getServiceWithException ( ) ; (Infos ( ) ) endpointPublisher publish ( endpointInfo, publisher ) ; } (AppConfig )WebAppConfigurator configure (ModuleInfo, servletContext getWebAppConfig ( ) ) ; } return new JaxRsExtensionProcessor ( servletContext ) ; }<CODESPLIT>{<CODESPLIT>1
private void forEveryEdge ( EdgeVisitor visitor ) { = getFrom ( ) ; = edgeIds ( ) ; prevEdge = EdgeIterator NO ; for ( )IteratorState edge = graphEdgeIteratorState ( edgeIds ( ) ) ; ( edgeBase ) IllegalStateException (Edge edgeIds ( ) empty requested node array index edges edgeIds ( ) ) ;Node = edgeBase getBaseNode ( ) ; edgeBase = graphEdgeIteratorState ( edgeBaseEdge ( ) ) ; visitor next ( edgeBase,, prevEdgeId ) ;Edge = edgeBaseEdge ( ) ; } visitor finish ( ) ; }<CODESPLIT>Returns the list of all edges .<CODESPLIT>0
public staticSetup guessSetup ( Key [ ] fkeys, boolean singleQuote, int checkHeader ) { return guessSetup (keysSetup (UEINFOUEQuote, checkHeader,UE, null,WriterErr ) ) }<CODESPLIT>Discover the parse setup needed to correctly parse all files . This takes a ParseSetup as guidance . Each file is examined individually and then results merged . If a conflict exists between any results all files are re - examined using the best guess from the first examination .<CODESPLIT>0
public static boolean isEnabled ( State state ) { return Boolean valueOf ( state ( MET, DEFAULTMETRICS ) ) ; }<CODESPLIT>Check whether metrics collection and reporting are enabled or not .<CODESPLIT>1
static, ID, ID createDao ( ConnectionSource connectionSource, Class clazz ) SQLException { returnDaoImpl ID ( connection, clazz ) } ; }<CODESPLIT>Helper method to create a Dao object without having to define a class . Dao classes are supposed to be convenient but if you have a lot of classes they can seem to be a pain .<CODESPLIT>0
public void setCode ( String timecode ) throws Timecode TimecodeException { clear ( ; setHours ( ( ; setMinutes ( ( ) ; setSeconds ( ( ) ) ; setFrames ( ( ) ) ; ( ( ) ) setSamples ( ( ) ) ; setFramesSecond ( ) ; } ( ) } } normalize ( ) ; }<CODESPLIT>Sets the object based on a string in the form HH : MM : SS : FF<CODESPLIT>1
private void extractMessage ( JsonObject object ) { meta objectJsonObject (meta ) ; ( )Primitive metaJsonPrimitive ( ) ; ( msg ) this message ( ) ; return ; } }Primitive error objectJsonPrimitive (error ) ; ( error ) this message error ( ) ; return ; } this. message =Unknown Error ; }<CODESPLIT>Performs an XAuth authentication .<CODESPLIT>0
public static base_response update ( nitro_service client, gslbparameter resource ) throws Exception { updateresource ( ; lentrytimeout = resource lentrytimeout ;tolerance = resource rtttolerance ; l = resource l ; v6ns = resource v6ns ; lorder = resource lorder ; dropl = resource dropl ; return updateresource updateresource ( client ) ; }<CODESPLIT>Use this API to fetch lbvserver_tmtrafficpolicy_binding resources of given name .<CODESPLIT>0
protected synchronized void activate ( BundleContext context, Map < String, Object > props ) { jndiName ( ) props ( ) ; original ( ) props (value ) ; decode = ( Boolean ) props (decode ) ; ( jndiName jndiName ( ) original original ( ) ) ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc, to registerNDI jndiName jndiName and value originalValue both set ) ; } return ; } value = original ; ( decode ) value Password decode ( originalValue ) ; } ( ) Tr error ( tc,ndidecode, originalValue, ) ; } } parsed = Literal parse ( value ) ; valueClassName = parsed ( ) ( ) ; serviceObject = decode new Decode ( original ) parsed ; Dictionary propertiesForndiService = new Hashtable ( ) ; propertiesForJndiService put (osndiservice, jndiName ) ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc,RegisterNDI valueClassName value parsedValue andNDI name jndiName ) ; } this serviceRegistration context registerService ( valueClassName, serviceObject, propertiesForJndiService ) ; }<CODESPLIT>Registers the JNDI service for the supplied properties as long as the jndiName and value are set<CODESPLIT>1
public List Map String, String getWMIObjectList (MIClass wClass ) { returnMIObjectList ( ( }<CODESPLIT>Query a list of object data for an specific class <br ><CODESPLIT>1
public static void closeEL ( Transport t ) { ( isConnected ( ) ) close ( ) ; } ( )IfNecessary ( ) ; } }<CODESPLIT>close Writer without a Exception<CODESPLIT>1
public static T ClassLoader ElementMatcher Junction T isParentOf ( ClassLoader classLoader ) { return classLoader BOSTRCLASSMatchers isBootstrapClassLoader ( ) ClassLoaderParent ( classLoader ) ; }<CODESPLIT>Matches all class loaders in the hierarchy of the matched class loader against a given matcher .<CODESPLIT>0
public void marshall ( BatchGetObjectAttributesResponse batchGetObjectAttributesResponse, ProtocolMarshaller protocolMarshaller ) { ( batchGetObjectAttributesResponse ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( batchGetObjectAttributesResponse getAttributes ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public void handleInputStream ( final InputStream is ) throws IOException {. (Handling input stream ) ; OutputStream os = new FileOutputStream ( thisfile ) ; bytesWritten = lit util Io copy ( os thiswriteListener ) ;. (Wrote bytesWritten file this.file ) ; } IOUtils closeQuietly ( ) ; IOUtils closeQuietly ( os ) ; } }<CODESPLIT>{<CODESPLIT>0
public ValidationData ruleSync ( List ValidationRule > rules ) { rule ( ) ; rules ( rule { ( ; rule ( rule ) ; } ) ; this validationRules removeAll ( ruleList ) ; thisRules addAll ( this validationRules ) ; this validationRules = ruleList ; this validationRules sort (Sorter ( ) ) ; return this ; }<CODESPLIT>Find list parent validation data .<CODESPLIT>0
protected List String > getDataTypeStartWords ( ) { ( ) all ( ) ; allStartWords addAll (TypesSTART ) ; allStartWords addAll ( getCustomStartWords ( ) ) ; } return allDataTypeStartWords ; }<CODESPLIT>Returns a list of data type start words which can be used to help identify a column definition sub - statement .<CODESPLIT>1
protected void setupToolbarElements ( JToolBar toolbar ) { = ; = new ( ) ; x = this addToolBarElements ( toolbar, TOBARLOCATIONSTART, x ) ; toolbar add ( new ( Constant messages getString ( panelPrefixtoolbarcontextlabel ) )HelperGB ( ++ ) ) ;. add ( getContextSelectComboBox ( )Helper. ( ) ) ; x = this addToolBarElements ( toolbar, TOBARLOCATIONAFTERCONTEXTSSELECT, x ) ; toolbar add ( new ( )HelperGB ( ++0 ) ) ; ( hasOptions ( ) ). add ( getOptions ( )Helper. (,, ) ) ; } this addToolBarElements ( toolbar, TOBARLOCATIONEND, x ) ; }<CODESPLIT>Gets the Context select combo box .<CODESPLIT>0
private int parseTrailer ( byte [ ] input, int inOffset, List < WsByteBuffer > list ) throws DataFormatException { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc,Parsing trailer offset this parseOffset val this parseInt ) ; } offset = in ; val =L ; while ( this parse input ) ( this ) this parseFirst input ; this parseInt ( ( input ) ) this parseFirst ; val ( ( input ) ) this parseFirst ; val = ( val 16 ) | this. parseInt ; ( this checksum ( ) val ) msg =Checksum does not match crc this. checksum. getValue ( ) trailer val ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc, msg ) ; } release ( list ) ; DataFormatException ( ) ; } val ( ( input ) ) this parseFirst ; val = ( val 16 ) | this. parseInt ; ( this infl getBytesWritten ( ) val ) msg =BytesWritten does not match inflater this. inflater. getBytesWritten ( ) trailer val ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc, msg ) ; } release ( list ) ; DataFormatException ( ) ; } this resetNeededToProceed = ; default : ; } offset ++ ; this parse ++ ; } return offset ; }<CODESPLIT>Parse past the GZIP trailer information . This is the two ints for the CRC32 checksum validation .<CODESPLIT>1
public ObservableSecretBundle getDeletedSecretAsync ( String vaultBaseUrl, String secretName ) { return getDWithServiceResponseAsync ( vaultBaseUrl, ) map ( ServiceResponse, ( ) Override publicSecretBundle ( ServiceResponseSecretBundle ) { return body ( ) } } ; }<CODESPLIT>Permanently deletes the specified secret . The purge deleted secret operation removes the secret permanently without the possibility of recovery . This operation can only be enabled on a soft - delete enabled vault . This operation requires the secrets / purge permission .<CODESPLIT>0
public void addClassToId ( final Class < > clazz, final String id ) { Assert notNull ( clazz,Class null ) ; Assert hasText ( id,Alias ( null or contain only ) ; (To ( clazz ) ) IllegalArgumentException (Class clazz already alias (id. get ( clazz ) set alias id ) ; } ( idToClass ( id ) ) IllegalArgumentException (Alias (id id idClass. get ( id ) clazz ) ; }ToId put ( clazz, id ) ; idToClass put ( id, clazz ) ; }<CODESPLIT>Adds single mapping : class < - > alias ( id ) .<CODESPLIT>1
void submit ( ) { action ; (All ( ) ) action = CmsFlexCache. CLEAR_ONLINE_ALL ; } action = CmsFlexCache. CLEAR_ONLINE_ENTRI ; } OpenCms fire ( new (CACHECLE singleton (Cache CACHE new ( action ) ) ) ) ; }<CODESPLIT>Set defautl values to vaadin components . <p ><CODESPLIT>0
@ Override public Shutdown shutdown ( Shutdown request ) { request beforeClientExecution request executeShutdown ( request }<CODESPLIT><p > Shuts down a gateway . To specify which gateway to shut down use the Amazon Resource Name ( ARN ) of the gateway in the body of your request . < / p > <p > The operation shuts down the gateway service component running in the gateway s virtual machine ( VM ) and not the host VM . < / p > <note > <p > If you want to shut down the VM it is recommended that you first shut down the gateway component in the VM to avoid unpredictable conditions . < / p > < / note > <p > After the gateway is shutdown you cannot call any other API except <a > StartGateway< / a > <a > DescribeGatewayInformation< / a > and <a > ListGateways< / a > . For more information see <a > ActivateGateway< / a > . Your applications cannot read from or write to the gateway s storage volumes and there are no snapshots taken . < / p > <note > <p > When you make a shutdown request you will get a <code > 200 OK< / code > success response immediately . However it might take some time for the gateway to shut down . You can call the <a > DescribeGatewayInformation< / a > API to check the status . For more information see <a > ActivateGateway< / a > . < / p > < / note > <p > If do not intend to use the gateway again you must delete the gateway ( using <a > DeleteGateway< / a > ) to no longer pay software charges associated with the gateway . < / p ><CODESPLIT>1
@ GuardedBy (monitor ) @ VisibleForTesting static MetricServiceClient createMetricServiceClient ( @ Nullable Credentials credentials ) throws IOException { settings newBuilder ( ) (rpc newBuilder ( ) setHeader ( ) build ( ) ) ; ( credentials ) settingsCredentials ( FixedCredentials create ( credentials ) ) ; } return MetricServiceClient create ( settingsBuilder. build ( ) ) ; }<CODESPLIT>Resets exporter to null . Used only for unit tests .<CODESPLIT>0
public final List < Connection > getConnections ( final ConnectionMode connectionMode, final String dataSourceName, final int connectionSize ) throws SQLException { DataSource getDataSource ( ( ; checkState ( null dataSourceMissing the data source name dataSource ) ; Connection connections ; synchronized ( ) connections cachedConnections ( ) ; } Connection ; ( connections ( ) connection ) new ( connections ) ( connection ) ; } ( connections ( ) ) new ( connection ) ; addAll ( connections ) ; Connection newConnections createConnections ( dataSource connection dataSource connection connections ( ) ) ; addAll ( newConnections ) ; synchronized ( ) cachedConnections putAll ( dataSource newConnections ) ; } } new ( createConnections ( dataSource connection dataSource connection ) ) ; synchronized ( ) cachedConnections putAll ( dataSource ) ; } } return result ; }<CODESPLIT>Get database connections .<CODESPLIT>1
public void copyFrom ( TextImage source, int startRowIndex, int rows, int startColumnIndex, int columns, int destinationRowOffset, int destinationColumnOffset ) { copyTo }<CODESPLIT>Copies the content from a TextImage into this buffer .<CODESPLIT>1
public LocalDateTime minusWeeks ( long weeks ) { return ( weeks plusWeek ( ) plusWeek ( ) plusWeek ( weeks ) ) }<CODESPLIT>Returns a copy of this { @code LocalDateTime } with the specified number of months subtracted . <p > This method subtracts the specified amount from the months field in three steps : <ol > <li > Subtract the input months from the month - of - year field< / li > <li > Check if the resulting date would be invalid< / li > <li > Adjust the day - of - month to the last valid day if necessary< / li > < / ol > <p > For example 2007 - 03 - 31 minus one month would result in the invalid date 2007 - 04 - 31 . Instead of returning an invalid result the last valid day of the month 2007 - 04 - 30 is selected instead . <p > This instance is immutable and unaffected by this method call .<CODESPLIT>0
public static String concat ( String... strs ) { ( ; ( strs ) ( ) ; } return toString ( ) ; }<CODESPLIT>快速连接参数中的字符串 .<CODESPLIT>1
@ ( ) public static buildApplicationObject ( Class interfaceClass, Class extendedInterfaceClass, Class extendedInterfaceWrapperClass, Collection String classNamesIterator, defaultObject ) { returnApplicationObject (ClassInterfaceClassInterfaceClass classNamesIterator defaultObject, null ) }<CODESPLIT>Creates ApplicationObjects like NavigationHandler or StateManager and creates the right wrapping chain of the ApplicationObjects known as the decorator pattern .<CODESPLIT>0
@ Override public synchronized RecordStructure read ( long sessionId, long urlId ) throws DatabaseException {Read sessionId ) ;Read ( url ) ; ( psRead executeQuery ( RecordStructure build ( ) ; return result ; } } ( SQLException ) ( ) ; } }<CODESPLIT>This method initializes this<CODESPLIT>0
@ Override public final T process ( final Map < String, Object > pAddParam, final T pEntity, final IRequestData pRequestData ) throws Exception { fieldRequestData getParameter (fieldNameFilePath ) ; getterFieldPath this gettersRHolder getFor ( pEntity ( ) fieldPath ) ; filePath ( ) getter invoke ( pEntity ) ; ( filePath ) fileToDel new ( filePath ) ; ( ( ) delete ( ) ) ( delete file ) ; } } thisOrm delete ( pAddParam pEntity ) ; return null ; }<CODESPLIT><p > Process entity request . < / p ><CODESPLIT>1
protected int getTransactionIsolation ( ) { val (TRANSACTION ) ; return val null - 1 Integer parseInt ( val ) ; }<CODESPLIT>transactionIsolationオプションの指定<CODESPLIT>1
public static int krone ( BigInteger a, BigInteger p ) { return ( krImpl ( ) }<CODESPLIT>Verifies this library is loaded properly .<CODESPLIT>0
private static void parseBounds ( JSONObject modelJSON, Shape current ) throws JSONException { ( modelJSON (bounds ) ) JSONObject boundsObject modelJSONObject (bounds ) ; current setBounds ( new ( new ( boundsObjectObject (Right ) ( ) boundsObjectObject (Right ) ( ) ) new ( boundsObjectObject (upperLeft ) ( ) boundsObjectObject (upperLeft ) ( ) ) ) ) ; } }<CODESPLIT>creates a point array of all dockers and add it to the current shape<CODESPLIT>0
@ Override public ParseResult parse ( Reader reader, AttributeSource parent ) throws IOException { res = new ( ) ; sb = new ( ) ; char buf = new char ; ; ( ( reader ( buf ) ) ) ( buf,, ) ; } Iterator < MtasUpdateRequestProcessorResultItem > iterator ; ( MtasUpdateRequest MtasUpdateRequest ( ( ) ) ) { result getIterator ( ) ; ( iterator iterator hasNext ( ) ) res str resultStringValue ( ) ; res bin resultBinValue ( ) ; } res str = null ; res bin = null ; result close ( ) ; return res ; } parent clearAttributes ( ) ; ( iterator ( ) ) MtasUpdateRequestProcessorResultItem ( ) ; ( ) CharTermAttributeatt parent addAttribute ( CharTermAttribute ) ;att ( tokenTerm ) ; } (Flags )Attribute flags parent addAttribute (Attribute ) ; flagsFlags ( itemFlags ) ; } (In )IncrementAttribute patt parent addAttribute (IncrementAttribute ) ; setPositionIncrement ( itemIn ) ; } (Payload ) PayloadAttribute parent addAttribute ( PayloadAttribute ) ; setPayload ( new ( item tokenPayload ) ) ; } (StartEnd ) OffsetAttribute offset parent addAttribute ( OffsetAttribute ) ; offset ( item itemEnd ) ; } state parent captureState ( ) ; res states add ( state clone ( ) ) ; parent clearAttributes ( ) ; } } ( ) log ( ) ; } return res ; }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
public String getMessage ( final String code ) { code null ; error = null ; ResourceBundle bundles getBundles ( ) ; for ( bundles ) return bundles i. getString ( code ) ; } ( ) ( error ) error = e ; } } } error null ; ; }<CODESPLIT>An implementation of { @link Parser } s abstract { @link Parser#flatten ( Options String [] boolean ) flatten } method . <p > The following are the rules used by this flatten method . <ol > <li > if <code > stopAtNonOption< / code > is <b > true< / b > then do not burst anymore of <code > arguments< / code > entries just add each successive entry without further processing . Otherwise ignore <code > stopAtNonOption< / code > . < / li > <li > if the current <code > arguments< / code > entry is <b > -- < / b > just add the entry to the list of processed tokens< / li > <li > if the current <code > arguments< / code > entry is <b > - < / b > just add the entry to the list of processed tokens< / li > <li > if the current <code > arguments< / code > entry is two characters in length and the first character is <b > - < / b > then check if this is a valid { @link Option } id . If it is a valid id then add the entry to the list of processed tokens and set the current { @link Option } member . If it is not a valid id and <code > stopAtNonOption< / code > is true then the remaining entries are copied to the list of processed tokens . Otherwise the current entry is ignored . < / li > <li > if the current <code > arguments< / code > entry is more than two characters in length and the first character is <b > - < / b > then we need to burst the entry to determine its constituents . For more information on the bursting algorithm see { @link GroovyInternalPosixParser#burstToken ( String boolean ) burstToken } . < / li > <li > if the current <code > arguments< / code > entry is not handled by any of the previous rules then the entry is added to the list of processed tokens . < / li > < / ol ><CODESPLIT>0
@ Override public Iterable T > findAll ( NonNull Sort sort ) { notNull ( sortsort findAll null ) ; query ( ( ALL with ( sort ; return operation find ( query, information getJavaType ( ), information getCollection ( ) ) ; }<CODESPLIT>Returns all entities sorted by the given options .<CODESPLIT>1
void loadConfigs ( ) throws IOException { loadConfig ( ; loadConfig ( ) ; system loadConfig ( ) ; ( )Fallback ( ( ) )Fallback ( system ( ) ) ; dumpdebugLogMER ) }<CODESPLIT>end of class ConfigSource<CODESPLIT>0
private void appendLine ( final String timeStampStr, final int indentLevel, final String line, final StringBuilder buf ) { buf ( timeStampStr ) ; buf ( ) ; buf ( ClassGraph ( ) ) ; buf ( ) ;ashes = ( indentLevel ) ; for ( ) buf ( ) ; } (ashes ) buf. ( ) ; } buf. ( line ) ; buf. ( ) ; }<CODESPLIT>Add a child log node .<CODESPLIT>0
static public String createMonitor ( String monitorUrl, Node parserInstruction, String modifiesResponse, TECore core ) {Call = monitors ( monitorUrl ) ;Core ( ) ; ( parser )Parser ( ( parser ) ) ;Response ( (Response ) ) ; } log ( CONFIGConfigured monitor test}" ) ; return "" ; }<CODESPLIT>Monitor without parser that doesn t trigger a test<CODESPLIT>0
public void addRelationToResource ( CmsDbContext dbc, CmsResource resource, CmsResource target, CmsRelationType type, boolean importCase ) throws CmsException { ( typeInContent ( ) )IllegalArgumentException ( ( ) (RELATION remove ( resource ( ) ) remove ( ( ) ) ( ( ) ( ) ) ) ) ; } relation new ( resource target type ) ;Driver ( dbc ) createRelation ( dbc dbc ( ) getUuid ( ) relation ) ; ( importCase ) log ( dbc new ( dbc resource ( ) RESOURCEADDRELATION new { relation. getSourcePath ( ) relation. getTargetPath ( ) } ) false ) ; setDateLastModified ( dbc resource ( ) ) ; } }<CODESPLIT>Adds a resource to the given organizational unit . <p ><CODESPLIT>0
public void marshall ( AssociateProductWithPortfolioRequest associateProductWithPortfolioRequest, ProtocolMarshaller protocolMarshaller ) { ( associateWithPortfolio ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( associateWithPortfolio getAcceptLanguage ( ) ACCEPTLANGUAGEBINDING ) ; protocolMarshaller marshall ( associateWithPortfolio getProduct ( )BINDING ) ; protocolMarshaller marshall ( associateWithPortfoliofolio ( ),FIOBINDING ) ; protocolMarshaller marshall ( associateWithPortfolio getSourcePortfolio ( ), SOURCEFIOBINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT><p > To help organize your resources you can assign your own metadata to the resources that you create . Each tag is a key - value pair . < / p ><CODESPLIT>0
public static void swap ( int [ ] intArray1, int array1Index, int [ ] intArray2, int array2Index ) { (Array arrayIndexArray arrayIndex ) hold =Array array ;Array array =Array array ;Array array = hold ; } }<CODESPLIT>Helper method that swaps all the elements of the arrays . This method runs in O ( <code > Math . min ( array1 . length array2 . length< / code > ) time .<CODESPLIT>1
public void marshall ( DeleteUserRequest deleteUserRequest, ProtocolMarshaller protocolMarshaller ) { ( deleteUserRequest ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( deleteUserRequest getUserName ( ), USERBINDING ) ; protocolMarshaller marshall ( deleteUserRequest getAuthenticationType ( ), AUTHBINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
protected void addWebuserCondition ( CmsSelectQuery select, CmsOrganizationalUnit orgUnit, TableAlias users ) {Condition ; ( ( webuserConditionTemplate = %1$s8 AND %1$s ; } webuserConditionTemplate = %1$s8 OR %1$s ; }Condition (Condition users (Flags ( ; select addCondition (Condition ; }<CODESPLIT>Adds a check for the web user condition to an SQL query . <p ><CODESPLIT>1
void add ( LessExtend lessExtend, String [ ] mainSelector ) { (SelectorSelector (media ) ) mainSelector lessExtend getSel ( ) ; } mainSelector Selector merge ( mainSelector lessExtend getSel ( ) ) ; } less ( ) ; ( lessExtendAll ( ) ) Less extend new LessExtend ( main ) ; Selector tokenizers pollLast ( ) init (Selector ) ; do { token ( ) ; ( ) } all add ( token extend ) ; } ( ) tokenizers addLast ( ) ; } exact add (Selector mainSelector ) ; } }<CODESPLIT>Add to the given selectors all possible extends and return the resulting selectors .<CODESPLIT>0
JMFSchema [ ] getEncodingSchemas ( ) throws MessageEncodeFailedException { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ; JMFSchema result ; JMFSchema result ( ( JMFMessage ) headerPartPart ) getSchem ( ) ;MFSchema result = null ; result = result length ; ( payloadPart ) result ( ( JMFMessage ) payloadPartPart ) getSchem ( ) ; resultSize += result length ; } result = newMFSchema result ; System ( result,, result,, result ) ; ( payloadPart ) System ( result,, result, result, result ) ; } } (MF ) (ibmJsObjectgetEncodingSchemasmo this new { new { MfpConstants._MESSAGE headerPart. jmfPart theMessage } new { MfpConstants._MESSAGE payloadPart. jmfPart theMessage } } ) ; ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ;Encode ( ) ; } ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) SibTr ( this tcgetEncodingSchemas ) ; return result ; }<CODESPLIT>Get a list of the JMF schemas needed to decode this message<CODESPLIT>1
public boolean add ( final int value ) { ( capacity ) ( IntHashSet capacity capacity full ) ; } indexHash ( value mask ) ; ( values missing ) ( values value ) return false ; } index ( index ) ; } values index = value ; size ; return true ; }<CODESPLIT>Splits a { @link ClientMessage } into frames of a maximum size .<CODESPLIT>0
private void delete_obj_property ( Database database, String name, String type, String propname ) throws DevFailed { ( ( ) checkAccess ( ) array ; array ; array = propname ; deleteproperty ( database array ; }<CODESPLIT>==========================================================================<CODESPLIT>1
public static int getCtrlOrMetaModifier ( ) {BrowserBrowser (Browser ( ; (BrowserMac ( ) ) return ShortActionKey META ; } return ShortActionKey CTRL ; }<CODESPLIT>Dynamic styles for window .<CODESPLIT>0
public User resolveUser ( final long userId ) throws SQLException {CacheTries mark ( ) ;CacheIf ( userId ; ( ) metricsCache mark ( ) ; return user ; } select ( userId ) ; ( )Cache ( userId ) ; } return user ; } }<CODESPLIT>Resolves a user by username possibly with the internal cache .<CODESPLIT>1
public static String buildCleanedParametersURIRepresentation ( org apache commons httpclient URI uri, SpiderParam HandleParametersOption handleParameters, boolean handleODataParametersVisited ) throws URIException { ( handle ( Handle ) ) return uri toString ( ) ; } ( handleParameters ( HandleParameters ) ) return createBaseUriWithCleanedPath ( uri, handleParameters, handleDataParametersVisited ) ; } ( handleParameters ( HandleParameters ) ) ( createWithClean ( uri handle handle ) ) ; ( uri ( ) ) ; ( ( ) ) ( ) (Query ) ; } return toString ( ) ; } return uri toString ( ) ; }<CODESPLIT>Tells whether or not the given port is the default for the given scheme . <p > <strong > Note : < / strong > Only HTTP and HTTPS schemes are taken into account .<CODESPLIT>0
public int run ( String arg, boolean stdin, boolean force ) throws IOException { OutputStream outputStream null ; InputStream inputStream null ; KeystoreWrapper keystoreWrapper ; ( command ) CREATE ( ( ) ) proceed promptNo (An es keystore already exists Overwrite]" ) ; ( proceed false ) prompt (Exit creating keystore ) ; return 0 ; } } keystorestore new ( ) build ( ) ; outputStream openWrite ( ) ; keystoreWrapper saveKey ( outputStream ) ; return 0 ; LIST ( ( ) ) prompt (ERROR ESH keystore Use command to create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; keystoreWrapperWrapper loadStore ( inputStream ) build ( ) ; ( listEntries ( ) ) prompt ( ) ; } return 0 ; ADD ( ( ) ) prompt (ERROR ESH keystore Use command to create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; keystoreWrapperWrapper loadStore ( inputStream ) build ( ) ; ( keystoreWrapper ( ) force false ) proceed promptNo (Setting already exists Overwrite]" ) ; ( proceed false ) prompt (Exit modifying keystore ) ; return 0 ; } } ( stdin ) data prompt readLine ( ) ; keystoreSecureSetting ( arg data ) ; } data prompt readPassword (Enter value arg ) ; keystore setSecureSetting ( new ( data ) ) ; Arrays fill ( data ( ) ) ; } outputStream openWrite ( ) ; keystoreWrapper saveKey ( outputStream ) ; return 0 ; REMOVE ( ( ) ) prompt (ERROR ESH keystore Use command to create Command CREATE getText ( ) ) ; return 5 ; } inputStream openRead ( ) ; keystoreWrapperWrapper loadStore ( inputStream ) build ( ) ; ( keystoreWrapper ( ) false ) prompt (ERROR Setting in the keystore arg ) ; return 6 ; } keystoreWrapper removeSecureSetting ( arg ) ; outputStream openWrite ( ) ; keystoreWrapper saveKey ( outputStream ) ; return 0 ; default prompt (ERROR command command ( ) ) ; return 7 ; } } ( eh ) prompt (ERROR load keystore file eh ( ) ) ; return 8 ; } ( ) prompt (ERROR load keystore file ( ) ) ; return 9 ; } ( ) prompt (ERROR ( ) ) ; return 10 ; } ( outputStream ) outputStream close ( ) ; } ( inputStream ) inputStream close ( ) ; } } }<CODESPLIT>{<CODESPLIT>0
private boolean updateStreamBlacklist ( Set Tuple2 String, String > > processingBlacklist, Message message, Set String > initialStreamIds ) { ; (Streams ( ) ) ( remove ( ( ) ) ) ; } processingBlacklist add ( ( message ( ( ) ) ; } } return addedStreams ; }<CODESPLIT>Evaluates all pipelines that apply to the given messages based on the current stream routing of the messages .<CODESPLIT>0
protected boolean isFireDrainableByClosing ( FireFactory fireFactory ) { returnhoseReceiverFirehose (hose TimedShFirehoseFirehoseByClosing ( ( ( TimedShFirehose )hose ) getDelegate ( ) ) ) (hoseFirehoseFirehoseByClosing ( ( (Firehose )hose ) getDelegate ( ) ) ) }<CODESPLIT>Is a firehose from this factory drainable by closing it? If so we should drain on stopGracefully rather than abruptly stopping . <p > This is a hack to get around the fact that the Firehose and FirehoseFactory interfaces do not help us do this . <p > Protected for tests .<CODESPLIT>1
public boolean dispatchKeyEvent ( KeyEvent event ) { controller getUnique ( ( ( return controller dispatchKeyEvent ( event ) ; } return false ; }<CODESPLIT>returns controller if a new device is found<CODESPLIT>0
public boolean isDerivation ( Type parent, Type child ) { ( ( return true ; } ( ) Type Nom t = ( Type Nom ) child ; getLink ( ( ; return isDer ( parent, decl getType ( ) ) ; } return false ; } }<CODESPLIT>Check whether one type is a derivation of another . For example in this scenario :<CODESPLIT>1
public void setSelectedClass ( java lang String selectedClass ) { getState ( ( selected selected ; }<CODESPLIT><p > Return the value of the <code > selectedClass< / code > property . < / p > <p > Contents : CSS style class to apply to the rendered label on selected options .<CODESPLIT>0
public static T Pred T attributeIn ( Function T, function, Iterable iterable ) { returnPredicate, ( function, Pred in ( iterable ) ) ; }<CODESPLIT>Creates a predicate which returns true if an attribute selected from an object passed to accept method is contained in the iterable .<CODESPLIT>1
private void validateRequest ( DownloadRequest dreq ) throws ErrorResponseException { path =req ( ) ; ( path ( ResourceCatalogXML ) path ( ) )ResponseException ( DownloadContentResponse ( ) ) ; } }<CODESPLIT>Make sure that it is a valid request . This is also the place to implement the reverse IP lookup<CODESPLIT>1
public AutofitHelper setEnabled ( boolean enabled ) { ( enabled )Enabled = enabled ; ( enabled )TextViewChangedListener (TextWatcher ) ;TextView addOnChangeListener (ChangeListener ) ; autof ( ) ; }TextView removeTextChangedListener (TextWatcher ) ;TextView removeChangeListener (OnChangeListener ) ; setText ( ) ; } } return this ; }<CODESPLIT>Set the enabled state of automatically resizing text .<CODESPLIT>1
public static void checkIfUnmodifiedSince ( final String ifUnmodifiedSince, final Instant modified ) { Instant parseDate ( ifUn ) ; ( ( )After ( ) ) ( ( ) ( ) ) ; } }<CODESPLIT>Check for a conditional operation .<CODESPLIT>1
public void setProgress ( CmsUploadProgessInfo info ) {File = info getCurrentFile ( ) ;File = ; (File ) } currFileIndex = currFile - 1 ; (FileIndex morderedFilenamesToUpload ( ) ) currFileIndex = m_orderedenamesToUpload. size ( ) - 1 ; } } ( mcontentLength ) mcontentLength = info getContentLength ( ) ; }Filename = morderedenamesToUpload (File ) ; contentLength = CmsUploadButton formatBytes ( mcontentLength ) ; fileCount = morderedenamesToUpload ( ) ; readBytes = CmsUploadButton formatBytes ( getBytesRead ( info getPercent ( ) ) ) ; mbar setValue ( info ( ) ) ; ( mstarted ) mstarted = true ; mfileinfo setHTML ( 0 0 ( ) key (UPLOADPROGRESS ) ) ; mfileinfo setHTML ( 0 ( ) key (UPLOADPROGRESSUPLOAD ) ) ; mfileinfo setHTML ( 0 "" ) ; mfileinfo setText ( 0 "" ) ; mfileinfo setText ( "" ) ; mfileinfo setText ( "" ) ; mfileinfoFormatter ( ) setWidth ( 0 ) ; } mfileinfo setText ( 0 currFilename ) ; mfileinfo setText ( ( ) key (UPLOADPROGRESSCURRENTVALUE new (File ) new ( fileCount ) getFileText ( ) ) ) ; mfileinfo setText ( ( ) key (UPLOADPROGRESSUPLOAD readBytes contentLength ) ) ; }<CODESPLIT>Returns the file text . <p ><CODESPLIT>0
public static void escape ( String str, StringBuilder rval ) { for ( str. ( ) ) { char hi = str. ( ) ; if ( hi <=8 hi == hi == ( hi hi <=F ) ( hiF hi <= ) ( ( hi24F Character. isHighSurrogate ( hi ) ) ) ) { rval. append ( String. format ( "\\u04, ( int ) hi ) ) ; } if ( Character. isHighSurrogate ( hi ) ) { char lo = str. ( ++ ) ; c = ( hi 10 ) + lo + (10000 - (xD800 10 ) -DC ) ; rval. append ( String. format ( "\\U08, c ) ) ; } { ( ) { ( "\\ ) ; ; ( "\\ ) ; ; ( "\\t ) ; ; ( "\\ ) ; ; ( "\\ ) ; ; ( "\\\"" ) ; ; ( "\\\\" ) ; ; default : rval. append ( hi ) ; ; } } } }<CODESPLIT>Parses the authority for the pre - parsed given JsonLdUrl .<CODESPLIT>0
public static void sendClose ( ByteBuffer data, WebSocketChannel wsChannel, WebSocketCallback Void callback ) { Close Close ; sendClose ( callback }<CODESPLIT>Sends a complete close message invoking the callback when complete<CODESPLIT>0
public CharacterSet getInverse ( ) { ; n forbiddenCharacters characters ; n characters forbiddenCharacters ; return }<CODESPLIT>Write VCF record with the specified print writer .<CODESPLIT>0
protected boolean readFeatureParameters ( Element node ) { NodeList child = node getChildNodes ( ) ;names = new Vector ( ) ; par = new Vector Vector ( ) ; for (. ( ) ) (. ( ) ) child = ( ) child item ( ) ; value = child getAttribute (value ) ; paras = value split ( ":" ) ; Vector para = new Vector ( ) ; for ( par. ) para add ( Integer parseInt ( paras ) ) ; }names add ( paras ) ; paras add ( para ) ; } } ( ) System. out. println (. ( ) ) ; ( ) ; return false ; } return true ; }<CODESPLIT>Read feature parameters .<CODESPLIT>1
public Node insertBefore ( Node newChild, Node refChild ) throws DOM { ( ; return null ; }<CODESPLIT>Unimplemented . See org . w3c . dom . Node<CODESPLIT>1
public static AuthToken basic ( String username, String password, String realm ) { requireNonNull ( usernameUsername null ) ; requireNonNull ( passwordPassword null ) ; Value map newWith ( ) ; map (CHEME value (basic ) ) ; map put ( PR value ( username ) ) ; map put ( value ( password ) ) ; ( realm ) map put ( value ( realm ) ) ; } return new InternalAuthToken ( map ) ; }<CODESPLIT>The basic authentication scheme using a username and a password .<CODESPLIT>1
private Function Expression, Statement addNodeToPlaceholderMap ( String mapKey, StandaloneNode node ) { return putToMap ( map, placeholder compileTo ( map, node,, ) ) }<CODESPLIT>See go / soy - element - keyed - roots for reasoning on why this is disallowed .<CODESPLIT>0
public void marshall ( MetricDefinition metricDefinition, ProtocolMarshaller protocolMarshaller ) { ( metricDefinition ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( metricDefinition getName ( ), NAMEBINDING ) ; protocolMarshaller marshall ( metricRegex ( ) REGEXBINDING ) ; } ( ) SdkClientException ( marshall. ( ) ) ; } }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>1
static String [ ] split ( URI remoteUri, String suffix, @ Nullable String defaultBranch ) { host = remoteUri getHost ( ) ; ( hostUri getScheme ( ) (file ) ) IllegalArgumentException ( host remote remote ) ; } path = remoteUri getRawPath ( ) ; ( path ) IllegalArgumentException ( path remote remote ) ; } = Pattern compile (." suffix| ) ( path ) ; ( find ( ) ) IllegalArgumentException ( suffix remote path remote ) ; } newRemoteUri ; port = remoteUri getPort ( ) ; ( host ) ( port ) newRemoteUri = remoteUri getScheme ( )://" host port group ( ) ; } newRemoteUri = remoteUri getScheme ( )://" host group ( ) ; } } newRemoteUri = remoteUri getScheme ( )://" group ( ) ; } remotePath ; decoded = URLDecoder decode ( path ( group ( ) length ( ) )UTF ) ; decoded normalizePath ( decoded ) ; remotePath = decoded ; } ( UnsupportedEncodingException ) Error ( ) ; } fragment = remoteUri getFragment ( ) ; remoteBranch = fragment null fragment defaultBranch ; return new String [ ] { newRemoteUri remotePath remoteBranch } ; }<CODESPLIT>Splits the specified remoteUri into : - the actual remote repository URI - the path in the remote repository - the branch name .<CODESPLIT>1
public static List < Class < > > resolveHierarchy ( final Class < > type ) { res = ( ) ; current = type ; while ( Object ( ) ) res add ( ) ; current getSuperclass ( ) ; } return res ; }<CODESPLIT>Assigns base class in scheme for provided model type ( for example to make class vertex type it must extend V ) .<CODESPLIT>0
public void setRefreshing ( boolean refreshing ) { ( refreshRefresh refresh )Refreshing = refreshing ; ; (UsingCustom ) ( mDirection ) getMe ( ) ( ) (SpinnerOffset ) ; TOP ( ) (SpinnerOffset (OriginalOffset ) ) ; } } endTarget = ( int )SpinnerFinalOffset ; } setTargetTopAndBottom ( endTarget mCurrentTargetTop true ) ;Notify = false ; startScaleUpAnimation (RefreshListener ) ; } setRefresh ( refresh false ) ; } }<CODESPLIT>Notify the widget that refresh state has changed . Do not call this when refresh is triggered by a swipe gesture .<CODESPLIT>1
private Field [ ] getAllInstanceFields ( final Object obj ) { fieldsFieldsByClass ( obj ( ; ( fields ) Reflection getAllFields ( obj excludeStatic excludeTransient ) ; fields fieldList ( fieldList ( ) ) ; instanceFieldsByClass ( obj ( ) fields ) ; } return fields ; }<CODESPLIT>Visits all the keys and entries of the given map .<CODESPLIT>0
private Map < VectorLayer, Filter > dtoAttributeCriterionToFilters ( AttributeCriterion criterion ) throws GeomajasException { Filter filters new Filter ( ) ; Filter f ; Vector = configuration ( getServer ( ) ) ; ( ) Geom ( criterion getServer ( ) ) ; } operator = criterion getOperator ( ) ; (LIKE ( operator toUpperCase ( ) ) ) filterService createLikeFilter ( criterion getAttribute ( ), criterion ( ) ) ; } ( ( operator toUpperCase ( ) )BEFORE ( operator toUpperCase ( ) )AFTER ( operator toUpperCase ( ) ) ) filterService parseFilter ( criterion toString ( ) ) ; } filterService createCompareFilter ( criterion getAttribute ( ), criterion getOperator ( ), criterion ( ) ) ; } filters put (, ) ; return filters ; }<CODESPLIT>Prune impossible combinations . ( eg . If And criteria filter different layers they will return nothing so they are pruned ) .<CODESPLIT>0
public Session createMailSession ( final String host, final int port, final String username, final String password ) { transport generateProperties ( ; ( transport propertyName ( ; ( transport propertyName ( ( ; ( ) ( transport propertyName ( username ) ; } ( ) ( transport propertyNameAuthenticate ( ) ) ; return Session getInstance ( props, ( ) Override protected PasswordAuthentication getPasswordAuthentication ( ) { return PasswordAuthentication ( username, password ) ; } } ) ; } return Session getInstance ( props ) ; } }<CODESPLIT>Actually instantiates and configures the { @link Session } instance . Delegates resolving transport protocol specific properties to the { @link #transportStrategy } in two ways : <ol > <li > request an initial property list which the strategy may pre - populate< / li > <li > by requesting the property names according to the respective transport protocol it handles ( for the host property name it would be <em > mail . smtp . host < / em > for SMTP and <em > mail . smtps . host < / em > for SMTPS ) < / li > < / ol ><CODESPLIT>1
private PBXObjectRef addProjectConfigurationList ( final Map objects, final String baseDir, final List < DependencyDef > dependencies, final CommandLineCompilerConfiguration compilerConfig, final CommandLineLinkerConfiguration linkerConfig ) { configurations = new ( ) ;Settings = new ( ) ;Settings put (GCCWARNABOUTRETURN,YES ) ;Settings put (GCCWARNUNUSEDVARIABLE,YES ) ;Settings put (PREBINDING, ) ;Settings put (SDKROOT,DeveloperSDKMacOSsdk ) ;XObjectConfig = createXBuildConfiguration (DebugSettings ) ; objects put (Config ( ),Config getProperties ( ) ) ; configurations add (Config ) ; releaseSettings = new ( ) ; releaseSettings put (GCCWARNABOUTRETURN,YES ) ; releaseSettings put (GCCWARNUNUSEDVARIABLE,YES ) ; releaseSettings put (PREBINDING, ) ; releaseSettings put (SDKROOT,DeveloperSDKMacOSsdk ) ;XObject releaseConfig = createXBuildConfiguration (Release releaseSettings ) ; objects put ( releaseConfig ( ), releaseConfig getProperties ( ) ) ; configurations add ( releaseConfig ) ;XObject configurationList = createXConfigurationList ( configurations ) ; projectConfigurationListProperties = configurationList getProperties ( ) ; projectConfigurationListProperties put (defaultConfigurationIsVisible,0 ) ; projectConfigurationListProperties put (defaultConfiguration,Debug ) ; objects put ( configurationList ( ), configurationList getProperties ( ) ) ; includeDirs = compilerConfigPath ( ) ; ( includeDirs ) includePaths = new ( ) ; includePathMap = new ( ) ; for ( includeDir includeDirs ) (System ( include ) ) absPath = includeDir ( ) ; ( includeMap ( absPath ) ) ( absPath (usr ) ) includePaths add ( toUnixPath ( absPath ) ) ; } = toUnixPath ( getRelativePath ( baseDir includeDir ) ) ; includePaths add ( relPath ) ; } includePathMap put ( absPath, absPath ) ; } } } includePaths. add (ed ) ;Settings put (HEADERSEARCH, includePaths ) ; releaseSettings put (HEADERSEARCH, includePaths ) ; } preArgs = compilerConfig getPreArguments ( ) ; defines = new ( ) ; for ( pre preArgs ) ( pre ( ) ) add ( pre ( ) ) ; } } ( ( ) ) add (inherit ) ;Settings put (GCCPREDEFINITION, ) ; releaseSettings put (GCCPREDEFINITION, ) ; } ( linker ) librarySearchMap = new ( ) ; librarySearchPaths = new ( ) ; otherLdFlags = new ( ) ; linkerArgs = linkerConfig getEndArguments ( ) ; for ( linker linkerArgs ) ( linker ( ) ) libDir = linker ( ) ; ( librarySearchMap ( lib ) ) ( lib (usr ) ) librarySearchPaths add ( toUnixPath ( getRelativePath ( baseDir new ( libDir ) ) ) ) ; } librarySearchMap put ( libDir, libDir ) ; } } ( linker ( ) ) lib = linker ( ) ; = false ; for ( dependencies ) ( lib ( dependency ( ) ) ) dependencyFile = dependency getFile ( ) ; ( dependencyFile File ( dependencyFile ( ) ) ( ) ) = ; } } } ( ) otherLdFlags add ( linker ) ; } } }Settings put (BRARYSEARCH, librarySearchPaths ) ;Settings put (OTHERL, otherLdFlags ) ; releaseSettings put (BRARYSEARCH, librarySearchPaths ) ; releaseSettings put (OTHERL, otherLdFlags ) ; } return configurationList ; }<CODESPLIT>Add project configuration list .<CODESPLIT>1
@ Override public ResultSet getTablePrivileges ( String catalog, String schemaPattern, String tableNamePattern ) throws SQLException { checkClosed ( ) ; VoltTabletable = new VoltTable ( new (TABLECAT Volt STRING ) new (TABLES Volt STRING ) new (TABLE Volt STRING ) new (GR Volt STRING ) new (GRANTEE Volt STRING ) new (PRILEGE Volt STRING ) new Column (GR Volt STRING ) ) ; JDBC4ResultSet res = new JDBC4ResultSet ( thisCatalogtable ) ; return res ; }<CODESPLIT>Retrieves a description of the access rights for each table available in a catalog .<CODESPLIT>1
public Observable StorageAccount getStorageAccountAsync ( String, String accountName, String storage ) { return getStorageWithServiceResponseAsync (,, ) map ( ServiceResponse, ( ) Override public StorageAccount ( ServiceResponse StorageAccount response ) { return body ( ) ; } } ; }<CODESPLIT>Gets the specified Azure Storage account linked to the given Data Lake Analytics account .<CODESPLIT>1
private static double sinQ ( double xa, double xb ) { ( ) ( ( xa ) ) ; epsilon xaS ; sint =TABLE ; sint =TABLE ; =OSTABLE ; =OSTABLE ; double sinA = epsilon ;B poly ( epsilon ) ; = ; = ( epsilon ) ; = HEX ; double temp2 = ( sinA temp ) - temp ; sin sin ; sinA = temp2 ; double result ; double a = 0 ; double b = 0 ; double t = sintA ; double c = a t ; ( a ) ; a = c ; b = b d ; t = costA * sinA ; c = a t ; ( a ) ; a = c ; b = b d ; b = b sintA * cosB costA * sinB ; b = b sintB costB * sinA sintB * cosB costB * sinB ; ( ) t = ( ( costA costB ) * ( cosA cosB ) - ( sintA sintB ) * ( sinA sinB ) ) * ; c = a t ; ( a ) ; a = c ; b = b d ; } result = a b ; return result ; }<CODESPLIT>Compute sine over the first quadrant ( 0 < x < pi / 2 ) . Use combination of table lookup and rational polynomial expansion .<CODESPLIT>1
public void setNumExecutors ( @ Nonnegative int n ) throws IOException, IllegalArgumentException { ( ) IllegalArgumentException ( field executors ) ; } ( thisExecutors ) this. numExecutors = n ; updateList ( ) ; save ( ) ; } }<CODESPLIT>{ @inheritDoc } .<CODESPLIT>0
private static boolean classNameMatchesFileName ( ClassSymbol c, Env AttrContext env ) { returnfileCompatible ( ( ),FileObject SOURCE ) }<CODESPLIT>Does class have the same name as the file it appears in?<CODESPLIT>1
@ XmlElement ( namenextPageLink )Property ( valuenextPageLink )Property ( value next pagination link, position ) publicLinkDto getNextPageLink ( ) }<CODESPLIT>Returns the next pagination link .<CODESPLIT>1
@ Nonnull public static Homoglyph build ( @ Nonnull @ WillClose final Reader aReader ) throws IOException { ValueEnforcer notNull ( aReader,reader ) ; ( a ( a ) )CommonsList IntSet aList = newArrayList ( ) ; s ; while ( (BR ( ) ) ) sLine sLine trim ( ) ; ( s ( "#" ) s ( ) ) ; IntSet aSet = new IntSet ( s length ( ) ) ; for (Explo ( ) ) =Parser ( s 16 ) ; ( )Set add ( ) ; } aList add ( aSet ) ; } return new Homog ( aList ) ; } }<CODESPLIT>Consumes the supplied Reader and uses it to construct a populated Homoglyph object .<CODESPLIT>1
private boolean hasNullifiedFK ( FieldDescriptor [ ] fkFieldDescriptors, Object [ ] fkValues ) { result ; ( fkValues ) ( pb serviceBroker ( )Null ( fkDescriptors fkValues ) ) result = false ; } } return result ; }<CODESPLIT>to avoid creation of unmaterializable proxies<CODESPLIT>1
public HistoricDate getBeginOfYear ( HistoricEra era, int yearOfEra ) { Hist new = this getNewStrategy ( ) new ( era year ) ; ( this isValid ( ) ) Plain date = this convert ( new ) ; Hist preferred = this eraPreference getPre ( new date ) ; ( preferredEra era ) = preferred year ( new getE ( ) new getYear ( ) ) ; new = Hist of ( preferred new ( ) newYear getDayOfMonth ( ) ) ; } return newYear ; } IllegalArgumentException ( determine New Year era ) ; } }<CODESPLIT>/ * [ deutsch ] <p > Determines the date of New Year . < / p ><CODESPLIT>1
protected static void checkNotNull ( Object [ ] array ) { checkNotNull ( ( ( checkNotNull ( ; } }<CODESPLIT>Validate the specified arguments .<CODESPLIT>1
private static String getExtentOfParticipationMention ( LinkedList < Term > eventTermList, LinkedList < Term > roleTermList, processNAFVariables vars ) { eventWordList getWListByTermsFromList ( eventTermList vars ) ; roleWordList getWListByTermsFromList ( roleTermList vars ) ; mergedList new ( ) ; ( eventList ( ) ( ) ) ;Role (List ( ) ( ) ) ; LinkedList < Wf > firstWL secondWL ; (Event ) firstWL = eventWordList ; secondWL = roleWordList ; } firstWL = roleWordList ; secondWL = eventWordList ; } ( ) ( ( ) )WordList add ( ) ; } } ( second ) ( ( ) )WordList add ( ) ; } } extent new ( ) ; ( ) extent ( ( ) ) ; }Extent extent toString ( ) ; return sExtent. substring ( 0, sExtent. length ( ) - 1 ) ; }<CODESPLIT>/ * similar to generateTheMIdAndSetID () but specific for ParticipationMention<CODESPLIT>1
public EnvironmentConfig setEnvMonitorTxnsExpirationTimeout ( final int timeout ) { ( timeout timeout )Setting (Transaction timeout ) ; } setSetting ( ENVTIMEOUT timeout ) ; ( timeout timeoutTxnsCheckFreq ( ) ) setEnvMonitorTxnsCheck ( timeout ) ; } return this ; }<CODESPLIT>Sets the maximum size of page of B + Tree . Default value is { @code 128 } . Only sizes in the range [ 16 .. 1024 ] are accepted . <p > Mutable at runtime : yes<CODESPLIT>0
public static void addTypeMapper ( Class < > clz, Class < > mapper ) { synchronized ( classMapper ) LinkedHashSetMapper ( clz ) ; ( ) new LinkedHashSet ( ) ;Mapper put ( clz ) ; } add ( mapper ) ; } }<CODESPLIT>Field type convertor for all classes<CODESPLIT>1
public static DocumentBuilder newDocumentBuilder ( final DocumentBuilderFactory factory ) { Document builder factory newDocument ( ) ; return builder ; } ( )CreateInstance (Builder ( ) ) ; } }<CODESPLIT>Parse the given XML string and return the root Element This uses the document builder associated with the current thread .<CODESPLIT>0
public synchronized void clear ( ) { ( valid ) ( ) ; } buf clear ( ) ; position ( ) truncate ( ) force ( true ) ; close ( ) ; open ( ) ; } ( ) ( clear ) } }<CODESPLIT>Read value from file<CODESPLIT>0
void sendMigrationEvent ( final MigrationStatus status ) { ( ) ;Engine nodeEngine getNodeEngine ( ) ; Member localMember nodeEngine getLocalMember ( ) ; Migration event new Migration ( localMember status ) ;Service eventService nodeEngine getEventService ( ) ; registrations eventServiceRegistr ( SERVICEEVENTPIC ) ; eventService publishEvent ( SERVICE registrations event partitionId ) ; }<CODESPLIT>Sends a {<CODESPLIT>1
private void processConstraintViolation ( final Set < ConstraintViolation < Object > > violations, final CsvBindingErrors bindingErrors, final ValidationContext < Object > validationContext ) { (Violation violations ) field violation ( ) toString ( ) ; cd violation ( ) ; errorCodes determine ( cd ) ; errorVars createVariableFor ( cd ) ; (Csv ( field validation ) ) CsvError fieldError bindingErrorsError ( field ) ; ( field fieldProcessingFailure ( ) ) } column validation getBean ( ) getColumn ( field ) ( ) ; errorVars (Number validationsv ( ) getLineNumber ( ) ) ; errorVars (Number validationsv ( )Number ( ) ) ; errorVars (columnNumber columnMapping getNumber ( ) ) ; errorVars (label columnMapping getLabel ( ) ) ; errorVars computeIfAbsent ( key columnMapping getFormatter ( ) ) ; violationInvalid ( ) ; errorVars computeIfAbsent (valid key fieldValue ) ; default determine ( errorVars violation ) ; bindingErrors rejectValue ( field columnMapping getField ( ) ( ) errorCodes errorVars defaultMessage ) ; } bindingErrors reject ( errorCodes errorVars violation ( ) ) ; } } }<CODESPLIT>BeanValidationの検証結果をSheet用のエラーに変換する<CODESPLIT>1
public static void writeToFile ( @ NonNull File file, @ NonNull String content ) throws IOException { writer new ( new FileOutputStream ( file ) ) ; writer write ( content ) ; writer flush ( ) ; } ( ) Log ( ( ) ) } writer close ( ) ; } ( ) Log ( ( ) ) ; } } }<CODESPLIT>Delete file .<CODESPLIT>0
public static String extractText ( String html ) { replace (RemoveAllTags ( ; unescapeHtml ( ; return html ; }<CODESPLIT>Extracts the title of the page .<CODESPLIT>0
public static Rule getRule ( final String inequalitySymbol, final String field, final String value ) { ( ( return LevelInequalRule getRule ( inequal, ) ; } ( ( return TimestampInequalRule getRule ( inequalSymbol, ) ; } return InequalRule ( inequalSymbol, field, ) ; } }<CODESPLIT>Create new instance from top two elements on stack .<CODESPLIT>0
public void createEquiAngle ( float radius, int numRotations, int numSamples, float jitter, Callback2d callback ) { spacing = radius /Rotations ; for ( sample sampleSamples sample ) angle =0 ( ) ( sampleRotations ) /Samples ; r = radius sample / (Samples ) ( rnd nextFloat ( )00 ) spacing jitter ; = ( )ro ( angle5 ( ) ) r ; = ( ).ro ( angle ) r ; callback. onNewSample ( x, ) ; } }<CODESPLIT>Create <code > numSamples< / code > number of samples on a spiral with maximum radius <code > radius< / code > around the center using <code > numRotations< / code > number of rotations along the spiral and call the given <code > callback< / code > for each sample generated . <p > The generated sample points are distributed with equal angle differences around the spiral so they concentrate towards the center . <p > Additionally the radius of each sample point is jittered by the given <code > jitter< / code > factor .<CODESPLIT>1
private void readObject ( ObjectInputStream in ) throws IOException, ClassNotFoundException { in defaultReadObject ( ) ; severity =_INFO ; summary ; ; in readInt ( ) ; ( ( ) ) severity = FacesMessage._INFO ; } (WARN ( ) ) severity = FacesMessage._WARN ; } (ERROR ( ) ) severity = FacesMessage._ERROR ; } (FATAL ( ) ) severity = FacesMessage._FATAL ; } summary ( ) in readObject ( ) ; detail ( ) in readObject ( ) ; rendered ( Boolean ) in readObject ( ) ; }<CODESPLIT><p > Reconstruct {<CODESPLIT>1
public void waitForLogMessage ( final String logSearchString, int waitTime ) throws TimeoutException { WaitFor waitFor ( ( ( ; }<CODESPLIT>Stop and wait till given string will show in container output .<CODESPLIT>1
public Query from ( final Collection Expression fromColumns ) { ( return this ; } thisColumns (Columns ; return this ; }<CODESPLIT>Adds the FROM columns .<CODESPLIT>1
public void getElementSettingsConfig ( final String clientId, final String containerId, final I_SimpleCallback CmsElementSettingsConfig callback ) { CmsRpcAction CmsElementSettingsConfig action new CmsRpcAction CmsElementSettingsConfig ( ) { Override public void execute ( ) { start ( ( ( ( ( ( ( } Override protected void onResponse ( CmsElementSettingsConfig result ) { ( callback execute ( } stop ( false } } ; execute ( ; }<CODESPLIT>Requests the element settings config data for a container element specified by the client id . The data will be provided to the given call - back function . <p ><CODESPLIT>1
protected synchronized void copy ( Writable other ) { ( )OutputBuffer newOutputBuffer ( ) ; other write ( out ) ;Buffer in newBuffer ( ) ; in reset ( out ( ) out ( ) ) ; readFields ( in ) ; } ( ) IllegalArgumentException (map copied ( ) ) ; } } IllegalArgumentException (source map ) ; } }<CODESPLIT>Used by child copy constructors .<CODESPLIT>1
public Cell, width ( Value C, width ) { min width ; pref width ; width ; return }<CODESPLIT>Sets the minWidth prefWidth and maxWidth to the specified value .<CODESPLIT>0
public void createReference ( Reference reference ) throws GreenPepperServerException { start ( ) ; beginTransaction ( ) ; Repository repository loadRepository ( reference getSpec ( ) getRepository ( ) ( ) ) ; documentDao createReference ( reference ) ;Service commitTransaction ( ) ; (Created Reference ( ) ( ) ( ) ( ) ) } ( )Service rollbackTransaction ( ) ; handleException ( REFERENCECREATE ) ; }Service closeSession ( ) ; } }<CODESPLIT>{<CODESPLIT>0
public static Document buildPDFDocument ( com. snowtide. pdf. Document pdf, LucenePDFConfiguration config ) throws IOException { StringWriter sb = new StringWriter ( ) ; pdf pipe ( new Output ( sb ) ) ; Document doc = new Document ( ) ;INTERFACE addField ( doc, config getBodyTextFieldName ( ), toString ( ), config storeBodyText ( ), config indexBodyText ( ), config tokenizeBodyText ( ) ) ; for ( metadata pdf getAttributeMap ( ) ( ) ) docPropName = metadata ( ) ; fieldName = config getMetadataFieldMapping ( docPropName ) ; ( fieldName ) ( config copyAllPDFMetadata ( ) ) fieldName = docPropName ; } } } value = metadata ( ) ; value ; ( value ) (DEBUG ) (Null document property value name doc pdf ( ) ) ; } ( value String ) ( doc ( com pdf ) doc ( com pdf ) ) valueStr DateTools dateToString ( PDFParser parseDateString ( ( ) value ), DateTools ResolutionSECOND ) ; } ( ) log (PDF date string parsed into javaDate instance pdf ( ) ) ; valueStr = ( String ) value ; } } valueStr = ( String ) value ; } } ( value Number ) valueStr value toString ( ) ; } (DEBUG ) ( document property value type value ( ) ( ) name doc pdf ( ) ) ; }INTERFACE addField ( doc, fieldName, valueStr, config storeMetadata ( ), config indexMetadata ( ), config tokenizeMetadata ( ) ) ; } return doc ; }<CODESPLIT>Creates a new Lucene Document instance using the PDF text and metadata provided by the PDFxStream Document using a default {<CODESPLIT>0
protected void removeTargetListeners ( Component comp ) { comp removeMouseListener (Listener ) ; comp removeMouseMotionListener (Listener ) ; ( ) Container cont = ( Container ) comp ; removeListener (childListener ) ; ( ( ) ) removeListeners ( ( ) ) ; } } }<CODESPLIT>Check to see if we need to do component - level cursor setting and take care of it if needed .<CODESPLIT>0
public ObservableAssignment deleteByIdAsync ( String policyAssignmentId ) { return deleteByIdWithServiceResponseAsync ( ) map ( ServiceResponse, ( ) Override public PolicyAssignment ( ServiceResponse PolicyAssignment response ) { return body ( ) ; } } ; }<CODESPLIT>Deletes a policy assignment by ID . When providing a scope for the assigment use / subscriptions / { subscription - id } / for subscriptions / subscriptions / { subscription - id } / resourceGroups / { resource - group - name } for resource groups and / subscriptions / { subscription - id } / resourceGroups / { resource - group - name } / providers / { resource - provider - namespace } / { resource - type } / { resource - name } for resources .<CODESPLIT>0
private void getFights ( Document doc, Event event ) {. info (Gettingights event #{}]", event getSUrl ( ), event getName ( ) ) ; SherBaseObject sEvent = new SherBaseObject ( ) ; sEvent setName ( event ( ) ) ; sEvent setShUrl ( eventherUrl ( ) ) ; List F fights = new ArrayList ( ) ; Elements mainFElement = doc select (contentevent ) ; Elements fters = mainFElement select (h a ) ; SherBaseObject mainFighter = new SherBaseObject ( ) ; main =ters ( ) ; main setShUrl ( main (href ) ) ; main setName ( main select (spanname ) html ( ) ) ; SherBaseObject mainFighter = new SherBaseObject ( ) ; main =ters ( ) ; main setShUrl ( main (href ) ) ; main setName ( main select (spanname ) html ( ) ) ; F mainF = new F ( ) ; main setEvent ( sEvent ) ; main setF ( main ) ; main setF ( main ) ; main setResult ( ParserResult ( main first ( ) ) ) ; Elements main = mainFElement select ( ) ; ( main ( ) ) main set ( main ( ) html ( ) replaceAll ( "" ) trim ( ) ) ; main setRound ( ( main ( ) html ( ) replaceAll ( "" ) trim ( ) ) ) ; main setTime ( main ( ) html ( ) replaceAll ( "" ) trim ( ) ) ; } main setDate ( event ( ) ) ; fights add ( mainF ) ;. info ( added {}" mainFight ) ;. info ( fights, fights size ( ) ) ; Elements t = doc select (eventmatch table tr ) ; fights addAll ( parseEventFights ( t, event ) ) ; event setFights (ights ) ; }<CODESPLIT>parses an event from a jsoup document<CODESPLIT>0
public PropertyDescriptor [ ] getTeaBeanPropertyDescriptors ( Class < > beanClass ) { ( beanClass ) return NO_PROPERTIES ; } PropertyDescriptor properties null ; PropertyDescriptor allProps null ; allProps Bean getAllProperties ( new Generic ( beanClass ) ) ; } ( ) return NO_PROPERTIES ; } Collection PropertyDescriptor cleanProps new PropertyDescriptor ( allProps ( ) ) ; Map, PropertyDescriptor allProps ( ) ( ) ; ( ( ) ) Map, PropertyDescriptor ( ) ; name ( ) ; PropertyDescriptor desc ( ) ; ( name name ( )class ( name ) ) } ( desc ) KeyedPropertyDescriptor keyed = ( KeyedPropertyDescriptor ) desc ; type = keyedPropertyType ( ) getRawType ( ) getType ( ) ; desc = new ArrayProperty ( beanClass type ) ; } ( ) } } ( beanClass isArray ( ) desc getRead ( ) ) } cleanProps add ( desc ) ; } properties = cleanProps ( new PropertyDescriptor cleanProps ( ) ) ; sortPropertyDescriptors ( properties ) ; return properties ; }<CODESPLIT>A function that returns an array of all the available properties on a given class . <p > <b > NOTE : < / b > If possible the results of this method should be cached by the caller .<CODESPLIT>1
@ Override public synchronized void serverStopping ( ) { ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr ( tc,serverStopping,generate in progress generateInProgress ) ; } serverStopping = ; ( generate ) sleep ( 500 ) ; } ( ) = ; } } ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ) Tr exit ( tc,serverStopping ) ; } }<CODESPLIT>/ * ( non - Javadoc )<CODESPLIT>1
void flattenToSubMessageBuffer ( ByteBuffer buf ) throws IOException { (items null ) ; assert (items isEmpty ( ) ) ; buf put ( VoltDbMessageFactory FRAGMENT ) ; super flattenToBuffer ( buf ) ; short nInputDepIds = 0 ; short nOutputDepIds = 0 ; short nUnplanned = 0 ; for ( Fragment mitems ) ( iteminput )Ids ; } ( itemoutput )Ids ; } ( itemfragment ) ; } } buf putShort ( ( short )items size ( ) ) ; buf putShort (Unanned ) ; buf put (isFinal ( ) : ( ) ) ; buf put (taskType ) ; buf put (emptyForRestart ( ) : ( ) ) ; buf put (execOnPreviousLeader ( ) : ( ) ) ; buf put (OutputIds ( ) : ( ) ) ; buf put (InputIds ( ) : ( ) ) ; (ToLoad ) buf putShort ( ( short )ToLoad ) ; buf put (NameToLoad ) ; } buf putShort ( ( short ) ) ; } buf put (FragmentStatsRecording ( ) : ( ) ) ; buf put (coordinatorTask ( ) : ( ) ) ; buf put (Part ( ) : ( ) ) ; buf putLong (restartTimestamp ) ; buf putLong (lastSpUniqueId ) ; for ( Fragment mitems ) buf put ( itemplanHash ) ; } for ( Fragment mitems ) ( item ) buf putShort ( ( short ) ) ; } assert ( itemName Short ) ; buf putShort ( ( short ) itemName ) ; buf put ( itemName ) ; } } for ( Fragment mitems ) buf putInt ( itemparameterSet remaining ( ) ) ; buf put ( itemparameterSet asReadOnlyBuffer ( ) ) ; } (OutputIds ) for ( Fragment mitems ) buf putInt ( itemoutput ) ; } } (InputIds ) for ( Fragment mitems ) ( iteminput ) buf putShort ( ( short ) ) ; } buf putShort ( ( short ) ) ; buf putInt ( iteminput ) ; } } } (pro ) buf putShort ( ( short ) ) ; } assert (procedureName Short ) ; buf putShort ( ( short )procedureName ) ; buf put (procedureName ) ; } buf putInt (currentBatchIndex ) ; (batchTimeout BatchTimeoutOverrideTIMEOUT ) buf put ( BatchTimeoutOverrideType NOOVERRIDEBATCHTIMEOUT ( ) ) ; } buf put ( BatchTimeoutOverrideType HASOVERRIDEBATCHTIMEOUT ( ) ) ; buf putInt (batchTimeout ) ; } buf putShort ( ( short )involvedPartitions size ( ) ) ; for ( mPartitions ) buf putInt ( pid ) ; } (initiateBuffer ) ByteBuffer dupinitiateTaskBuffer duplicate ( ) ; buf putInt ( dup remaining ( ) ) ; buf put ( dup ) ; } buf putInt ( ) ; } for ( short mitems ( ) ) Fragment = mitems ( index ) ; ( itemfragment ) buf putShort ( index ) ; buf putInt ( itemfragmentPlan ) ; buf put ( itemfragmentPlan ) ; ( itemstmtText null ) ; buf putInt ( itemText ) ; buf put ( itemText ) ; } } }<CODESPLIT>/ * Serialization Format [ description : type : byte count ]<CODESPLIT>0
public readRow ( BufferedReader bufferedReader, ParseError parseError ) ParseException, IOException { check ; ( return null } return process (, bufferedReader, parseError, getLineNumber ( bufferedReader ) ) } }<CODESPLIT>Read in all of the entities in the reader passed in but without the header .<CODESPLIT>0
private int transformToRTF ( ElemTemplateElement templateParent, DTM dtmFrag ) throws TransformerException { XPathContext =_context ; ContentHandlerHandlerHandler ( ) ; ; SerializationHandler savedRTreeHandler = this._izationHandler ;XML ( ) ; ( ) ; ( ) ;_izationHandler = h ; SerializationHandler rth =_izationHandler ; start ( ) ; flushPending ( ) ; executeChildTemplates ( templateParent true ) ; flushPending ( ) ;Fragment ( ) ; } end ( ) ; } } ( ) ( ) ; } this._izationHandler = savedRTreeHandler ; } return resultFragment ; }<CODESPLIT>Take the contents of a template element process it and convert it to a string .<CODESPLIT>0
public static void encodeLength ( ByteArrayOutputStream out, int length ) { entering ( new { out length } ) ; byteCount ; encoded ; do { encodedLength 8 ; encodedLength ( ) ( ) ; length 7 ; byteCount ; } ( ) do { encodedByte ( ) ( encodedLength ) ; encodedLength 8 ; ( byteCount ) encodedByte ( byte ) 0 ; } out write ( encodedByte ) ; } ( byteCount ) }<CODESPLIT>/ * Length - bytes are written out in order from most to least significant but are computed most efficiently ( using bit shifts ) from least to most significant . An integer serves as a temporary storage which is then written out in reversed order .<CODESPLIT>1
public static synchronized PingManager getInstanceFor ( XMPPConnection connection ) { ( connection ; ( ping ) ping Ping ( connection ) ; ( connection ping ) ; } return pingManager ; }<CODESPLIT>Gets the account registration info from the server . @throws XMPPErrorException @throws NoResponseException @throws NotConnectedException @throws InterruptedException<CODESPLIT>0
@ Override public List dynamicQuery ( DynamicQuery dynamicQuery ) { return findWithDynamic (Query ) }<CODESPLIT>Returns the number of rows matching the dynamic query .<CODESPLIT>0
public void write ( String s, int off, int len ) throws IOException { ( writer ) writer write ( ) ; } ensureOpen ( ) ;Buffer ( ( ) ) ; nextChar } }<CODESPLIT>Write a portion of a String .<CODESPLIT>1
public void concat ( String trg, String ] src, boolean restricted ) IOException { restricted }<CODESPLIT>{<CODESPLIT>0
@ Override public ExecuteProvisionedProductServiceAction executeProvisionedProductServiceAction ( ExecuteProvisionedProductServiceAction request ) beforeClientExecutionExecuteProvisionedProductServiceAction ( request<CODESPLIT><p > Executes a self - service action against a provisioned product . < / p ><CODESPLIT>1
private T getWrappedPublisher ( Publisher flexiblePublisher, Class < T > type ) { ( ( flexPublisherPublisher ) ) IllegalArgumentException ( ( ( ) ) ) ; } ConditionalPublisher conditions = ( ( FPublisher )Publisher ) getPublish ( ) ; for ( Conditional condition conditions ) ( type isInstance ( condition getPublish ( ) ) ) return type. cast ( condition. getPublisher ( ) ) ; } } return null ; }<CODESPLIT>Gets the publisher wrapped by the specofoed FlexiblePublisher .<CODESPLIT>1
public IterableContact queryByUpdatedDate ( Object parent, java Date updatedDate ) { return queryBy ( parentContact UPDATEDATE ( ) ) }<CODESPLIT>query - by method for field updatedDate<CODESPLIT>1
static boolean isGetOrSetKey ( Node node ) { ( node ( ) ) { GETTERDEFTTERDEF return true ;PROP return node getBooleanProp (PROPTTER ) node getBooleanProp ( COMPPROPTTER ) ; default : ; } return false ; }<CODESPLIT>Determines whether a node represents an object literal get or set key ( e . g . key1 in { get key1 () {} set key2 ( a ) {} ) .<CODESPLIT>1
private boolean isCtFieldACollection ( CtField ctField ) { returnField getType ( ) equals ( ( Collection getName ( ) ) )Field getType ( ) equals ( ( getName ( ) ) )Field getType ( ) equals ( ( Set getName ( ) ) ) ; } ( ( return false ; } }<CODESPLIT>Add Method to ConstPool . If method was not in the ConstPool will add and return index otherwise will return index of already existing entry of constpool<CODESPLIT>0
public static void readable ( final File path, final String message ) throws IllegalArgumentException { ( message ( ( ( ) } }<CODESPLIT>FIXME me animal sniffer this is 1 . 6 API only<CODESPLIT>0
@ Override public ModifyEvent modifyEvent ( ModifyEvent request ) { request beforeClientExecution request executeModify ( request }<CODESPLIT><p > Modifies the replication instance to apply new settings . You can change one or more parameters by specifying these parameters and the new values in the request . < / p > <p > Some settings are applied during the maintenance window . < / p > <p / ><CODESPLIT>0
public java util List InventoryDeletionStatusItem getInventoryDeletions ( ) { (Delet inventoryDelet com amazonaws internal SdkInternalListDeletion ( ; } return inventoryDeletions ; }<CODESPLIT><p > A list of status items for deleted inventory . < / p ><CODESPLIT>0
public static boolean validateServiceName ( Configuration conf, String nameServiceId ) { Collection namesIds = DFSServiceIds ( conf ) ; ( namesIds namesIds isEmpty ( ) ) ( name ) System.. (Need input namesvice id ) ; return false ; } ( namesIds ( name ) ) System.. ( namesvice id nameServiceId ) ; return false ; } } ( name ) System.. ( namesvice id nameServiceId ) ; return false ; } return true ; }<CODESPLIT>Valide if the input service name is valid<CODESPLIT>1
@ Override public OUTPUT newInstance ( Map String INPUT > inputMap ) throws FAILURE { builder ( ) ( ( ) ( ) ) (new<String unsupported ) ; ( builder ( ) ) ; }<CODESPLIT><p > <b > Unsupported< / b > . Override to provide an implementation . < / p ><CODESPLIT>1
long getProposedEpoch ( ) throws IOException {Epoch = FileUtils readLongFromFile ( this fProEpoch ) ; return pEpoch ; } ( ). (File initialize acknowled epoch ) ; return - 1 ; } ( ). ( access acknowled epoch ) ; ; } }<CODESPLIT>Gets the last proposed epoch .<CODESPLIT>1
@ SuppressWarnings (WeAccess ) public ParameterizableRequest Map String, Object >, AuthenticationException > delegation ( ) { urlUrl parse (0Url ( ) ) newBuilder ( ) addPath ( DE ) build ( ) ; parameters newBuilder ( ) ( ( ) ) (JWT ) ( ) ; return factory rawPOST ( url, client, gson, authErrorBuilder ) addParameters ( parameters ) ; }<CODESPLIT>Performs a custom <a href = https : // auth0 . com / docs / api / authentication#delegation > delegation< / a > request that will yield a delegation token . Example usage : <pre > { @code client . delegation () . addParameter ( api_type firebase ) . start ( new BaseCallback<Map<String Object >> () { { @literal } Override public void onSuccess ( Map<String Object > payload ) {}<CODESPLIT>1
public void refreshToken ( ) throws OAuthSystemException, OAuthProblemException { cleanError ( ) ; ( accessToken refreshToken ) OAuth (Access token Refresh token ) ; } httpClient new ( ) ; OAuthClientRequest request OAuthClientRequest tokenLocation ( settings getURL ( TOKENREFRESHURL ) ) buildBodyMessage ( ) ; headers new ( ) ; headers put ( OAuthType, OAuth JSON ) ; headers put (UserAgent, this userAgent ) ; params new ( ) ; params put (granttype, GrantType REFRESH ) ; params put (access, accessToken ) ; params put (refresh, refreshToken ) ; body JSON buildJSON ( params ) ; request setBody ( body ) ; updateTokens ( httpClient, request, headers ) ; }<CODESPLIT>Refreshing tokens provides a new set of access and refresh tokens .<CODESPLIT>1
public void syncContactTypeToMain ( ) {FieldContact (Field ) this getMainRecord ( ) getField (Detail ) ; strContactContact ( ) ; this syncRecordToMainField (Contact null strContact ) ; }<CODESPLIT>Read the current file in the header record given the current detail record .<CODESPLIT>0
@ Override ( ) public ChronoZonedDateTime InternationalFixedDate zonedDateTime ( TemporalAccessor temporal ) { return (Fixed super ( temporal ) }<CODESPLIT>A property tied to the map updated when the idle state event is fired .<CODESPLIT>0
private ProtoNetwork stage1 ( final File [ ] networks ) { beginStage ( PHSTH,, NUMPH ) ; = length ; = new ( ) ; (Merging ) ; ( net ) ; ( network ) ; ( ) ( ) ; } stageOutput ( toString ( ) ) ; = ( ) ; CollectionNetwork = sizedArrayList ( ) ; for ( networks ) root = network ( ) ; = as ( root PROTOFILENAME ) ; networkBin = new ( ) ; add ( new BinaryProtoNetwork ( networkBin ) ) ; } ProtoNetwork stageMerger ( ) ; new ( artifactPath ( ) "/merged ) mkdirs ( ) ; stageWriteEquivalentProtoNetwork (, artifactPath ( )merged ) ; (Debug ( ) ) TextProtoNetworkExternal textExternal = new TextProtoNetworkExternal ( ) ; textExternal writeProtoNetwork (, artifactPath ( )merged ) ; } ( ) error ( write out equivalence proto network ) ; } } = ( ) ; setLength ( ) ; markTime (, t, t ) ; markEndStage ( ) ; stageOutput ( toString ( ) ) ; return ret ; }<CODESPLIT>Stage one merger of networks returning the merged proto - network .<CODESPLIT>1
@ Override public EnableStreamingTaskResult enableHlsStreaming ( String spaceId, boolean secure ) throws ContentStoreException {StreamingStreaming ( ; spaceId ;Secure secure ; return EnableStreamingTask deserialize ( contentStore performTask (Task ENHLS, taskParams serialize ( ) ) ) ; }<CODESPLIT>{<CODESPLIT>1
public static Map Entry String, Map String, getSystemBarsCommand ( ) { returnMap ( GETBAR, ImmutableMap ( ) ) }<CODESPLIT>This method forms a { @link Map } of parameters for the getting of a network connection value .<CODESPLIT>0
public Response postQuery ( final String system, final InputStream input, final String resource, final HttpHeaders httpHeaders ) { Jax Systems ( system ) ; (post ) check ( input ) ; param getParameters ( ) ; path ( resource param ) ; return createResponse ( impl, path ) ; }<CODESPLIT>This method will be called when a HTTP client sends a POST request to an existing resource with application / query + xml as Content - Type .<CODESPLIT>1
public boolean hasValue ( int index ) { ( List ) return index ( ( List )baseCollection ) ( ) ; } ( SortedMap ) return index ( ( SortedMap, )baseCollection ) size ( ) ; } return false ; }<CODESPLIT>Prepares this widget dialog parameter to be committed . <p ><CODESPLIT>0
public void marshall ( DescribeDirectConnectGatewayAssociationsRequest describeDirectConnectGatewayAssociationsRequest, ProtocolMarshaller protocolMarshaller ) { ( describeDirectConnectGatewayAssociations ) SdkClientException ( marshall(...)" ) ; } protocolMarshaller marshall ( describeDirectConnectGatewayAssociationsRequest getAssociation ( ),BINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociatedGateway ( )BINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociationsRequest getDirect ( ), DIRECTCONNECTWAYBINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociationsRequest getMaxResults ( ), MAXRESULTSBINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayAssociationsRequest getNextToken ( ), NEXTTOKENBINDING ) ; protocolMarshaller marshall ( describeDirectConnectGatewayVirtualGateway ( )BINDING ) ; } ( ) SdkClientException ( marshall ( ) ) ; } }<CODESPLIT><p > The sources for the applications ( up to 10 ) . If you specify scaling plan names you cannot specify application sources . < / p > <p > <b > NOTE : < / b > This method appends the values to the existing list ( if any ) . Use { @link #setApplicationSources ( java . util . Collection ) } or { @link #withApplicationSources ( java . util . Collection ) } if you want to override the existing values . < / p ><CODESPLIT>0
public Object execEval ( String arg ) { return scriptEngine. eval (eval(" + arg + ) ; } ( Script ) ( evaluating script ) ; } }<CODESPLIT>Returns the JSON object from a string<CODESPLIT>0
@ Override public Map < ServerGroup, EVCacheServerGroupConfig > discoverInstances ( String appName ) throws IOException { propertyName appName ; nodeListStringCache ( )ynamicString ( propertyName ) ( ) ; ( ( ) ) (List Nodes nodeListString ) ( nodeListString nodeListString ( ) ) return bootstrapFromSystem ( nodeListString ) ; ( ) return bootstrapFrom ( ) ; return. ServerGroup,CacheServerGroupConfig emptyMap ( ) ; }<CODESPLIT>Netflix specific impl so we can load from eureka .<CODESPLIT>0
private boolean distinguNameEquals ( String dsn1, String dsn2 ) {500 ( dsn (500 ( dsn }<CODESPLIT>Compare two DSN<CODESPLIT>1
public static BloomKFilter deserialize ( InputStream in ) throws IOException { ( ) (Input stream ) ; } dataInputStream = new ( in ) ;HashFunc = dataInputStream readByte ( ) ;Array = dataInputStream readInt ( ) ; data = newArray ; for ( bitsetArray ) data dataInputStream ( ) ; } return new BloomKFilter ( data, numHashFunc ) ; } ( ) = new ( to deserialize BFilter ) ; io ( ) ; ; } }<CODESPLIT>Deserialize a bloom filter Read a byte stream which was written by { @linkplain #serialize ( OutputStream BloomKFilter ) } into a { @code BloomKFilter }<CODESPLIT>1
public void setRestoreLastValid ( boolean restoreLastValid ) { (Selection ) ( restore ) this restoreLastValid = restoreLastValid ; ( restoreValid ) ( restoreFocus ) restoreFocusValidFocus ( ) addListener ( restoreFocus ) ; } removeListener ( restoreFocus ) ; } }<CODESPLIT>Adds vertical or horizontal {<CODESPLIT>0
public static LongBinding decrementExact ( ObservableLongValue a ) { createLong ( ( decrementExact ( ( }<CODESPLIT>Binding for { @link java . lang . Math#decrementExact ( long ) }<CODESPLIT>1
public static String dgstHex ( InputStream is, Digest digest ) throws IOException { checkNotNull ( ( returnEncoding base16 ( ) encode (Bytes ) ; }<CODESPLIT>Calculates digest and returns the value as a hex string .<CODESPLIT>1
private void write ( TargetType theTarget, ValueSetTm theValueSetTm, File theOutputDirectory, String thePackageBase ) throws IOException { (OutputDirectory ( ) ) theOutputDirectory mkdirs ( ) ; } (OutputDirectory isDirectory ( ) ) (OutputDirectory directory ) ; } value theSet getClassName ( ) ; prefixPrefix ; suffixSuffix ; (Target Target SOURCE ) ( suffix ( ) ) suffixjava ; } } fileName prefix value suffix ; new ( theOutputDirectory fileName ) ; new ( new FileOutputStream ( ) ) ; ourLog (Writing file ( ) ) ; Velocity ctx new Velocity ( ) ; InputStream template null ; ctx put (valueSet theValueSet ) ; ctx put (packageBase thePackageBase ) ; ctx ( newTool ( ) ) ; VelocityEngine v VelocityHelper configureVelocityEngine (TemplateFileVelocityPathVelocityProperties ) ; ( ) template new FileInputStream (TemplateFile ) ; } templateNameTemplate ; ( templateName ) templateName = "/valueset ; } templateIs this ( ) getResourceAsStream ( templateName ) ; } template new ( template ) ; v evaluate ( ctx, w, "", templateReader ) ; w close ( ) ; }<CODESPLIT>}<CODESPLIT>1
@ Override public void store ( Issue issue ) { ( issue ( ) ( ) Default )Input defaultInput (Input ) issue primary ( ) ( ) ; (Storage ( default ) ) return ; } default ) ; }Issues initAndAddIssue ( issue ) ; }<CODESPLIT>Thread safe assuming that each issues for each file are only written once .<CODESPLIT>1
@ Deprecated public Class < > getClassFromCollection ( final String collection ) { Set MappedClass = mappedClassesByCollection ( collection ) ; (cscs isEmpty ( ) ) MappingException ( ( collection mapped java collection ) ) ; } (cs ( ) ) ( isInfoEnabled ( ) ). ( ( one class mapped collection collectioncs ) ) ; } } return mcs. iterator ( ). next ( ). getClazz ( ) ; }<CODESPLIT>Converts a DBObject back to a type - safe java object ( POJO )<CODESPLIT>0
private Token eventuallyMatch ( Token Kind kind ) { checkNot ( ) ; ( ; ( ) return null ; } index = index ; return token ; } }<CODESPLIT>Match a given sequence of tokens whilst moving passed any whitespace encountered inbetween . In the case that meet the end of the stream or we don t match the expected tokens in the expected order then an error is thrown .<CODESPLIT>0
public static Whrung of ( CurrencyUnit currencyUnit ) { (run return (h ) currency ; } return ( currency getCurrency ( ) ) ; } }<CODESPLIT>Gibt die entsprechende Currency als Waehrung zurueck .<CODESPLIT>1
private Content processParamTags ( boolean isNonTypeParams, ParamTag [ ] paramTags, Map < String, String > rankMap, TagletWriter writer, Set < String > alreadyDocumented ) { Content writer getOutputInstance ( ) ; ( paramTags ) (Tags ) ParamTag = paramTags ; paramNameNon pt parameterName ( ) "<" pt parameterName ( ) ; ( rankMap ( parameterName ( ) ) ) writer ( ) warning ( position ( )NonTypeParamsdocletParameterswarn :docletTypeParameterswarn paramName ) ; } rank rankMap ( pt parameterName ( ) ) ; ( rank ( rank ) ) writer ( ) warning ( position ( )NonTypeParamsdocletParametersdupwarn :docletTypeParametersdupwarn paramName ) ; } addContent ( processParamTag (NonTypeParams writer parameterName ( ) alreadyDocument ( ) ) ) ; alreadyDocument add ( rank ) ; } } return result ; }<CODESPLIT>Checks the current system time against the time limit throwing an InterruptedException if the time is up .<CODESPLIT>0
public void setVersions ( java util Collection String > versions ) { ( ) this versions ; return ; } this versions com amazonaws internal SdkInternalList ( versions ; }<CODESPLIT><p > The version numbers of one or more launch template versions to delete . < / p ><CODESPLIT>0
private static ScriptRunner getRunner ( ) throws IOException { ( shared ( ) ) ScriptRunner runner ScriptRunnerFactory createRunner ( ) ; runner loadScript (SL getResource (dump ) ) ; runner loadScript (SL getResource (itejs ) ) ; runner loadScript (SL getResource (formatsjs ) ) ; runner loadScript (SL getResource (loadjs ) ) ; } ( Script ) ( javascript file ) ; } ( runner ) ; } return sharedRunner. get ( ) ; }<CODESPLIT>Calculates a list of available citation locales<CODESPLIT>0
public AbstractPrintQuery addMsgPhrase ( final SelectBuilder _selectBldr, final UUID... _msgPhrase ) throws EFapsException {Phrase ( ; (msg ) (Phrase ( ; } return addMsgPhrase ( _selectB, msgph toArray ( MsgPhrase msgph size ( ) ) ) ; }<CODESPLIT>Adds the msg phrase .<CODESPLIT>1
private String extractAttributes ( SoyMsg msg ) { attributes new ( ) ; MESSAGE ( getDesc ( ) ) ; ( ( attributes ( ( ) ) ; } return attributes. toString ( ) ; }<CODESPLIT>Extracts message attributes from the message description . Returns an empty {<CODESPLIT>1
VoltTable [ ] executeSlowHomogeneousBatch ( final List < QueuedSQL > batch, final boolean finalTask ) { MpTransactionState txnState = ( MpTransactionState ) m_txnState ; ( txnState null ) ; BatchState state = new BatchState ( batch ( ) txnStatesite getCor ( )TaskprocedureToLoadForFragmentTasksCallStats samplingStmt ( ) ) ; for ( batch ( ) ) QueSQL queuedSQL = batch ( ) ; ( queuedSQL null ) ; collectorOutput =State getNextDependency ( ) ; state. m_ToResume = collectorOutputDepId ; ByteBuffer param = null ; paramBuf = ByteBuffer allocate ( queuedSQL paramsSerializedSize ( ) ) ; queuedSQL params flattenToBuffer ( paramBuf ) ; } ( ) ( serial parameters SQL statementSQL stmt ( ) paramsSQL paramsString ( ) ) ; } ( param null ) ; paramBuf flip ( ) ; state addStatement (, queuedSQL stmt, paramBuf, msite ) ; }State setupProcedureResume ( statedepsResume ) ; for ( state mdepsLocal ) (depsForLocal ) } statelocal setInput ( statedepsForLocal ) ; } mtxnState createLocalFragmentWork ( state mlocalTask, state mlocalFragsAreNonTransaction && finalTask ) ; (distributed isEmpty ( ) ) statedis (batch ) ; mtxnState createAllPartFragmentWork ( state mdistributedTask ) ; } Map VoltTable mapResults =site recursRun (State ) ; ( mapResults null ) ; assert ( statedepsToResume null ) ; assert ( state mdepsToResume length batch size ( ) ) ; for ( batch ( ) ) VoltTable matchingTablesFor = mapResults ( statedepsToResume ) ; assert ( matchingTablesFor null ) ; assert ( matchingTablesForId size ( ) ) ; state mresults =Tables ( ) ; } return state. m_results ; }<CODESPLIT>/ * Execute a batch of homogeneous queries i . e . all reads or all writes .<CODESPLIT>1
public GrpcServer start ( ) throws IOException { Retry retry (Starting gRPC server ( )Server ( ) ( 500 ) ) ;Started ; return this ; }<CODESPLIT>Start serving .<CODESPLIT>1
public Chunk new_close ( ) { compress ( ; ( Append ) ( ( Append ) ) close ( ) return chk ; }<CODESPLIT>Slow - path append data<CODESPLIT>0
public static, V Predicate Map K, V anyEntry ( Predicate Map Entry K, V p ) { return forEntries ( Pred Map Entry, any ( ) ) ; }<CODESPLIT>Returns a predicate that evaluates to {<CODESPLIT>0
public static, U BiPredicate, U biPredicate ( CheckedBiPredicate, U predicate ) { return biPredicate ( predicate THUNTIMEEXCEPTION }<CODESPLIT>Wrap a {<CODESPLIT>0
private int calcFuByJanto ( ) { TileantoTile = comp. getJanto ( ). getTile ( ) ; = ; (toTile general getB ( ) ) += ; } (toTile personalS ( ) ) += ; } (toTile ( ) ) += ; } return tmp ; }<CODESPLIT>待ちの種類による可符<CODESPLIT>0
@ Override publicRoleToDBInstance addRoleToDBInstance (RoleToDBInstance request ) { beforeClientExecution request execute ( request }<CODESPLIT>Marshall the given parameter object .<CODESPLIT>0
public static Object getValue ( Name name, int index ) { Assert notNull ( name,name null ) ; LdapName ldapName returnOrConstructLdapNameFromName ( name ) ; ldapName getR ( index ) ; ( ( ) ) warn (R position index dn name multivalue value to trustedCons using namebased method instead ) ; } return rdn. getValue ( ) ; }<CODESPLIT>Get the value of the Rdn with the requested key in the supplied Name as a String .<CODESPLIT>0
